
out/project.elf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__text_start>:
       0:	10000f40 	.word	0x10000f40
       4:	00000201 	.word	0x00000201
	...
      7c:	00000825 	.word	0x00000825
      80:	00000101 	.word	0x00000101
	...
      94:	00000671 	.word	0x00000671
	...

000000a0 <__do_global_dtors_aux>:
      a0:	b510      	push	{r4, lr}
      a2:	4c06      	ldr	r4, [pc, #24]	; (bc <__do_global_dtors_aux+0x1c>)
      a4:	7823      	ldrb	r3, [r4, #0]
      a6:	2b00      	cmp	r3, #0
      a8:	d107      	bne.n	ba <__do_global_dtors_aux+0x1a>
      aa:	4805      	ldr	r0, [pc, #20]	; (c0 <__do_global_dtors_aux+0x20>)
      ac:	2800      	cmp	r0, #0
      ae:	d002      	beq.n	b6 <__do_global_dtors_aux+0x16>
      b0:	4804      	ldr	r0, [pc, #16]	; (c4 <__do_global_dtors_aux+0x24>)
      b2:	e000      	b.n	b6 <__do_global_dtors_aux+0x16>
      b4:	bf00      	nop
      b6:	2101      	movs	r1, #1
      b8:	7021      	strb	r1, [r4, #0]
      ba:	bd10      	pop	{r4, pc}
      bc:	10000848 	.word	0x10000848
      c0:	00000000 	.word	0x00000000
      c4:	00003790 	.word	0x00003790

000000c8 <frame_dummy>:
      c8:	b508      	push	{r3, lr}
      ca:	4b08      	ldr	r3, [pc, #32]	; (ec <frame_dummy+0x24>)
      cc:	2b00      	cmp	r3, #0
      ce:	d003      	beq.n	d8 <frame_dummy+0x10>
      d0:	4807      	ldr	r0, [pc, #28]	; (f0 <frame_dummy+0x28>)
      d2:	4908      	ldr	r1, [pc, #32]	; (f4 <frame_dummy+0x2c>)
      d4:	e000      	b.n	d8 <frame_dummy+0x10>
      d6:	bf00      	nop
      d8:	4807      	ldr	r0, [pc, #28]	; (f8 <frame_dummy+0x30>)
      da:	6801      	ldr	r1, [r0, #0]
      dc:	2900      	cmp	r1, #0
      de:	d003      	beq.n	e8 <frame_dummy+0x20>
      e0:	4a06      	ldr	r2, [pc, #24]	; (fc <frame_dummy+0x34>)
      e2:	2a00      	cmp	r2, #0
      e4:	d000      	beq.n	e8 <frame_dummy+0x20>
      e6:	4790      	blx	r2
      e8:	bd08      	pop	{r3, pc}
      ea:	46c0      	nop			; (mov r8, r8)
      ec:	00000000 	.word	0x00000000
      f0:	00003790 	.word	0x00003790
      f4:	1000084c 	.word	0x1000084c
      f8:	10000844 	.word	0x10000844
      fc:	00000000 	.word	0x00000000

00000100 <_Z15TIMER0_OVF_vectv>:
void TIMER0_OVF_vect()
{
  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access)
  unsigned long m = timer0_millis;
  unsigned char f = timer0_fract;
     100:	490a      	ldr	r1, [pc, #40]	; (12c <_Z15TIMER0_OVF_vectv+0x2c>)

void TIMER0_OVF_vect()
{
  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access)
  unsigned long m = timer0_millis;
     102:	480b      	ldr	r0, [pc, #44]	; (130 <_Z15TIMER0_OVF_vectv+0x30>)
  unsigned char f = timer0_fract;
     104:	780b      	ldrb	r3, [r1, #0]

void TIMER0_OVF_vect()
{
  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access)
  unsigned long m = timer0_millis;
     106:	6802      	ldr	r2, [r0, #0]
  unsigned char f = timer0_fract;

  m += MILLIS_INC;
  f += FRACT_INC;
  if (f >= FRACT_MAX) {
     108:	2b7c      	cmp	r3, #124	; 0x7c
     10a:	d801      	bhi.n	110 <_Z15TIMER0_OVF_vectv+0x10>
  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access)
  unsigned long m = timer0_millis;
  unsigned char f = timer0_fract;

  m += MILLIS_INC;
     10c:	3201      	adds	r2, #1
     10e:	e002      	b.n	116 <_Z15TIMER0_OVF_vectv+0x16>
  f += FRACT_INC;
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
     110:	3b7d      	subs	r3, #125	; 0x7d
     112:	b2db      	uxtb	r3, r3
    m += 1;
     114:	3202      	adds	r2, #2
  }

  timer0_fract = f;
  timer0_millis = m;
     116:	6002      	str	r2, [r0, #0]
  timer0_overflow_count++;
     118:	4806      	ldr	r0, [pc, #24]	; (134 <_Z15TIMER0_OVF_vectv+0x34>)
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
    m += 1;
  }

  timer0_fract = f;
     11a:	700b      	strb	r3, [r1, #0]
  timer0_millis = m;
  timer0_overflow_count++;
     11c:	6802      	ldr	r2, [r0, #0]

  //  Clear the interrupt flag
  TMR16B0IR     = 1;
     11e:	4b06      	ldr	r3, [pc, #24]	; (138 <_Z15TIMER0_OVF_vectv+0x38>)
    m += 1;
  }

  timer0_fract = f;
  timer0_millis = m;
  timer0_overflow_count++;
     120:	3201      	adds	r2, #1

  //  Clear the interrupt flag
  TMR16B0IR     = 1;
     122:	2101      	movs	r1, #1
    m += 1;
  }

  timer0_fract = f;
  timer0_millis = m;
  timer0_overflow_count++;
     124:	6002      	str	r2, [r0, #0]

  //  Clear the interrupt flag
  TMR16B0IR     = 1;
     126:	6019      	str	r1, [r3, #0]
}
     128:	4770      	bx	lr
     12a:	46c0      	nop			; (mov r8, r8)
     12c:	10000868 	.word	0x10000868
     130:	1000086c 	.word	0x1000086c
     134:	10000864 	.word	0x10000864
     138:	4000c000 	.word	0x4000c000

0000013c <_Z4initv>:
void init()
{
  uint32_t i;

  //  run the PLL at 48 mhz using the 12 mhz internal resonator as the source
  PDRUNCFG     &= ~(1 << 5);          // Power-up System Osc      
     13c:	4a21      	ldr	r2, [pc, #132]	; (1c4 <_Z4initv+0x88>)
     13e:	2120      	movs	r1, #32
     140:	6813      	ldr	r3, [r2, #0]
  SYSOSCCTRL    = 0x00000000;
     142:	2000      	movs	r0, #0
void init()
{
  uint32_t i;

  //  run the PLL at 48 mhz using the 12 mhz internal resonator as the source
  PDRUNCFG     &= ~(1 << 5);          // Power-up System Osc      
     144:	438b      	bics	r3, r1
     146:	6013      	str	r3, [r2, #0]
  SYSOSCCTRL    = 0x00000000;
     148:	4b1f      	ldr	r3, [pc, #124]	; (1c8 <_Z4initv+0x8c>)
     14a:	1c11      	adds	r1, r2, #0
     14c:	6018      	str	r0, [r3, #0]
     14e:	23c8      	movs	r3, #200	; 0xc8
  for (i = 0; i < 200; i++) asm("nop");
     150:	46c0      	nop			; (mov r8, r8)
     152:	3b01      	subs	r3, #1
     154:	2b00      	cmp	r3, #0
     156:	d1fb      	bne.n	150 <_Z4initv+0x14>
  SYSPLLCLKSEL  = 0x00000000;         // Select PLL Input         
     158:	4a1c      	ldr	r2, [pc, #112]	; (1cc <_Z4initv+0x90>)
  SYSPLLCLKUEN  = 0x01;               // Update Clock Source      
     15a:	2001      	movs	r0, #1

  //  run the PLL at 48 mhz using the 12 mhz internal resonator as the source
  PDRUNCFG     &= ~(1 << 5);          // Power-up System Osc      
  SYSOSCCTRL    = 0x00000000;
  for (i = 0; i < 200; i++) asm("nop");
  SYSPLLCLKSEL  = 0x00000000;         // Select PLL Input         
     15c:	6013      	str	r3, [r2, #0]
  SYSPLLCLKUEN  = 0x01;               // Update Clock Source      
     15e:	4a1c      	ldr	r2, [pc, #112]	; (1d0 <_Z4initv+0x94>)
     160:	6010      	str	r0, [r2, #0]
  SYSPLLCLKUEN  = 0x00;               // Toggle Update Register   
     162:	6013      	str	r3, [r2, #0]
  SYSPLLCLKUEN  = 0x01;
     164:	6010      	str	r0, [r2, #0]
  while (!(SYSPLLCLKUEN & 0x01));     // Wait Until Updated       
     166:	6813      	ldr	r3, [r2, #0]
     168:	07d8      	lsls	r0, r3, #31
     16a:	d5fc      	bpl.n	166 <_Z4initv+0x2a>
  SYSPLLCTRL    = 0x00000023;
     16c:	4819      	ldr	r0, [pc, #100]	; (1d4 <_Z4initv+0x98>)
     16e:	2223      	movs	r2, #35	; 0x23
     170:	6002      	str	r2, [r0, #0]
  PDRUNCFG     &= ~(1 << 7);          // Power-up SYSPLL          
     172:	680b      	ldr	r3, [r1, #0]
     174:	2280      	movs	r2, #128	; 0x80
     176:	4393      	bics	r3, r2
     178:	600b      	str	r3, [r1, #0]
  while (!(SYSPLLSTAT & 0x01));       // Wait Until PLL Locked    
     17a:	4917      	ldr	r1, [pc, #92]	; (1d8 <_Z4initv+0x9c>)
     17c:	2201      	movs	r2, #1
     17e:	6808      	ldr	r0, [r1, #0]
     180:	4210      	tst	r0, r2
     182:	d0fa      	beq.n	17a <_Z4initv+0x3e>
  MAINCLKSEL    = 0x00000003;         // Select PLL Clock Output  
     184:	4b15      	ldr	r3, [pc, #84]	; (1dc <_Z4initv+0xa0>)
  MAINCLKUEN    = 0x01;               // Update MCLK Clock Source 
     186:	4816      	ldr	r0, [pc, #88]	; (1e0 <_Z4initv+0xa4>)
  SYSPLLCLKUEN  = 0x01;
  while (!(SYSPLLCLKUEN & 0x01));     // Wait Until Updated       
  SYSPLLCTRL    = 0x00000023;
  PDRUNCFG     &= ~(1 << 7);          // Power-up SYSPLL          
  while (!(SYSPLLSTAT & 0x01));       // Wait Until PLL Locked    
  MAINCLKSEL    = 0x00000003;         // Select PLL Clock Output  
     188:	2103      	movs	r1, #3
     18a:	6019      	str	r1, [r3, #0]
  MAINCLKUEN    = 0x01;               // Update MCLK Clock Source 
  MAINCLKUEN    = 0x00;               // Toggle Update Register   
     18c:	2100      	movs	r1, #0
  while (!(SYSPLLCLKUEN & 0x01));     // Wait Until Updated       
  SYSPLLCTRL    = 0x00000023;
  PDRUNCFG     &= ~(1 << 7);          // Power-up SYSPLL          
  while (!(SYSPLLSTAT & 0x01));       // Wait Until PLL Locked    
  MAINCLKSEL    = 0x00000003;         // Select PLL Clock Output  
  MAINCLKUEN    = 0x01;               // Update MCLK Clock Source 
     18e:	6002      	str	r2, [r0, #0]
  MAINCLKUEN    = 0x00;               // Toggle Update Register   
     190:	6001      	str	r1, [r0, #0]
  MAINCLKUEN    = 0x01;
     192:	6002      	str	r2, [r0, #0]
  while (!(MAINCLKUEN & 0x01));       // Wait Until Updated       
     194:	6803      	ldr	r3, [r0, #0]
     196:	2201      	movs	r2, #1
     198:	4213      	tst	r3, r2
     19a:	d0fb      	beq.n	194 <_Z4initv+0x58>
  
  //  enable clocks on advanced high-performance bus
  SYSAHBCLKCTRL = 0x3FFFF;
     19c:	4811      	ldr	r0, [pc, #68]	; (1e4 <_Z4initv+0xa8>)
     19e:	4912      	ldr	r1, [pc, #72]	; (1e8 <_Z4initv+0xac>)

  //  configure timers
  //  the concept here is to run the TMR16B0 at 1 Mhz (tick per microsecond) 
  //  and run the ISR ever millisecond.
  TMR16B0PR     = 47;                  // divide the 48 Mhz clock by 48
     1a0:	4b12      	ldr	r3, [pc, #72]	; (1ec <_Z4initv+0xb0>)
  MAINCLKUEN    = 0x00;               // Toggle Update Register   
  MAINCLKUEN    = 0x01;
  while (!(MAINCLKUEN & 0x01));       // Wait Until Updated       
  
  //  enable clocks on advanced high-performance bus
  SYSAHBCLKCTRL = 0x3FFFF;
     1a2:	6008      	str	r0, [r1, #0]

  //  configure timers
  //  the concept here is to run the TMR16B0 at 1 Mhz (tick per microsecond) 
  //  and run the ISR ever millisecond.
  TMR16B0PR     = 47;                  // divide the 48 Mhz clock by 48
     1a4:	202f      	movs	r0, #47	; 0x2f
     1a6:	6018      	str	r0, [r3, #0]
  TMR16B0MCR    = 3;                   // reset and interrupt on match
     1a8:	4811      	ldr	r0, [pc, #68]	; (1f0 <_Z4initv+0xb4>)
     1aa:	2103      	movs	r1, #3
     1ac:	6001      	str	r1, [r0, #0]
  TMR16B0MR0    = 1000;                // matching on 1000
     1ae:	23fa      	movs	r3, #250	; 0xfa
     1b0:	4810      	ldr	r0, [pc, #64]	; (1f4 <_Z4initv+0xb8>)
     1b2:	0099      	lsls	r1, r3, #2
  ISER          = 0x10000;             // enable timer0 interrupt
     1b4:	2380      	movs	r3, #128	; 0x80
  //  configure timers
  //  the concept here is to run the TMR16B0 at 1 Mhz (tick per microsecond) 
  //  and run the ISR ever millisecond.
  TMR16B0PR     = 47;                  // divide the 48 Mhz clock by 48
  TMR16B0MCR    = 3;                   // reset and interrupt on match
  TMR16B0MR0    = 1000;                // matching on 1000
     1b6:	6001      	str	r1, [r0, #0]
  ISER          = 0x10000;             // enable timer0 interrupt
     1b8:	0259      	lsls	r1, r3, #9
     1ba:	480f      	ldr	r0, [pc, #60]	; (1f8 <_Z4initv+0xbc>)
  TMR16B0TCR    = 0x1;                 // enable timer
     1bc:	4b0f      	ldr	r3, [pc, #60]	; (1fc <_Z4initv+0xc0>)
  //  the concept here is to run the TMR16B0 at 1 Mhz (tick per microsecond) 
  //  and run the ISR ever millisecond.
  TMR16B0PR     = 47;                  // divide the 48 Mhz clock by 48
  TMR16B0MCR    = 3;                   // reset and interrupt on match
  TMR16B0MR0    = 1000;                // matching on 1000
  ISER          = 0x10000;             // enable timer0 interrupt
     1be:	6001      	str	r1, [r0, #0]
  TMR16B0TCR    = 0x1;                 // enable timer
     1c0:	601a      	str	r2, [r3, #0]

}
     1c2:	4770      	bx	lr
     1c4:	40048238 	.word	0x40048238
     1c8:	40048020 	.word	0x40048020
     1cc:	40048040 	.word	0x40048040
     1d0:	40048044 	.word	0x40048044
     1d4:	40048008 	.word	0x40048008
     1d8:	4004800c 	.word	0x4004800c
     1dc:	40048070 	.word	0x40048070
     1e0:	40048074 	.word	0x40048074
     1e4:	0003ffff 	.word	0x0003ffff
     1e8:	40048080 	.word	0x40048080
     1ec:	4000c00c 	.word	0x4000c00c
     1f0:	4000c014 	.word	0x4000c014
     1f4:	4000c018 	.word	0x4000c018
     1f8:	e000e100 	.word	0xe000e100
     1fc:	4000c004 	.word	0x4000c004

00000200 <__startup>:
      0,          /* IRQ20 - SPI0    */
      UART_IRQHandler           /* IRQ21 - UART    */

};

void __startup(void){
     200:	b510      	push	{r4, lr}
   extern int __init_array_end;
   
	 int *s, *d, *e;

	 // clear .bss section 
	 d = & __bss_start;
     202:	4911      	ldr	r1, [pc, #68]	; (248 <__startup+0x48>)
	 e = & __bss_end;
	 while( d != e ){
     204:	4a11      	ldr	r2, [pc, #68]	; (24c <__startup+0x4c>)
     206:	4291      	cmp	r1, r2
     208:	d002      	beq.n	210 <__startup+0x10>
	    *d++ = 0;
     20a:	2200      	movs	r2, #0
     20c:	c104      	stmia	r1!, {r2}
     20e:	e7f9      	b.n	204 <__startup+0x4>
      0,          /* IRQ20 - SPI0    */
      UART_IRQHandler           /* IRQ21 - UART    */

};

void __startup(void){
     210:	490f      	ldr	r1, [pc, #60]	; (250 <__startup+0x50>)
     212:	4a10      	ldr	r2, [pc, #64]	; (254 <__startup+0x54>)
     214:	1a88      	subs	r0, r1, r2
     216:	0883      	lsrs	r3, r0, #2
     218:	3301      	adds	r3, #1
     21a:	0099      	lsls	r1, r3, #2
     21c:	2300      	movs	r3, #0
     21e:	3304      	adds	r3, #4
	 
	 // copy .data section from flash to ram
	 s = & __data_init_start;
	 d = & __data_start;
	 e = & __data_end;
	 while( d != e ){ 
     220:	428b      	cmp	r3, r1
     222:	d007      	beq.n	234 <__startup+0x34>
      0,          /* IRQ20 - SPI0    */
      UART_IRQHandler           /* IRQ21 - UART    */

};

void __startup(void){
     224:	4c0c      	ldr	r4, [pc, #48]	; (258 <__startup+0x58>)
     226:	18d0      	adds	r0, r2, r3
     228:	191c      	adds	r4, r3, r4
     22a:	3c04      	subs	r4, #4
	 // copy .data section from flash to ram
	 s = & __data_init_start;
	 d = & __data_start;
	 e = & __data_end;
	 while( d != e ){ 
	    *d++ = *s++;
     22c:	6824      	ldr	r4, [r4, #0]
      0,          /* IRQ20 - SPI0    */
      UART_IRQHandler           /* IRQ21 - UART    */

};

void __startup(void){
     22e:	3804      	subs	r0, #4
	 // copy .data section from flash to ram
	 s = & __data_init_start;
	 d = & __data_start;
	 e = & __data_end;
	 while( d != e ){ 
	    *d++ = *s++;
     230:	6004      	str	r4, [r0, #0]
     232:	e7f4      	b.n	21e <__startup+0x1e>
	 
	 // copy .data section from flash to ram
	 s = & __data_init_start;
	 d = & __data_start;
	 e = & __data_end;
	 while( d != e ){ 
     234:	4c09      	ldr	r4, [pc, #36]	; (25c <__startup+0x5c>)
	 } 
	 
	 // call the constructorts of global objects
	 s = & __init_array_start;
	 e = & __init_array_end;
	 while( s != e ){
     236:	4a0a      	ldr	r2, [pc, #40]	; (260 <__startup+0x60>)
     238:	4294      	cmp	r4, r2
     23a:	d002      	beq.n	242 <__startup+0x42>
	    (*((void(**)())s++))();
     23c:	cc02      	ldmia	r4!, {r1}
     23e:	4788      	blx	r1
     240:	e7f9      	b.n	236 <__startup+0x36>
	 }
  
   // call main   
   (void) main(); 
     242:	f000 fae7 	bl	814 <main>
     246:	e7fe      	b.n	246 <__startup+0x46>
     248:	10000848 	.word	0x10000848
     24c:	10000b3c 	.word	0x10000b3c
     250:	10000844 	.word	0x10000844
     254:	10000000 	.word	0x10000000
     258:	000037b8 	.word	0x000037b8
     25c:	0000379c 	.word	0x0000379c
     260:	000037a8 	.word	0x000037a8

00000264 <_Z7pinModehh>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
     264:	b510      	push	{r4, lr}
	uint32_t bit = digitalPinToBitMask(pin);
	uint32_t port = digitalPinToPort(pin);
     266:	4c12      	ldr	r4, [pc, #72]	; (2b0 <_Z7pinModehh+0x4c>)
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
	uint32_t bit = digitalPinToBitMask(pin);
     268:	0042      	lsls	r2, r0, #1
     26a:	4b12      	ldr	r3, [pc, #72]	; (2b4 <_Z7pinModehh+0x50>)
	uint32_t port = digitalPinToPort(pin);
     26c:	5c20      	ldrb	r0, [r4, r0]
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
	uint32_t bit = digitalPinToBitMask(pin);
     26e:	5ad2      	ldrh	r2, [r2, r3]
	uint32_t port = digitalPinToPort(pin);
	volatile uint32_t *reg, *out;

	if (port == NOT_A_PIN) return;
     270:	2800      	cmp	r0, #0
     272:	d01b      	beq.n	2ac <_Z7pinModehh+0x48>

	// JWS: can I let the optimizer do this?
	reg = (uint32_t *)portModeRegister(port);
     274:	4b10      	ldr	r3, [pc, #64]	; (2b8 <_Z7pinModehh+0x54>)
	out = (uint32_t *)portOutputRegister(port);
     276:	4c11      	ldr	r4, [pc, #68]	; (2bc <_Z7pinModehh+0x58>)
	volatile uint32_t *reg, *out;

	if (port == NOT_A_PIN) return;

	// JWS: can I let the optimizer do this?
	reg = (uint32_t *)portModeRegister(port);
     278:	0080      	lsls	r0, r0, #2
     27a:	581b      	ldr	r3, [r3, r0]
	out = (uint32_t *)portOutputRegister(port);
     27c:	5820      	ldr	r0, [r4, r0]

	if (mode == INPUT) { 
	        noInterrupts();
     27e:	b672      	cpsid	i

	// JWS: can I let the optimizer do this?
	reg = (uint32_t *)portModeRegister(port);
	out = (uint32_t *)portOutputRegister(port);

	if (mode == INPUT) { 
     280:	2900      	cmp	r1, #0
     282:	d106      	bne.n	292 <_Z7pinModehh+0x2e>
	        noInterrupts();
         	*reg &= ~bit;
     284:	6819      	ldr	r1, [r3, #0]
     286:	43d2      	mvns	r2, r2
     288:	4011      	ands	r1, r2
     28a:	6019      	str	r1, [r3, #0]
		*out &= ~bit;
     28c:	6804      	ldr	r4, [r0, #0]
     28e:	4022      	ands	r2, r4
     290:	e006      	b.n	2a0 <_Z7pinModehh+0x3c>
		interrupts();
	} else if (mode == INPUT_PULLUP) {
     292:	2902      	cmp	r1, #2
     294:	d106      	bne.n	2a4 <_Z7pinModehh+0x40>
	        noInterrupts();
		*reg &= ~bit;
     296:	681c      	ldr	r4, [r3, #0]
     298:	4394      	bics	r4, r2
     29a:	601c      	str	r4, [r3, #0]
		*out |= bit;
     29c:	6803      	ldr	r3, [r0, #0]
     29e:	431a      	orrs	r2, r3
     2a0:	6002      	str	r2, [r0, #0]
     2a2:	e002      	b.n	2aa <_Z7pinModehh+0x46>
		interrupts();
	} else {
	        noInterrupts();
		*reg |= bit;
     2a4:	6819      	ldr	r1, [r3, #0]
     2a6:	430a      	orrs	r2, r1
     2a8:	601a      	str	r2, [r3, #0]
		interrupts();
     2aa:	b662      	cpsie	i
	}
}
     2ac:	bd10      	pop	{r4, pc}
     2ae:	46c0      	nop			; (mov r8, r8)
     2b0:	000035d4 	.word	0x000035d4
     2b4:	000035ac 	.word	0x000035ac
     2b8:	000035e8 	.word	0x000035e8
     2bc:	00003598 	.word	0x00003598

000002c0 <_Z12digitalWritehh>:
}

void digitalWrite(uint8_t pin, uint8_t val)
{
	uint32_t timer = digitalPinToTimer(pin);
	uint32_t bit = digitalPinToBitMask(pin);
     2c0:	4b0a      	ldr	r3, [pc, #40]	; (2ec <_Z12digitalWritehh+0x2c>)
     2c2:	0042      	lsls	r2, r0, #1
     2c4:	5ad2      	ldrh	r2, [r2, r3]
	uint32_t port = digitalPinToPort(pin);
     2c6:	4b0a      	ldr	r3, [pc, #40]	; (2f0 <_Z12digitalWritehh+0x30>)
     2c8:	5c18      	ldrb	r0, [r3, r0]
	uint32_t *out;

	if (port == NOT_A_PIN) return;
     2ca:	2800      	cmp	r0, #0
     2cc:	d00c      	beq.n	2e8 <_Z12digitalWritehh+0x28>

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	out = (uint32_t *)portOutputRegister(port);
     2ce:	0083      	lsls	r3, r0, #2
     2d0:	4808      	ldr	r0, [pc, #32]	; (2f4 <_Z12digitalWritehh+0x34>)
     2d2:	581b      	ldr	r3, [r3, r0]

	noInterrupts();
     2d4:	b672      	cpsid	i
     2d6:	6818      	ldr	r0, [r3, #0]

	if (val == LOW) {
     2d8:	2900      	cmp	r1, #0
     2da:	d102      	bne.n	2e2 <_Z12digitalWritehh+0x22>
		*out &= ~bit;
     2dc:	4390      	bics	r0, r2
     2de:	6018      	str	r0, [r3, #0]
     2e0:	e001      	b.n	2e6 <_Z12digitalWritehh+0x26>
	} else {
		*out |= bit;
     2e2:	4302      	orrs	r2, r0
     2e4:	601a      	str	r2, [r3, #0]
	}

	interrupts();
     2e6:	b662      	cpsie	i
}
     2e8:	4770      	bx	lr
     2ea:	46c0      	nop			; (mov r8, r8)
     2ec:	000035ac 	.word	0x000035ac
     2f0:	000035d4 	.word	0x000035d4
     2f4:	00003598 	.word	0x00003598

000002f8 <_Z8mainmenuv>:
      mainmenu();
    }  
}

void mainmenu()
{
     2f8:	b510      	push	{r4, lr}
  Serial.println("Main Menu - Restrictor Plate v0.1");
     2fa:	4c11      	ldr	r4, [pc, #68]	; (340 <_Z8mainmenuv+0x48>)
     2fc:	4911      	ldr	r1, [pc, #68]	; (344 <_Z8mainmenuv+0x4c>)
     2fe:	1c20      	adds	r0, r4, #0
     300:	f000 fc38 	bl	b74 <_ZN5Print7printlnEPKc>
  Serial.println("1.  LED ON");
     304:	1c20      	adds	r0, r4, #0
     306:	4910      	ldr	r1, [pc, #64]	; (348 <_Z8mainmenuv+0x50>)
     308:	f000 fc34 	bl	b74 <_ZN5Print7printlnEPKc>
  Serial.println("2.  LED OFF");
     30c:	1c20      	adds	r0, r4, #0
     30e:	490f      	ldr	r1, [pc, #60]	; (34c <_Z8mainmenuv+0x54>)
     310:	f000 fc30 	bl	b74 <_ZN5Print7printlnEPKc>
  Serial.println("3.  MPU6050 WHO_AM_I");
     314:	1c20      	adds	r0, r4, #0
     316:	490e      	ldr	r1, [pc, #56]	; (350 <_Z8mainmenuv+0x58>)
     318:	f000 fc2c 	bl	b74 <_ZN5Print7printlnEPKc>
  Serial.println("4.  Clear sleep");
     31c:	1c20      	adds	r0, r4, #0
     31e:	490d      	ldr	r1, [pc, #52]	; (354 <_Z8mainmenuv+0x5c>)
     320:	f000 fc28 	bl	b74 <_ZN5Print7printlnEPKc>
  Serial.println("5.  Read X gyro");
     324:	1c20      	adds	r0, r4, #0
     326:	490c      	ldr	r1, [pc, #48]	; (358 <_Z8mainmenuv+0x60>)
     328:	f000 fc24 	bl	b74 <_ZN5Print7printlnEPKc>
  Serial.println("6.  Read temp");
     32c:	1c20      	adds	r0, r4, #0
     32e:	490b      	ldr	r1, [pc, #44]	; (35c <_Z8mainmenuv+0x64>)
     330:	f000 fc20 	bl	b74 <_ZN5Print7printlnEPKc>
  Serial.print("==> ");
     334:	1c20      	adds	r0, r4, #0
     336:	490a      	ldr	r1, [pc, #40]	; (360 <_Z8mainmenuv+0x68>)
     338:	f000 fc07 	bl	b4a <_ZN5Print5printEPKc>
}
     33c:	bd10      	pop	{r4, pc}
     33e:	46c0      	nop			; (mov r8, r8)
     340:	100008cc 	.word	0x100008cc
     344:	000035fc 	.word	0x000035fc
     348:	0000361e 	.word	0x0000361e
     34c:	00003629 	.word	0x00003629
     350:	00003635 	.word	0x00003635
     354:	0000364a 	.word	0x0000364a
     358:	0000365a 	.word	0x0000365a
     35c:	0000366a 	.word	0x0000366a
     360:	00003678 	.word	0x00003678

00000364 <_Z5setupv>:
#define MPU6050_TEMP_L           (uint8_t)0x42

void mainmenu();

void setup()
{
     364:	b508      	push	{r3, lr}
  Serial.begin(9600);
     366:	2196      	movs	r1, #150	; 0x96
     368:	0189      	lsls	r1, r1, #6
     36a:	4806      	ldr	r0, [pc, #24]	; (384 <_Z5setupv+0x20>)
     36c:	f000 f9f2 	bl	754 <_ZN14HardwareSerial5beginEm>
  Wire.begin();
     370:	4805      	ldr	r0, [pc, #20]	; (388 <_Z5setupv+0x24>)
     372:	f000 fb77 	bl	a64 <_ZN7TwoWire5beginEv>
  pinMode(LEDPIN, OUTPUT);
     376:	200e      	movs	r0, #14
     378:	2101      	movs	r1, #1
     37a:	f7ff ff73 	bl	264 <_Z7pinModehh>
  mainmenu();
     37e:	f7ff ffbb 	bl	2f8 <_Z8mainmenuv>
}
     382:	bd08      	pop	{r3, pc}
     384:	100008cc 	.word	0x100008cc
     388:	10000a70 	.word	0x10000a70
     38c:	00000000 	.word	0x00000000

00000390 <_Z4loopv>:

void loop()
{
     390:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(Serial.available())
     392:	4c71      	ldr	r4, [pc, #452]	; (558 <__main_stack_size+0x158>)
     394:	1c20      	adds	r0, r4, #0
     396:	f000 f903 	bl	5a0 <_ZN14HardwareSerial9availableEv>
     39a:	2800      	cmp	r0, #0
     39c:	d100      	bne.n	3a0 <_Z4loopv+0x10>
     39e:	e0c8      	b.n	532 <__main_stack_size+0x132>
    {
      ch = Serial.read();
     3a0:	1c20      	adds	r0, r4, #0
     3a2:	f000 f91b 	bl	5dc <_ZN14HardwareSerial4readEv>
     3a6:	4d6d      	ldr	r5, [pc, #436]	; (55c <__main_stack_size+0x15c>)
     3a8:	b2c1      	uxtb	r1, r0

      Serial.println(ch);
     3aa:	1c20      	adds	r0, r4, #0

void loop()
{
  if(Serial.available())
    {
      ch = Serial.read();
     3ac:	7029      	strb	r1, [r5, #0]

      Serial.println(ch);
     3ae:	f000 fbeb 	bl	b88 <_ZN5Print7printlnEc>

      switch (ch)
     3b2:	7828      	ldrb	r0, [r5, #0]
     3b4:	3831      	subs	r0, #49	; 0x31
     3b6:	2805      	cmp	r0, #5
     3b8:	d900      	bls.n	3bc <_Z4loopv+0x2c>
     3ba:	e0b8      	b.n	52e <__main_stack_size+0x12e>
     3bc:	f001 f9d8 	bl	1770 <__gnu_thumb1_case_uqi>
     3c0:	37191003 	.word	0x37191003
     3c4:	6f4c      	.short	0x6f4c
	{
	case '1':
	  Serial.println("LED ON");
     3c6:	4966      	ldr	r1, [pc, #408]	; (560 <__main_stack_size+0x160>)
     3c8:	1c20      	adds	r0, r4, #0
     3ca:	f000 fbd3 	bl	b74 <_ZN5Print7printlnEPKc>
	  digitalWrite(LEDPIN, HIGH);
     3ce:	2101      	movs	r1, #1
     3d0:	200e      	movs	r0, #14
     3d2:	f7ff ff75 	bl	2c0 <_Z12digitalWritehh>
	  Serial.println(float_test, 6);
     3d6:	4b63      	ldr	r3, [pc, #396]	; (564 <__main_stack_size+0x164>)
     3d8:	2106      	movs	r1, #6
     3da:	681a      	ldr	r2, [r3, #0]
     3dc:	685b      	ldr	r3, [r3, #4]
     3de:	e0a2      	b.n	526 <__main_stack_size+0x126>
	  break;
	case '2':
	  Serial.println("LED OFF");
     3e0:	1c20      	adds	r0, r4, #0
     3e2:	4961      	ldr	r1, [pc, #388]	; (568 <__main_stack_size+0x168>)
     3e4:	f000 fbc6 	bl	b74 <_ZN5Print7printlnEPKc>
	  digitalWrite(LEDPIN, LOW);
     3e8:	200e      	movs	r0, #14
     3ea:	2100      	movs	r1, #0
     3ec:	f7ff ff68 	bl	2c0 <_Z12digitalWritehh>
	  break;
     3f0:	e09d      	b.n	52e <__main_stack_size+0x12e>
	case '3':
	  Serial.println("MPU6050 WHO_AM_I");
     3f2:	1c20      	adds	r0, r4, #0
     3f4:	495d      	ldr	r1, [pc, #372]	; (56c <__main_stack_size+0x16c>)
     3f6:	f000 fbbd 	bl	b74 <_ZN5Print7printlnEPKc>
	  Wire.beginTransmission(MPU6050_ADDRESS);
     3fa:	4d5d      	ldr	r5, [pc, #372]	; (570 <__main_stack_size+0x170>)
     3fc:	21d0      	movs	r1, #208	; 0xd0
     3fe:	1c28      	adds	r0, r5, #0
     400:	f000 fb52 	bl	aa8 <_ZN7TwoWire17beginTransmissionEh>
	  Wire.requestFrom(MPU6050_WHO_AM_I,1);
     404:	2201      	movs	r2, #1
     406:	2175      	movs	r1, #117	; 0x75
     408:	1c28      	adds	r0, r5, #0
     40a:	f000 fb45 	bl	a98 <_ZN7TwoWire11requestFromEii>
	  Wire.endTransmission();
     40e:	1c28      	adds	r0, r5, #0
     410:	f000 fb5a 	bl	ac8 <_ZN7TwoWire15endTransmissionEv>
	  Serial.print("MPU6050 WHO_AM_I: 0x");
     414:	4957      	ldr	r1, [pc, #348]	; (574 <__main_stack_size+0x174>)
     416:	1c20      	adds	r0, r4, #0
     418:	f000 fb97 	bl	b4a <_ZN5Print5printEPKc>
	  Serial.println(Wire.read(), HEX);
     41c:	1c28      	adds	r0, r5, #0
     41e:	f000 fb67 	bl	af0 <_ZN7TwoWire4readEv>
     422:	2210      	movs	r2, #16
     424:	1c01      	adds	r1, r0, #0
     426:	1c20      	adds	r0, r4, #0
     428:	f000 fbe7 	bl	bfa <_ZN5Print7printlnEhi>
	  break;
     42c:	e07f      	b.n	52e <__main_stack_size+0x12e>
	case '4':
	  Serial.println("Clear sleep");
     42e:	1c20      	adds	r0, r4, #0
     430:	4951      	ldr	r1, [pc, #324]	; (578 <__main_stack_size+0x178>)
     432:	f000 fb9f 	bl	b74 <_ZN5Print7printlnEPKc>
	  Wire.beginTransmission(MPU6050_ADDRESS);
     436:	4c4e      	ldr	r4, [pc, #312]	; (570 <__main_stack_size+0x170>)
     438:	21d0      	movs	r1, #208	; 0xd0
     43a:	1c20      	adds	r0, r4, #0
     43c:	f000 fb34 	bl	aa8 <_ZN7TwoWire17beginTransmissionEh>
	  Wire.write(MPU6050_PWR_MGMT_1);
     440:	1c20      	adds	r0, r4, #0
     442:	216b      	movs	r1, #107	; 0x6b
     444:	f000 fb46 	bl	ad4 <_ZN7TwoWire5writeEh>
	  Wire.write(0);
     448:	1c20      	adds	r0, r4, #0
     44a:	2100      	movs	r1, #0
     44c:	f000 fb42 	bl	ad4 <_ZN7TwoWire5writeEh>
	  Wire.endTransmission();
     450:	1c20      	adds	r0, r4, #0
     452:	f000 fb39 	bl	ac8 <_ZN7TwoWire15endTransmissionEv>
	  break;
     456:	e06a      	b.n	52e <__main_stack_size+0x12e>
	case '5':
	  Serial.println("MPU6050 X-axis");
     458:	1c20      	adds	r0, r4, #0
     45a:	4948      	ldr	r1, [pc, #288]	; (57c <__main_stack_size+0x17c>)
     45c:	f000 fb8a 	bl	b74 <_ZN5Print7printlnEPKc>
	  Wire.beginTransmission(MPU6050_ADDRESS);
     460:	4d43      	ldr	r5, [pc, #268]	; (570 <__main_stack_size+0x170>)
     462:	21d0      	movs	r1, #208	; 0xd0
     464:	1c28      	adds	r0, r5, #0
     466:	f000 fb1f 	bl	aa8 <_ZN7TwoWire17beginTransmissionEh>
	  Wire.requestFrom(MPU6050_ACCEL_XOUT_H,2);
     46a:	2202      	movs	r2, #2
     46c:	213b      	movs	r1, #59	; 0x3b
     46e:	1c28      	adds	r0, r5, #0
     470:	f000 fb12 	bl	a98 <_ZN7TwoWire11requestFromEii>
	  Wire.endTransmission();
     474:	1c28      	adds	r0, r5, #0
     476:	f000 fb27 	bl	ac8 <_ZN7TwoWire15endTransmissionEv>
	  Serial.print("MPU6050 X axis: 0x");
     47a:	4941      	ldr	r1, [pc, #260]	; (580 <__main_stack_size+0x180>)
     47c:	1c20      	adds	r0, r4, #0
     47e:	f000 fb64 	bl	b4a <_ZN5Print5printEPKc>
	  Serial.println((int32_t)((Wire.read()) + (Wire.read()<<8)), HEX);
     482:	1c28      	adds	r0, r5, #0
     484:	f000 fb34 	bl	af0 <_ZN7TwoWire4readEv>
     488:	1c06      	adds	r6, r0, #0
     48a:	1c28      	adds	r0, r5, #0
     48c:	f000 fb30 	bl	af0 <_ZN7TwoWire4readEv>
     490:	0201      	lsls	r1, r0, #8
     492:	1871      	adds	r1, r6, r1
     494:	1c20      	adds	r0, r4, #0
     496:	2210      	movs	r2, #16
     498:	f000 fbd7 	bl	c4a <_ZN5Print7printlnEli>
	  break;
     49c:	e047      	b.n	52e <__main_stack_size+0x12e>
	case '6':
	  Serial.println("MPU6050 Temp");
     49e:	4939      	ldr	r1, [pc, #228]	; (584 <__main_stack_size+0x184>)
     4a0:	1c20      	adds	r0, r4, #0
     4a2:	f000 fb67 	bl	b74 <_ZN5Print7printlnEPKc>
	  Wire.beginTransmission(MPU6050_ADDRESS);
     4a6:	4d32      	ldr	r5, [pc, #200]	; (570 <__main_stack_size+0x170>)
     4a8:	21d0      	movs	r1, #208	; 0xd0
     4aa:	1c28      	adds	r0, r5, #0
     4ac:	f000 fafc 	bl	aa8 <_ZN7TwoWire17beginTransmissionEh>
	  Wire.requestFrom(MPU6050_TEMP_H,2);
     4b0:	2141      	movs	r1, #65	; 0x41
     4b2:	2202      	movs	r2, #2
     4b4:	1c28      	adds	r0, r5, #0
     4b6:	f000 faef 	bl	a98 <_ZN7TwoWire11requestFromEii>
	  Wire.endTransmission();
     4ba:	1c28      	adds	r0, r5, #0
     4bc:	f000 fb04 	bl	ac8 <_ZN7TwoWire15endTransmissionEv>
	  temp_l = Wire.read();
     4c0:	1c28      	adds	r0, r5, #0
     4c2:	f000 fb15 	bl	af0 <_ZN7TwoWire4readEv>
     4c6:	4e30      	ldr	r6, [pc, #192]	; (588 <__main_stack_size+0x188>)
     4c8:	7030      	strb	r0, [r6, #0]
	  temp_h = Wire.read();
     4ca:	1c28      	adds	r0, r5, #0
     4cc:	f000 fb10 	bl	af0 <_ZN7TwoWire4readEv>
     4d0:	4a2e      	ldr	r2, [pc, #184]	; (58c <__main_stack_size+0x18c>)
	  //Serial.print("MPU6050 temp_l: ");
	  //Serial.println(temp_l, HEX);
	  //Serial.print("MPU6050 temp_h: ");
	  //Serial.println(temp_h, HEX);
	  temp16 = (temp_h<<8) + temp_l;
     4d2:	7831      	ldrb	r1, [r6, #0]
	  Serial.println("MPU6050 Temp");
	  Wire.beginTransmission(MPU6050_ADDRESS);
	  Wire.requestFrom(MPU6050_TEMP_H,2);
	  Wire.endTransmission();
	  temp_l = Wire.read();
	  temp_h = Wire.read();
     4d4:	7010      	strb	r0, [r2, #0]
	  //Serial.print("MPU6050 temp_l: ");
	  //Serial.println(temp_l, HEX);
	  //Serial.print("MPU6050 temp_h: ");
	  //Serial.println(temp_h, HEX);
	  temp16 = (temp_h<<8) + temp_l;
     4d6:	0200      	lsls	r0, r0, #8
     4d8:	1843      	adds	r3, r0, r1
     4da:	4e2d      	ldr	r6, [pc, #180]	; (590 <__main_stack_size+0x190>)
     4dc:	b29d      	uxth	r5, r3
     4de:	8035      	strh	r5, [r6, #0]
	  //Serial.print("MPU6050 temp16: ");
	  //Serial.println(temp16, DEC);
	  tempd = (temp16 / 340.0) + 36.53;
     4e0:	b228      	sxth	r0, r5
     4e2:	f002 ffcf 	bl	3484 <__aeabi_i2d>
     4e6:	4b15      	ldr	r3, [pc, #84]	; (53c <__main_stack_size+0x13c>)
     4e8:	4a13      	ldr	r2, [pc, #76]	; (538 <__main_stack_size+0x138>)
     4ea:	f001 fda9 	bl	2040 <__aeabi_ddiv>
     4ee:	4a14      	ldr	r2, [pc, #80]	; (540 <__main_stack_size+0x140>)
     4f0:	4b14      	ldr	r3, [pc, #80]	; (544 <__main_stack_size+0x144>)
     4f2:	f001 f9f5 	bl	18e0 <__aeabi_dadd>
     4f6:	1c02      	adds	r2, r0, #0
     4f8:	4826      	ldr	r0, [pc, #152]	; (594 <__main_stack_size+0x194>)
     4fa:	1c0b      	adds	r3, r1, #0
     4fc:	6002      	str	r2, [r0, #0]
     4fe:	6043      	str	r3, [r0, #4]
	  //Serial.print("MPU6050 temp (C): ");
	  //Serial.println(tempd);
	  tempf = (tempd)*(9.0/5.0) + 32.0;
     500:	1c10      	adds	r0, r2, #0
     502:	4a11      	ldr	r2, [pc, #68]	; (548 <__main_stack_size+0x148>)
     504:	4b11      	ldr	r3, [pc, #68]	; (54c <__main_stack_size+0x14c>)
     506:	f002 f995 	bl	2834 <__aeabi_dmul>
     50a:	4a11      	ldr	r2, [pc, #68]	; (550 <__main_stack_size+0x150>)
     50c:	4b11      	ldr	r3, [pc, #68]	; (554 <__main_stack_size+0x154>)
     50e:	f001 f9e7 	bl	18e0 <__aeabi_dadd>
     512:	4d21      	ldr	r5, [pc, #132]	; (598 <__main_stack_size+0x198>)
     514:	6028      	str	r0, [r5, #0]
     516:	6069      	str	r1, [r5, #4]
	  Serial.print("MPU6050 temp (F): ");
     518:	4920      	ldr	r1, [pc, #128]	; (59c <__main_stack_size+0x19c>)
     51a:	1c20      	adds	r0, r4, #0
     51c:	f000 fb15 	bl	b4a <_ZN5Print5printEPKc>
	  Serial.println(tempf);
     520:	682a      	ldr	r2, [r5, #0]
     522:	686b      	ldr	r3, [r5, #4]
     524:	2102      	movs	r1, #2
     526:	9100      	str	r1, [sp, #0]
     528:	1c20      	adds	r0, r4, #0
     52a:	f000 fc51 	bl	dd0 <_ZN5Print7printlnEdi>
	  break;
	default:
	  break;
	}
      mainmenu();
     52e:	f7ff fee3 	bl	2f8 <_Z8mainmenuv>
    }  
}
     532:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
     534:	46c0      	nop			; (mov r8, r8)
     536:	46c0      	nop			; (mov r8, r8)
     538:	00000000 	.word	0x00000000
     53c:	40754000 	.word	0x40754000
     540:	0a3d70a4 	.word	0x0a3d70a4
     544:	404243d7 	.word	0x404243d7
     548:	cccccccd 	.word	0xcccccccd
     54c:	3ffccccc 	.word	0x3ffccccc
     550:	00000000 	.word	0x00000000
     554:	40400000 	.word	0x40400000
     558:	100008cc 	.word	0x100008cc
     55c:	10000878 	.word	0x10000878
     560:	00003622 	.word	0x00003622
     564:	10000000 	.word	0x10000000
     568:	0000362d 	.word	0x0000362d
     56c:	00003639 	.word	0x00003639
     570:	10000a70 	.word	0x10000a70
     574:	0000367d 	.word	0x0000367d
     578:	0000364e 	.word	0x0000364e
     57c:	00003692 	.word	0x00003692
     580:	000036a1 	.word	0x000036a1
     584:	000036b4 	.word	0x000036b4
     588:	1000087d 	.word	0x1000087d
     58c:	1000087c 	.word	0x1000087c
     590:	1000087a 	.word	0x1000087a
     594:	10000880 	.word	0x10000880
     598:	10000870 	.word	0x10000870
     59c:	000036c1 	.word	0x000036c1

000005a0 <_ZN14HardwareSerial9availableEv>:

}

int HardwareSerial::available(void)
{
  return ((uart_rx_extract_idx-uart_rx_insert_idx)!=0);
     5a0:	4b03      	ldr	r3, [pc, #12]	; (5b0 <_ZN14HardwareSerial9availableEv+0x10>)
     5a2:	4904      	ldr	r1, [pc, #16]	; (5b4 <_ZN14HardwareSerial9availableEv+0x14>)
     5a4:	7818      	ldrb	r0, [r3, #0]
     5a6:	780a      	ldrb	r2, [r1, #0]
     5a8:	1a80      	subs	r0, r0, r2
     5aa:	1e43      	subs	r3, r0, #1
     5ac:	4198      	sbcs	r0, r3
}
     5ae:	4770      	bx	lr
     5b0:	100008dc 	.word	0x100008dc
     5b4:	100008de 	.word	0x100008de

000005b8 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
  if (uart_rx_extract_idx==uart_rx_insert_idx) {
     5b8:	4b05      	ldr	r3, [pc, #20]	; (5d0 <_ZN14HardwareSerial4peekEv+0x18>)
     5ba:	4a06      	ldr	r2, [pc, #24]	; (5d4 <_ZN14HardwareSerial4peekEv+0x1c>)
     5bc:	7818      	ldrb	r0, [r3, #0]
     5be:	7811      	ldrb	r1, [r2, #0]
     5c0:	4281      	cmp	r1, r0
     5c2:	d002      	beq.n	5ca <_ZN14HardwareSerial4peekEv+0x12>
    return -1;
  } else {
    return uart_rx_buffer[uart_rx_extract_idx];
     5c4:	4b04      	ldr	r3, [pc, #16]	; (5d8 <_ZN14HardwareSerial4peekEv+0x20>)
     5c6:	5c18      	ldrb	r0, [r3, r0]
     5c8:	e001      	b.n	5ce <_ZN14HardwareSerial4peekEv+0x16>
}

int HardwareSerial::peek(void)
{
  if (uart_rx_extract_idx==uart_rx_insert_idx) {
    return -1;
     5ca:	2001      	movs	r0, #1
     5cc:	4240      	negs	r0, r0
  } else {
    return uart_rx_buffer[uart_rx_extract_idx];
  }
}
     5ce:	4770      	bx	lr
     5d0:	100008dc 	.word	0x100008dc
     5d4:	100008de 	.word	0x100008de
     5d8:	10000888 	.word	0x10000888

000005dc <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
  uint8_t ch;
  
  if (uart_rx_insert_idx == uart_rx_extract_idx) // check if character is available
     5dc:	4a07      	ldr	r2, [pc, #28]	; (5fc <_ZN14HardwareSerial4readEv+0x20>)
     5de:	4908      	ldr	r1, [pc, #32]	; (600 <_ZN14HardwareSerial4readEv+0x24>)
     5e0:	7813      	ldrb	r3, [r2, #0]
     5e2:	7808      	ldrb	r0, [r1, #0]
     5e4:	4298      	cmp	r0, r3
     5e6:	d006      	beq.n	5f6 <_ZN14HardwareSerial4readEv+0x1a>
    return -1;

  ch = uart_rx_buffer[uart_rx_extract_idx++]; // get character, bump pointer
     5e8:	4906      	ldr	r1, [pc, #24]	; (604 <_ZN14HardwareSerial4readEv+0x28>)
     5ea:	5cc8      	ldrb	r0, [r1, r3]
     5ec:	3301      	adds	r3, #1
  uart_rx_extract_idx %= UART_RX_BUFFER_LENGTH; // limit the pointer
     5ee:	213f      	movs	r1, #63	; 0x3f
     5f0:	400b      	ands	r3, r1
     5f2:	7013      	strb	r3, [r2, #0]
  return ch;
     5f4:	e001      	b.n	5fa <_ZN14HardwareSerial4readEv+0x1e>
int HardwareSerial::read(void)
{
  uint8_t ch;
  
  if (uart_rx_insert_idx == uart_rx_extract_idx) // check if character is available
    return -1;
     5f6:	2201      	movs	r2, #1
     5f8:	4250      	negs	r0, r2

  ch = uart_rx_buffer[uart_rx_extract_idx++]; // get character, bump pointer
  uart_rx_extract_idx %= UART_RX_BUFFER_LENGTH; // limit the pointer
  return ch;
}
     5fa:	4770      	bx	lr
     5fc:	100008dc 	.word	0x100008dc
     600:	100008de 	.word	0x100008de
     604:	10000888 	.word	0x10000888

00000608 <_ZN14HardwareSerial5flushEv>:

void HardwareSerial::flush()
{

}
     608:	4770      	bx	lr
	...

0000060c <_ZN14HardwareSerial5writeEh>:

size_t HardwareSerial::write(uint8_t ch)
{
     60c:	b570      	push	{r4, r5, r6, lr}
  uint16_t temp;

  temp = (uart_tx_insert_idx + 1) % UART_TX_BUFFER_LENGTH;
     60e:	4811      	ldr	r0, [pc, #68]	; (654 <_ZN14HardwareSerial5writeEh+0x48>)

  if (temp == uart_tx_extract_idx)
     610:	4b11      	ldr	r3, [pc, #68]	; (658 <_ZN14HardwareSerial5writeEh+0x4c>)

size_t HardwareSerial::write(uint8_t ch)
{
  uint16_t temp;

  temp = (uart_tx_insert_idx + 1) % UART_TX_BUFFER_LENGTH;
     612:	7805      	ldrb	r5, [r0, #0]

  if (temp == uart_tx_extract_idx)
     614:	781a      	ldrb	r2, [r3, #0]

size_t HardwareSerial::write(uint8_t ch)
{
  uint16_t temp;

  temp = (uart_tx_insert_idx + 1) % UART_TX_BUFFER_LENGTH;
     616:	1c6c      	adds	r4, r5, #1
     618:	b2e4      	uxtb	r4, r4

  if (temp == uart_tx_extract_idx)
     61a:	42a2      	cmp	r2, r4
     61c:	d017      	beq.n	64e <_ZN14HardwareSerial5writeEh+0x42>
    return -1;                          // no room
  
  //NVIC_DisableIRQ(UART_IRQn);
  bitClear(ISER,21);
     61e:	4b0f      	ldr	r3, [pc, #60]	; (65c <_ZN14HardwareSerial5writeEh+0x50>)
     620:	4a0f      	ldr	r2, [pc, #60]	; (660 <_ZN14HardwareSerial5writeEh+0x54>)
     622:	681e      	ldr	r6, [r3, #0]
     624:	4032      	ands	r2, r6
     626:	601a      	str	r2, [r3, #0]

  // check if in process of sending data
  if (uart_tx_running)
     628:	4a0e      	ldr	r2, [pc, #56]	; (664 <_ZN14HardwareSerial5writeEh+0x58>)
     62a:	7816      	ldrb	r6, [r2, #0]
     62c:	2e00      	cmp	r6, #0
     62e:	d003      	beq.n	638 <_ZN14HardwareSerial5writeEh+0x2c>
    {
      // add to queue
      uart_tx_buffer[uart_tx_insert_idx] = (uint8_t)ch;
     630:	4a0d      	ldr	r2, [pc, #52]	; (668 <_ZN14HardwareSerial5writeEh+0x5c>)
      uart_tx_insert_idx = temp;
     632:	7004      	strb	r4, [r0, #0]

  // check if in process of sending data
  if (uart_tx_running)
    {
      // add to queue
      uart_tx_buffer[uart_tx_insert_idx] = (uint8_t)ch;
     634:	5551      	strb	r1, [r2, r5]
     636:	e003      	b.n	640 <_ZN14HardwareSerial5writeEh+0x34>
    }
  else
    {
      // set running flag and write to output register
      uart_tx_running = 1;
      U0THR = (uint8_t)ch;
     638:	4d0c      	ldr	r5, [pc, #48]	; (66c <_ZN14HardwareSerial5writeEh+0x60>)
      uart_tx_insert_idx = temp;
    }
  else
    {
      // set running flag and write to output register
      uart_tx_running = 1;
     63a:	2001      	movs	r0, #1
     63c:	7010      	strb	r0, [r2, #0]
      U0THR = (uint8_t)ch;
     63e:	6029      	str	r1, [r5, #0]
    }

  bitSet(ISER,21);
     640:	681c      	ldr	r4, [r3, #0]
     642:	2680      	movs	r6, #128	; 0x80
     644:	03b0      	lsls	r0, r6, #14
     646:	4320      	orrs	r0, r4
     648:	6018      	str	r0, [r3, #0]

  return (uint8_t)ch;
     64a:	1c08      	adds	r0, r1, #0
     64c:	e001      	b.n	652 <_ZN14HardwareSerial5writeEh+0x46>
  uint16_t temp;

  temp = (uart_tx_insert_idx + 1) % UART_TX_BUFFER_LENGTH;

  if (temp == uart_tx_extract_idx)
    return -1;                          // no room
     64e:	2101      	movs	r1, #1
     650:	4248      	negs	r0, r1
    }

  bitSet(ISER,21);

  return (uint8_t)ch;
}
     652:	bd70      	pop	{r4, r5, r6, pc}
     654:	100008c9 	.word	0x100008c9
     658:	100008e0 	.word	0x100008e0
     65c:	e000e100 	.word	0xe000e100
     660:	ffdfffff 	.word	0xffdfffff
     664:	100008dd 	.word	0x100008dd
     668:	100008e1 	.word	0x100008e1
     66c:	40008000 	.word	0x40008000

00000670 <_Z15UART_IRQHandlerv>:
uint8_t uart_tx_insert_idx, uart_tx_extract_idx;
uint8_t uart_tx_running;
#define uart_data_available() ((uart_rx_extract_idx-uart_rx_insert_idx)!=0)

//  UART handler
void UART_IRQHandler(void) {
     670:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
      case (6 << 1):             	            // Character Timeout
      case (2 << 1):                	            // Receive Data Available
	do {
	  temp = (uart_rx_insert_idx + 1) % UART_RX_BUFFER_LENGTH;
          uart_rx_buffer[uart_rx_insert_idx] = U0RBR;
          if (temp != uart_rx_extract_idx)			  
     672:	4b26      	ldr	r3, [pc, #152]	; (70c <_Z15UART_IRQHandlerv+0x9c>)
     674:	4c26      	ldr	r4, [pc, #152]	; (710 <_Z15UART_IRQHandlerv+0xa0>)
	    uart_rx_insert_idx = temp;                            
	} while (U0LSR & 0x01);
	break;
      case (1 << 1):               		    // THR Empty
	while (U0LSR & 0x20) {
	  if (uart_tx_insert_idx != uart_tx_extract_idx) {	   
     676:	4927      	ldr	r1, [pc, #156]	; (714 <_Z15UART_IRQHandlerv+0xa4>)
     678:	4a27      	ldr	r2, [pc, #156]	; (718 <_Z15UART_IRQHandlerv+0xa8>)
     67a:	4d28      	ldr	r5, [pc, #160]	; (71c <_Z15UART_IRQHandlerv+0xac>)
      case (6 << 1):             	            // Character Timeout
      case (2 << 1):                	            // Receive Data Available
	do {
	  temp = (uart_rx_insert_idx + 1) % UART_RX_BUFFER_LENGTH;
          uart_rx_buffer[uart_rx_insert_idx] = U0RBR;
          if (temp != uart_rx_extract_idx)			  
     67c:	7818      	ldrb	r0, [r3, #0]
	    uart_rx_insert_idx = temp;                            
	} while (U0LSR & 0x01);
	break;
      case (1 << 1):               		    // THR Empty
	while (U0LSR & 0x20) {
	  if (uart_tx_insert_idx != uart_tx_extract_idx) {	   
     67e:	780e      	ldrb	r6, [r1, #0]
     680:	7823      	ldrb	r3, [r4, #0]
     682:	7812      	ldrb	r2, [r2, #0]
     684:	782c      	ldrb	r4, [r5, #0]
      case (6 << 1):             	            // Character Timeout
      case (2 << 1):                	            // Receive Data Available
	do {
	  temp = (uart_rx_insert_idx + 1) % UART_RX_BUFFER_LENGTH;
          uart_rx_buffer[uart_rx_insert_idx] = U0RBR;
          if (temp != uart_rx_extract_idx)			  
     686:	9001      	str	r0, [sp, #4]

//  UART handler
void UART_IRQHandler(void) {
  static volatile uint8_t iid, temp;

  while (((iid = U0IIR) & 0x01) == 0) {            // Service all interrupts
     688:	4f25      	ldr	r7, [pc, #148]	; (720 <_Z15UART_IRQHandlerv+0xb0>)
     68a:	4926      	ldr	r1, [pc, #152]	; (724 <_Z15UART_IRQHandlerv+0xb4>)
     68c:	6838      	ldr	r0, [r7, #0]
     68e:	b2c5      	uxtb	r5, r0
     690:	700d      	strb	r5, [r1, #0]
     692:	07c5      	lsls	r5, r0, #31
     694:	d432      	bmi.n	6fc <_Z15UART_IRQHandlerv+0x8c>
    switch (iid & 0x0E) {	                    
     696:	7808      	ldrb	r0, [r1, #0]
     698:	270e      	movs	r7, #14
     69a:	4038      	ands	r0, r7
     69c:	3802      	subs	r0, #2
     69e:	4922      	ldr	r1, [pc, #136]	; (728 <_Z15UART_IRQHandlerv+0xb8>)
     6a0:	280a      	cmp	r0, #10
     6a2:	d827      	bhi.n	6f4 <_Z15UART_IRQHandlerv+0x84>
     6a4:	f001 f864 	bl	1770 <__gnu_thumb1_case_uqi>
     6a8:	26092618 	.word	0x26092618
     6ac:	26262628 	.word	0x26262628
     6b0:	2626      	.short	0x2626
     6b2:	09          	.byte	0x09
     6b3:	00          	.byte	0x00
      case (3 << 1):                                // Receive Line Status
	U0LSR;                                     // Read LSR to clear
	break;
      case (6 << 1):             	            // Character Timeout
      case (2 << 1):                	            // Receive Data Available
	do {
     6b4:	6808      	ldr	r0, [r1, #0]
     6b6:	07c7      	lsls	r7, r0, #31
     6b8:	d5e6      	bpl.n	688 <_Z15UART_IRQHandlerv+0x18>
	  temp = (uart_rx_insert_idx + 1) % UART_RX_BUFFER_LENGTH;
     6ba:	203f      	movs	r0, #63	; 0x3f
     6bc:	1c55      	adds	r5, r2, #1
     6be:	4005      	ands	r5, r0
     6c0:	481a      	ldr	r0, [pc, #104]	; (72c <_Z15UART_IRQHandlerv+0xbc>)
          uart_rx_buffer[uart_rx_insert_idx] = U0RBR;
     6c2:	4f1b      	ldr	r7, [pc, #108]	; (730 <_Z15UART_IRQHandlerv+0xc0>)
	U0LSR;                                     // Read LSR to clear
	break;
      case (6 << 1):             	            // Character Timeout
      case (2 << 1):                	            // Receive Data Available
	do {
	  temp = (uart_rx_insert_idx + 1) % UART_RX_BUFFER_LENGTH;
     6c4:	7005      	strb	r5, [r0, #0]
          uart_rx_buffer[uart_rx_insert_idx] = U0RBR;
     6c6:	683d      	ldr	r5, [r7, #0]
     6c8:	4f1a      	ldr	r7, [pc, #104]	; (734 <_Z15UART_IRQHandlerv+0xc4>)
     6ca:	54bd      	strb	r5, [r7, r2]
          if (temp != uart_rx_extract_idx)			  
     6cc:	7807      	ldrb	r7, [r0, #0]
     6ce:	9d01      	ldr	r5, [sp, #4]
     6d0:	42af      	cmp	r7, r5
     6d2:	d0ef      	beq.n	6b4 <_Z15UART_IRQHandlerv+0x44>
	    uart_rx_insert_idx = temp;                            
     6d4:	7802      	ldrb	r2, [r0, #0]
     6d6:	e7ed      	b.n	6b4 <_Z15UART_IRQHandlerv+0x44>
	} while (U0LSR & 0x01);
	break;
      case (1 << 1):               		    // THR Empty
	while (U0LSR & 0x20) {
     6d8:	6809      	ldr	r1, [r1, #0]
     6da:	0688      	lsls	r0, r1, #26
     6dc:	d5d4      	bpl.n	688 <_Z15UART_IRQHandlerv+0x18>
	  if (uart_tx_insert_idx != uart_tx_extract_idx) {	   
     6de:	429e      	cmp	r6, r3
     6e0:	d101      	bne.n	6e6 <_Z15UART_IRQHandlerv+0x76>
	    U0THR = uart_tx_buffer[uart_tx_extract_idx++];
	    uart_tx_extract_idx %= UART_TX_BUFFER_LENGTH;
	  } else
	    uart_tx_running = 0;       				   
     6e2:	2400      	movs	r4, #0
     6e4:	e7d0      	b.n	688 <_Z15UART_IRQHandlerv+0x18>
	} while (U0LSR & 0x01);
	break;
      case (1 << 1):               		    // THR Empty
	while (U0LSR & 0x20) {
	  if (uart_tx_insert_idx != uart_tx_extract_idx) {	   
	    U0THR = uart_tx_buffer[uart_tx_extract_idx++];
     6e6:	4f14      	ldr	r7, [pc, #80]	; (738 <_Z15UART_IRQHandlerv+0xc8>)
     6e8:	4811      	ldr	r0, [pc, #68]	; (730 <_Z15UART_IRQHandlerv+0xc0>)
     6ea:	5cfd      	ldrb	r5, [r7, r3]
     6ec:	3301      	adds	r3, #1
     6ee:	6005      	str	r5, [r0, #0]
     6f0:	b2db      	uxtb	r3, r3
     6f2:	e7c9      	b.n	688 <_Z15UART_IRQHandlerv+0x18>
	    uart_tx_running = 0;       				   
	  break;
        }
	break;
      default:           			    // Unknown Interrupt
        U0LSR;
     6f4:	6809      	ldr	r1, [r1, #0]
	U0RBR;
     6f6:	490e      	ldr	r1, [pc, #56]	; (730 <_Z15UART_IRQHandlerv+0xc0>)
     6f8:	6809      	ldr	r1, [r1, #0]
	break;
     6fa:	e7c5      	b.n	688 <_Z15UART_IRQHandlerv+0x18>
     6fc:	4e06      	ldr	r6, [pc, #24]	; (718 <_Z15UART_IRQHandlerv+0xa8>)
    }
  }
}
     6fe:	7032      	strb	r2, [r6, #0]
     700:	4a03      	ldr	r2, [pc, #12]	; (710 <_Z15UART_IRQHandlerv+0xa0>)
     702:	7013      	strb	r3, [r2, #0]
     704:	4b05      	ldr	r3, [pc, #20]	; (71c <_Z15UART_IRQHandlerv+0xac>)
     706:	701c      	strb	r4, [r3, #0]
     708:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
     70a:	46c0      	nop			; (mov r8, r8)
     70c:	100008dc 	.word	0x100008dc
     710:	100008e0 	.word	0x100008e0
     714:	100008c9 	.word	0x100008c9
     718:	100008de 	.word	0x100008de
     71c:	100008dd 	.word	0x100008dd
     720:	40008008 	.word	0x40008008
     724:	100008df 	.word	0x100008df
     728:	40008014 	.word	0x40008014
     72c:	100008c8 	.word	0x100008c8
     730:	40008000 	.word	0x40008000
     734:	10000888 	.word	0x10000888
     738:	100008e1 	.word	0x100008e1

0000073c <_ZN14HardwareSerialC1Ev>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
     73c:	2300      	movs	r3, #0
     73e:	6043      	str	r3, [r0, #4]

// Constructors ////////////////////////////////////////////////////////////////

HardwareSerial::HardwareSerial()
     740:	4b03      	ldr	r3, [pc, #12]	; (750 <_ZN14HardwareSerialC1Ev+0x14>)
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
     742:	21fa      	movs	r1, #250	; 0xfa
     744:	008a      	lsls	r2, r1, #2
     746:	3308      	adds	r3, #8
     748:	6082      	str	r2, [r0, #8]
     74a:	6003      	str	r3, [r0, #0]
{

}
     74c:	4770      	bx	lr
     74e:	46c0      	nop			; (mov r8, r8)
     750:	000036d8 	.word	0x000036d8

00000754 <_ZN14HardwareSerial5beginEm>:

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud)
{
  IOCON_PIO1_6 = 0xD1;  // UART RXD
     754:	4a1c      	ldr	r2, [pc, #112]	; (7c8 <_ZN14HardwareSerial5beginEm+0x74>)
  IOCON_PIO1_7 = 0xD1;  // UART TXD
     756:	481d      	ldr	r0, [pc, #116]	; (7cc <_ZN14HardwareSerial5beginEm+0x78>)

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud)
{
  IOCON_PIO1_6 = 0xD1;  // UART RXD
     758:	23d1      	movs	r3, #209	; 0xd1
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud)
{
     75a:	b510      	push	{r4, lr}
  IOCON_PIO1_6 = 0xD1;  // UART RXD
     75c:	6013      	str	r3, [r2, #0]
  IOCON_PIO1_7 = 0xD1;  // UART TXD
     75e:	6003      	str	r3, [r0, #0]

  //  UART Setup -> Serial.begin()
  UARTCLKDIV = 0x1;
     760:	4b1b      	ldr	r3, [pc, #108]	; (7d0 <_ZN14HardwareSerial5beginEm+0x7c>)
     762:	2401      	movs	r4, #1
     764:	601c      	str	r4, [r3, #0]
  U0LCR = 0x83;             	 
     766:	4c1b      	ldr	r4, [pc, #108]	; (7d4 <_ZN14HardwareSerial5beginEm+0x80>)
     768:	2283      	movs	r2, #131	; 0x83
     76a:	6022      	str	r2, [r4, #0]
  U0DLM = (48000000 / 16 / baud ) / 256;
     76c:	481a      	ldr	r0, [pc, #104]	; (7d8 <_ZN14HardwareSerial5beginEm+0x84>)
     76e:	f001 f809 	bl	1784 <__aeabi_uidiv>
     772:	491a      	ldr	r1, [pc, #104]	; (7dc <_ZN14HardwareSerial5beginEm+0x88>)
     774:	0a03      	lsrs	r3, r0, #8
     776:	600b      	str	r3, [r1, #0]
  U0DLL = (48000000 / 16 / baud ) % 256;
     778:	4b19      	ldr	r3, [pc, #100]	; (7e0 <_ZN14HardwareSerial5beginEm+0x8c>)
     77a:	b2c0      	uxtb	r0, r0
     77c:	6018      	str	r0, [r3, #0]
  U0LCR = 0x03;				
     77e:	2203      	movs	r2, #3
  U0FCR = 0x07;				
     780:	4818      	ldr	r0, [pc, #96]	; (7e4 <_ZN14HardwareSerial5beginEm+0x90>)
  //  UART Setup -> Serial.begin()
  UARTCLKDIV = 0x1;
  U0LCR = 0x83;             	 
  U0DLM = (48000000 / 16 / baud ) / 256;
  U0DLL = (48000000 / 16 / baud ) % 256;
  U0LCR = 0x03;				
     782:	6022      	str	r2, [r4, #0]
  U0FCR = 0x07;				
     784:	2407      	movs	r4, #7
  U0LSR;				
     786:	4a18      	ldr	r2, [pc, #96]	; (7e8 <_ZN14HardwareSerial5beginEm+0x94>)
  UARTCLKDIV = 0x1;
  U0LCR = 0x83;             	 
  U0DLM = (48000000 / 16 / baud ) / 256;
  U0DLL = (48000000 / 16 / baud ) % 256;
  U0LCR = 0x03;				
  U0FCR = 0x07;				
     788:	6004      	str	r4, [r0, #0]
  U0LSR;				
     78a:	6810      	ldr	r0, [r2, #0]
     78c:	1c1c      	adds	r4, r3, #0
  while (( U0LSR & 0x60) != 0x60 );	
     78e:	6810      	ldr	r0, [r2, #0]
     790:	2360      	movs	r3, #96	; 0x60
     792:	4003      	ands	r3, r0
     794:	2b60      	cmp	r3, #96	; 0x60
     796:	d1fa      	bne.n	78e <_ZN14HardwareSerial5beginEm+0x3a>
  while ( U0LSR & 0x01 ) { U0RBR; }
     798:	6813      	ldr	r3, [r2, #0]
     79a:	2001      	movs	r0, #1
     79c:	4003      	ands	r3, r0
     79e:	d001      	beq.n	7a4 <_ZN14HardwareSerial5beginEm+0x50>
     7a0:	6823      	ldr	r3, [r4, #0]
     7a2:	e7f9      	b.n	798 <_ZN14HardwareSerial5beginEm+0x44>
  uart_tx_extract_idx = uart_tx_insert_idx = 0;
     7a4:	4a11      	ldr	r2, [pc, #68]	; (7ec <_ZN14HardwareSerial5beginEm+0x98>)
     7a6:	4c12      	ldr	r4, [pc, #72]	; (7f0 <_ZN14HardwareSerial5beginEm+0x9c>)
     7a8:	7013      	strb	r3, [r2, #0]
     7aa:	7023      	strb	r3, [r4, #0]
  uart_rx_extract_idx = uart_rx_insert_idx = 0;
     7ac:	4811      	ldr	r0, [pc, #68]	; (7f4 <_ZN14HardwareSerial5beginEm+0xa0>)
     7ae:	4a12      	ldr	r2, [pc, #72]	; (7f8 <_ZN14HardwareSerial5beginEm+0xa4>)
  uart_tx_running = 0;
     7b0:	4c12      	ldr	r4, [pc, #72]	; (7fc <_ZN14HardwareSerial5beginEm+0xa8>)
  U0FCR = 0x07;				
  U0LSR;				
  while (( U0LSR & 0x60) != 0x60 );	
  while ( U0LSR & 0x01 ) { U0RBR; }
  uart_tx_extract_idx = uart_tx_insert_idx = 0;
  uart_rx_extract_idx = uart_rx_insert_idx = 0;
     7b2:	7003      	strb	r3, [r0, #0]
     7b4:	7013      	strb	r3, [r2, #0]
  uart_tx_running = 0;
     7b6:	7023      	strb	r3, [r4, #0]
  ISER = 0x200000;
     7b8:	4a11      	ldr	r2, [pc, #68]	; (800 <_ZN14HardwareSerial5beginEm+0xac>)
     7ba:	2380      	movs	r3, #128	; 0x80
     7bc:	0398      	lsls	r0, r3, #14
  U0IER = 0x07;
     7be:	2407      	movs	r4, #7
  while (( U0LSR & 0x60) != 0x60 );	
  while ( U0LSR & 0x01 ) { U0RBR; }
  uart_tx_extract_idx = uart_tx_insert_idx = 0;
  uart_rx_extract_idx = uart_rx_insert_idx = 0;
  uart_tx_running = 0;
  ISER = 0x200000;
     7c0:	6010      	str	r0, [r2, #0]
  U0IER = 0x07;
     7c2:	600c      	str	r4, [r1, #0]
}
     7c4:	bd10      	pop	{r4, pc}
     7c6:	46c0      	nop			; (mov r8, r8)
     7c8:	400440a4 	.word	0x400440a4
     7cc:	400440a8 	.word	0x400440a8
     7d0:	40048098 	.word	0x40048098
     7d4:	4000800c 	.word	0x4000800c
     7d8:	002dc6c0 	.word	0x002dc6c0
     7dc:	40008004 	.word	0x40008004
     7e0:	40008000 	.word	0x40008000
     7e4:	40008008 	.word	0x40008008
     7e8:	40008014 	.word	0x40008014
     7ec:	100008c9 	.word	0x100008c9
     7f0:	100008e0 	.word	0x100008e0
     7f4:	100008de 	.word	0x100008de
     7f8:	100008dc 	.word	0x100008dc
     7fc:	100008dd 	.word	0x100008dd
     800:	e000e100 	.word	0xe000e100

00000804 <_GLOBAL__sub_I_uart_rx_buffer>:
	return true;
}

// Preinstantiate Objects //////////////////////////////////////////////////////

HardwareSerial Serial = HardwareSerial();
     804:	b508      	push	{r3, lr}
     806:	4802      	ldr	r0, [pc, #8]	; (810 <_GLOBAL__sub_I_uart_rx_buffer+0xc>)
     808:	f7ff ff98 	bl	73c <_ZN14HardwareSerialC1Ev>
     80c:	bd08      	pop	{r3, pc}
     80e:	46c0      	nop			; (mov r8, r8)
     810:	100008cc 	.word	0x100008cc

00000814 <main>:
#include <Arduino.h>

int main(void)
{
     814:	b508      	push	{r3, lr}
  init();
     816:	f7ff fc91 	bl	13c <_Z4initv>

#if defined(USBCON)
  USBDevice.attach();
#endif

  setup();
     81a:	f7ff fda3 	bl	364 <_Z5setupv>
    
  for (;;) {
    loop();
     81e:	f7ff fdb7 	bl	390 <_Z4loopv>
     822:	e7fc      	b.n	81e <main+0xa>

00000824 <_Z14I2C_IRQHandlerv>:

void I2C_IRQHandler(void) 
{
  uint8_t StatValue;

  timeout = 0;
     824:	4b47      	ldr	r3, [pc, #284]	; (944 <_Z14I2C_IRQHandlerv+0x120>)
     826:	2100      	movs	r1, #0
  /* this handler deals with master read and master write only */
  StatValue = I2C0STAT;
     828:	4847      	ldr	r0, [pc, #284]	; (948 <_Z14I2C_IRQHandlerv+0x124>)

volatile uint32_t RdIndex = 0;
volatile uint32_t WrIndex = 0;

void I2C_IRQHandler(void) 
{
     82a:	b510      	push	{r4, lr}
  uint8_t StatValue;

  timeout = 0;
     82c:	6019      	str	r1, [r3, #0]
  /* this handler deals with master read and master write only */
  StatValue = I2C0STAT;
     82e:	6802      	ldr	r2, [r0, #0]
}


// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
     830:	b2d4      	uxtb	r4, r2
     832:	4a46      	ldr	r2, [pc, #280]	; (94c <_Z14I2C_IRQHandlerv+0x128>)
  uint8_t StatValue;

  timeout = 0;
  /* this handler deals with master read and master write only */
  StatValue = I2C0STAT;
  switch ( StatValue )
     834:	2c28      	cmp	r4, #40	; 0x28
     836:	d042      	beq.n	8be <_Z14I2C_IRQHandlerv+0x9a>
     838:	dc0c      	bgt.n	854 <_Z14I2C_IRQHandlerv+0x30>
     83a:	2c10      	cmp	r4, #16
     83c:	d027      	beq.n	88e <_Z14I2C_IRQHandlerv+0x6a>
     83e:	dc04      	bgt.n	84a <_Z14I2C_IRQHandlerv+0x26>
     840:	2c08      	cmp	r4, #8
     842:	d179      	bne.n	938 <_Z14I2C_IRQHandlerv+0x114>
  {
	case 0x08:			/* A Start condition is issued. */
	WrIndex = 0;
     844:	4b42      	ldr	r3, [pc, #264]	; (950 <_Z14I2C_IRQHandlerv+0x12c>)
     846:	6019      	str	r1, [r3, #0]
     848:	e024      	b.n	894 <_Z14I2C_IRQHandlerv+0x70>
  uint8_t StatValue;

  timeout = 0;
  /* this handler deals with master read and master write only */
  StatValue = I2C0STAT;
  switch ( StatValue )
     84a:	2c18      	cmp	r4, #24
     84c:	d02b      	beq.n	8a6 <_Z14I2C_IRQHandlerv+0x82>
     84e:	2c20      	cmp	r4, #32
     850:	d172      	bne.n	938 <_Z14I2C_IRQHandlerv+0x114>
     852:	e069      	b.n	928 <_Z14I2C_IRQHandlerv+0x104>
     854:	2c48      	cmp	r4, #72	; 0x48
     856:	d067      	beq.n	928 <_Z14I2C_IRQHandlerv+0x104>
     858:	dc05      	bgt.n	866 <_Z14I2C_IRQHandlerv+0x42>
     85a:	2c30      	cmp	r4, #48	; 0x30
     85c:	d048      	beq.n	8f0 <_Z14I2C_IRQHandlerv+0xcc>
     85e:	2c40      	cmp	r4, #64	; 0x40
     860:	d16a      	bne.n	938 <_Z14I2C_IRQHandlerv+0x114>
	 I2CMasterState = I2C_NACK_ON_DATA;
	 I2C0CONCLR = I2CONCLR_SIC;
	 break;

	 case 0x40:	/* Master Receive, SLA_R has been sent */
	 if ( (RdIndex + 1) < I2CReadLength )
     862:	4b3c      	ldr	r3, [pc, #240]	; (954 <_Z14I2C_IRQHandlerv+0x130>)
     864:	e053      	b.n	90e <_Z14I2C_IRQHandlerv+0xea>
  uint8_t StatValue;

  timeout = 0;
  /* this handler deals with master read and master write only */
  StatValue = I2C0STAT;
  switch ( StatValue )
     866:	2c50      	cmp	r4, #80	; 0x50
     868:	d048      	beq.n	8fc <_Z14I2C_IRQHandlerv+0xd8>
     86a:	2c58      	cmp	r4, #88	; 0x58
     86c:	d164      	bne.n	938 <_Z14I2C_IRQHandlerv+0x114>
	 }
	 I2C0CONCLR = I2CONCLR_SIC;
	 break;

	 case 0x58:
	 I2CSlaveBuffer[RdIndex++] = I2C0DAT;
     86e:	4b39      	ldr	r3, [pc, #228]	; (954 <_Z14I2C_IRQHandlerv+0x130>)
     870:	4839      	ldr	r0, [pc, #228]	; (958 <_Z14I2C_IRQHandlerv+0x134>)
     872:	6819      	ldr	r1, [r3, #0]
     874:	6804      	ldr	r4, [r0, #0]
     876:	4839      	ldr	r0, [pc, #228]	; (95c <_Z14I2C_IRQHandlerv+0x138>)
     878:	b2e4      	uxtb	r4, r4
     87a:	5444      	strb	r4, [r0, r1]
     87c:	3101      	adds	r1, #1
     87e:	6019      	str	r1, [r3, #0]
	 I2CMasterState = I2C_OK;
     880:	4b37      	ldr	r3, [pc, #220]	; (960 <_Z14I2C_IRQHandlerv+0x13c>)
     882:	210c      	movs	r1, #12
	 I2C0CONSET = I2CONSET_STO;	/* Set Stop flag */ 
     884:	2480      	movs	r4, #128	; 0x80
	 I2C0CONCLR = I2CONCLR_SIC;
	 break;

	 case 0x58:
	 I2CSlaveBuffer[RdIndex++] = I2C0DAT;
	 I2CMasterState = I2C_OK;
     886:	6019      	str	r1, [r3, #0]
	 I2C0CONSET = I2CONSET_STO;	/* Set Stop flag */ 
     888:	2110      	movs	r1, #16
     88a:	05e3      	lsls	r3, r4, #23
     88c:	e056      	b.n	93c <_Z14I2C_IRQHandlerv+0x118>
	I2C0DAT = I2CMasterBuffer[WrIndex++];
	I2C0CONCLR = (I2CONCLR_SIC | I2CONCLR_STAC);
	break;
	
	case 0x10:			/* A repeated started is issued */
	RdIndex = 0;
     88e:	4b31      	ldr	r3, [pc, #196]	; (954 <_Z14I2C_IRQHandlerv+0x130>)
     890:	6019      	str	r1, [r3, #0]
	/* Send SLA with R bit set, */
	I2C0DAT = I2CMasterBuffer[WrIndex++];
     892:	4b2f      	ldr	r3, [pc, #188]	; (950 <_Z14I2C_IRQHandlerv+0x12c>)
     894:	6819      	ldr	r1, [r3, #0]
     896:	4833      	ldr	r0, [pc, #204]	; (964 <_Z14I2C_IRQHandlerv+0x140>)
     898:	5c44      	ldrb	r4, [r0, r1]
     89a:	482f      	ldr	r0, [pc, #188]	; (958 <_Z14I2C_IRQHandlerv+0x134>)
     89c:	3101      	adds	r1, #1
     89e:	6004      	str	r4, [r0, #0]
     8a0:	6019      	str	r1, [r3, #0]
	I2C0CONCLR = (I2CONCLR_SIC | I2CONCLR_STAC);
     8a2:	2328      	movs	r3, #40	; 0x28
     8a4:	e04c      	b.n	940 <_Z14I2C_IRQHandlerv+0x11c>
	break;
	
	case 0x18:			/* Regardless, it's a ACK */
	if ( I2CWriteLength == 1 )
     8a6:	4930      	ldr	r1, [pc, #192]	; (968 <_Z14I2C_IRQHandlerv+0x144>)
     8a8:	680b      	ldr	r3, [r1, #0]
     8aa:	2b01      	cmp	r3, #1
     8ac:	d105      	bne.n	8ba <_Z14I2C_IRQHandlerv+0x96>
	{
	  I2C0CONSET = I2CONSET_STO;      /* Set Stop flag */
     8ae:	2480      	movs	r4, #128	; 0x80
     8b0:	05e1      	lsls	r1, r4, #23
     8b2:	2010      	movs	r0, #16
     8b4:	6008      	str	r0, [r1, #0]
	  I2CMasterState = I2C_NO_DATA;
     8b6:	2107      	movs	r1, #7
     8b8:	e03f      	b.n	93a <_Z14I2C_IRQHandlerv+0x116>
	}
	else
	 {
	   I2C0DAT = I2CMasterBuffer[WrIndex++];
     8ba:	4b25      	ldr	r3, [pc, #148]	; (950 <_Z14I2C_IRQHandlerv+0x12c>)
     8bc:	e005      	b.n	8ca <_Z14I2C_IRQHandlerv+0xa6>
	 }
	 I2C0CONCLR = I2CONCLR_SIC;
	 break;

	 case 0x28:	/* Data byte has been transmitted, regardless ACK or NACK */
	 if ( WrIndex < I2CWriteLength )
     8be:	4b24      	ldr	r3, [pc, #144]	; (950 <_Z14I2C_IRQHandlerv+0x12c>)
     8c0:	4c29      	ldr	r4, [pc, #164]	; (968 <_Z14I2C_IRQHandlerv+0x144>)
     8c2:	6818      	ldr	r0, [r3, #0]
     8c4:	6821      	ldr	r1, [r4, #0]
     8c6:	4288      	cmp	r0, r1
     8c8:	d206      	bcs.n	8d8 <_Z14I2C_IRQHandlerv+0xb4>
	 {   
	   I2C0DAT = I2CMasterBuffer[WrIndex++]; /* this should be the last one */
     8ca:	6819      	ldr	r1, [r3, #0]
     8cc:	4825      	ldr	r0, [pc, #148]	; (964 <_Z14I2C_IRQHandlerv+0x140>)
     8ce:	5c44      	ldrb	r4, [r0, r1]
     8d0:	4821      	ldr	r0, [pc, #132]	; (958 <_Z14I2C_IRQHandlerv+0x134>)
     8d2:	3101      	adds	r1, #1
     8d4:	6004      	str	r4, [r0, #0]
     8d6:	e031      	b.n	93c <_Z14I2C_IRQHandlerv+0x118>
	 }
	 else
	 {
	   if ( I2CReadLength != 0 )
     8d8:	4b24      	ldr	r3, [pc, #144]	; (96c <_Z14I2C_IRQHandlerv+0x148>)
     8da:	2480      	movs	r4, #128	; 0x80
     8dc:	6818      	ldr	r0, [r3, #0]
     8de:	05e3      	lsls	r3, r4, #23
     8e0:	2800      	cmp	r0, #0
     8e2:	d001      	beq.n	8e8 <_Z14I2C_IRQHandlerv+0xc4>
	   {
		 I2C0CONSET = I2CONSET_STA;	/* Set Repeated-start flag */
     8e4:	2120      	movs	r1, #32
     8e6:	e029      	b.n	93c <_Z14I2C_IRQHandlerv+0x118>
	   }
	   else
	   {
		 I2C0CONSET = I2CONSET_STO;      /* Set Stop flag */
     8e8:	2110      	movs	r1, #16
     8ea:	6019      	str	r1, [r3, #0]
		 I2CMasterState = I2C_OK;
     8ec:	210c      	movs	r1, #12
     8ee:	e024      	b.n	93a <_Z14I2C_IRQHandlerv+0x116>
	 }
	 I2C0CONCLR = I2CONCLR_SIC;
	 break;

	 case 0x30:
	 I2C0CONSET = I2CONSET_STO;      /* Set Stop flag */
     8f0:	2380      	movs	r3, #128	; 0x80
     8f2:	2110      	movs	r1, #16
     8f4:	05dc      	lsls	r4, r3, #23
     8f6:	6021      	str	r1, [r4, #0]
	 I2CMasterState = I2C_NACK_ON_DATA;
     8f8:	2109      	movs	r1, #9
     8fa:	e01e      	b.n	93a <_Z14I2C_IRQHandlerv+0x116>
	 }
	 I2C0CONCLR = I2CONCLR_SIC;
	 break;

	 case 0x50:	/* Data byte has been received, regardless following ACK or NACK */
	 I2CSlaveBuffer[RdIndex++] = I2C0DAT;
     8fc:	4b15      	ldr	r3, [pc, #84]	; (954 <_Z14I2C_IRQHandlerv+0x130>)
     8fe:	4816      	ldr	r0, [pc, #88]	; (958 <_Z14I2C_IRQHandlerv+0x134>)
     900:	6819      	ldr	r1, [r3, #0]
     902:	6804      	ldr	r4, [r0, #0]
     904:	4815      	ldr	r0, [pc, #84]	; (95c <_Z14I2C_IRQHandlerv+0x138>)
     906:	b2e4      	uxtb	r4, r4
     908:	5444      	strb	r4, [r0, r1]
     90a:	3101      	adds	r1, #1
     90c:	6019      	str	r1, [r3, #0]
	 if ( (RdIndex + 1) < I2CReadLength )
     90e:	681c      	ldr	r4, [r3, #0]
     910:	4b16      	ldr	r3, [pc, #88]	; (96c <_Z14I2C_IRQHandlerv+0x148>)
     912:	3401      	adds	r4, #1
     914:	6819      	ldr	r1, [r3, #0]
     916:	2004      	movs	r0, #4
     918:	428c      	cmp	r4, r1
     91a:	d203      	bcs.n	924 <_Z14I2C_IRQHandlerv+0x100>
	 {   
	   I2C0CONSET = I2CONSET_AA;	/* assert ACK after data is received */
     91c:	2480      	movs	r4, #128	; 0x80
     91e:	05e3      	lsls	r3, r4, #23
     920:	6018      	str	r0, [r3, #0]
     922:	e00c      	b.n	93e <_Z14I2C_IRQHandlerv+0x11a>
	 }
	 else
	 {
	   I2C0CONCLR = I2CONCLR_AAC;	/* assert NACK on last byte */
     924:	6010      	str	r0, [r2, #0]
     926:	e00a      	b.n	93e <_Z14I2C_IRQHandlerv+0x11a>
	 I2C0CONCLR = I2CONCLR_SIC;	/* Clear SI flag */
	 break;

	 case 0x20:		/* regardless, it's a NACK */
	 case 0x48:
	 I2C0CONSET = I2CONSET_STO;      /* Set Stop flag */
     928:	2080      	movs	r0, #128	; 0x80
     92a:	2110      	movs	r1, #16
     92c:	05c4      	lsls	r4, r0, #23
     92e:	6021      	str	r1, [r4, #0]
	 I2CMasterState = I2C_NACK_ON_ADDRESS;
     930:	490b      	ldr	r1, [pc, #44]	; (960 <_Z14I2C_IRQHandlerv+0x13c>)
     932:	2308      	movs	r3, #8
     934:	600b      	str	r3, [r1, #0]
     936:	e003      	b.n	940 <_Z14I2C_IRQHandlerv+0x11c>
	 break;

	 case 0x38:		/* Arbitration lost, in this example, we don't
					 deal with multiple master situation */
	 default:
	 I2CMasterState = I2C_ARBITRATION_LOST;
     938:	210a      	movs	r1, #10
     93a:	4b09      	ldr	r3, [pc, #36]	; (960 <_Z14I2C_IRQHandlerv+0x13c>)
     93c:	6019      	str	r1, [r3, #0]
	 I2C0CONCLR = I2CONCLR_SIC;	
     93e:	2308      	movs	r3, #8
     940:	6013      	str	r3, [r2, #0]
	 break;
   }
   return;
 }
     942:	bd10      	pop	{r4, pc}
     944:	10000a7c 	.word	0x10000a7c
     948:	40000004 	.word	0x40000004
     94c:	40000018 	.word	0x40000018
     950:	10000a78 	.word	0x10000a78
     954:	10000a6c 	.word	0x10000a6c
     958:	40000008 	.word	0x40000008
     95c:	10000a80 	.word	0x10000a80
     960:	10000a74 	.word	0x10000a74
     964:	100009e1 	.word	0x100009e1
     968:	10000a68 	.word	0x10000a68
     96c:	10000a64 	.word	0x10000a64

00000970 <_Z7I2CInitm>:
 **				interrupt handler was not installed correctly
 ** 
 *****************************************************************************/
 uint32_t I2CInit( uint32_t I2cMode )
 {
   PRESETCTRL |= (0x1<<1);
     970:	4b1d      	ldr	r3, [pc, #116]	; (9e8 <_Z7I2CInitm+0x78>)
     972:	2102      	movs	r1, #2
     974:	681a      	ldr	r2, [r3, #0]
 ** Returned value:		true or false, return false if the I2C
 **				interrupt handler was not installed correctly
 ** 
 *****************************************************************************/
 uint32_t I2CInit( uint32_t I2cMode )
 {
     976:	b530      	push	{r4, r5, lr}
   PRESETCTRL |= (0x1<<1);
     978:	430a      	orrs	r2, r1
   SYSAHBCLKCTRL |= (1<<5);
     97a:	4c1c      	ldr	r4, [pc, #112]	; (9ec <_Z7I2CInitm+0x7c>)
 **				interrupt handler was not installed correctly
 ** 
 *****************************************************************************/
 uint32_t I2CInit( uint32_t I2cMode )
 {
   PRESETCTRL |= (0x1<<1);
     97c:	601a      	str	r2, [r3, #0]
   SYSAHBCLKCTRL |= (1<<5);
     97e:	6825      	ldr	r5, [r4, #0]
     980:	2320      	movs	r3, #32
   IOCON_PIO0_4 &= ~0x3F;	/*  I2C I/O config */
     982:	4a1b      	ldr	r2, [pc, #108]	; (9f0 <_Z7I2CInitm+0x80>)
 ** 
 *****************************************************************************/
 uint32_t I2CInit( uint32_t I2cMode )
 {
   PRESETCTRL |= (0x1<<1);
   SYSAHBCLKCTRL |= (1<<5);
     984:	431d      	orrs	r5, r3
     986:	6025      	str	r5, [r4, #0]
   IOCON_PIO0_4 &= ~0x3F;	/*  I2C I/O config */
     988:	6811      	ldr	r1, [r2, #0]
     98a:	243f      	movs	r4, #63	; 0x3f
     98c:	43a1      	bics	r1, r4
     98e:	6011      	str	r1, [r2, #0]
   IOCON_PIO0_4 |= 0x01;		/* I2C SCL */
     990:	6815      	ldr	r5, [r2, #0]
     992:	2101      	movs	r1, #1
   IOCON_PIO0_5 &= ~0x3F;	
     994:	4b17      	ldr	r3, [pc, #92]	; (9f4 <_Z7I2CInitm+0x84>)
 uint32_t I2CInit( uint32_t I2cMode )
 {
   PRESETCTRL |= (0x1<<1);
   SYSAHBCLKCTRL |= (1<<5);
   IOCON_PIO0_4 &= ~0x3F;	/*  I2C I/O config */
   IOCON_PIO0_4 |= 0x01;		/* I2C SCL */
     996:	430d      	orrs	r5, r1
     998:	6015      	str	r5, [r2, #0]
   IOCON_PIO0_5 &= ~0x3F;	
     99a:	681d      	ldr	r5, [r3, #0]
     99c:	43a5      	bics	r5, r4
     99e:	601d      	str	r5, [r3, #0]
   IOCON_PIO0_5 |= 0x01;		/* I2C SDA */
     9a0:	681d      	ldr	r5, [r3, #0]

   /*--- Clear flags ---*/
   I2C0CONCLR = I2CONCLR_AAC | I2CONCLR_SIC | I2CONCLR_STAC | I2CONCLR_I2ENC;    
     9a2:	246c      	movs	r4, #108	; 0x6c
   PRESETCTRL |= (0x1<<1);
   SYSAHBCLKCTRL |= (1<<5);
   IOCON_PIO0_4 &= ~0x3F;	/*  I2C I/O config */
   IOCON_PIO0_4 |= 0x01;		/* I2C SCL */
   IOCON_PIO0_5 &= ~0x3F;	
   IOCON_PIO0_5 |= 0x01;		/* I2C SDA */
     9a4:	4329      	orrs	r1, r5
     9a6:	6019      	str	r1, [r3, #0]

   /*--- Clear flags ---*/
   I2C0CONCLR = I2CONCLR_AAC | I2CONCLR_SIC | I2CONCLR_STAC | I2CONCLR_I2ENC;    
     9a8:	4913      	ldr	r1, [pc, #76]	; (9f8 <_Z7I2CInitm+0x88>)
     9aa:	600c      	str	r4, [r1, #0]

   /*--- Reset registers ---*/
 #if FAST_MODE_PLUS
   IOCON_PIO0_4 |= (0x2<<8);
     9ac:	6815      	ldr	r5, [r2, #0]
     9ae:	2480      	movs	r4, #128	; 0x80
     9b0:	00a1      	lsls	r1, r4, #2
     9b2:	430d      	orrs	r5, r1
     9b4:	6015      	str	r5, [r2, #0]
   IOCON_PIO0_5 |= (0x2<<8);
     9b6:	681a      	ldr	r2, [r3, #0]
   I2C0SCLL   = I2SCLL_HS_SCLL;
     9b8:	4d10      	ldr	r5, [pc, #64]	; (9fc <_Z7I2CInitm+0x8c>)
   I2C0CONCLR = I2CONCLR_AAC | I2CONCLR_SIC | I2CONCLR_STAC | I2CONCLR_I2ENC;    

   /*--- Reset registers ---*/
 #if FAST_MODE_PLUS
   IOCON_PIO0_4 |= (0x2<<8);
   IOCON_PIO0_5 |= (0x2<<8);
     9ba:	4311      	orrs	r1, r2
   I2C0SCLL   = I2SCLL_HS_SCLL;
   I2C0SCLH   = I2SCLH_HS_SCLH;
     9bc:	4c10      	ldr	r4, [pc, #64]	; (a00 <_Z7I2CInitm+0x90>)
   I2C0CONCLR = I2CONCLR_AAC | I2CONCLR_SIC | I2CONCLR_STAC | I2CONCLR_I2ENC;    

   /*--- Reset registers ---*/
 #if FAST_MODE_PLUS
   IOCON_PIO0_4 |= (0x2<<8);
   IOCON_PIO0_5 |= (0x2<<8);
     9be:	6019      	str	r1, [r3, #0]
   I2C0SCLL   = I2SCLL_HS_SCLL;
     9c0:	233c      	movs	r3, #60	; 0x3c
     9c2:	602b      	str	r3, [r5, #0]
   I2C0SCLH   = I2SCLH_HS_SCLH;
     9c4:	6023      	str	r3, [r4, #0]
 #else
   I2C0SCLL   = I2SCLL_SCLL;
   I2C0SCLH   = I2SCLH_SCLH;
 #endif

   if ( I2cMode == I2CSLAVE )
     9c6:	2802      	cmp	r0, #2
     9c8:	d102      	bne.n	9d0 <_Z7I2CInitm+0x60>
   {
	 I2C0ADR0 = PCF8594_ADDR;
     9ca:	490e      	ldr	r1, [pc, #56]	; (a04 <_Z7I2CInitm+0x94>)
     9cc:	20a0      	movs	r0, #160	; 0xa0
     9ce:	6008      	str	r0, [r1, #0]
   }    

   /* Enable the I2C Interrupt */
   bitSet(ISER, 15);
     9d0:	4b0d      	ldr	r3, [pc, #52]	; (a08 <_Z7I2CInitm+0x98>)
     9d2:	2280      	movs	r2, #128	; 0x80
     9d4:	681d      	ldr	r5, [r3, #0]
     9d6:	0214      	lsls	r4, r2, #8
     9d8:	432c      	orrs	r4, r5

   I2C0CONSET = I2CONSET_I2EN;
     9da:	2180      	movs	r1, #128	; 0x80
   {
	 I2C0ADR0 = PCF8594_ADDR;
   }    

   /* Enable the I2C Interrupt */
   bitSet(ISER, 15);
     9dc:	601c      	str	r4, [r3, #0]

   I2C0CONSET = I2CONSET_I2EN;
     9de:	2040      	movs	r0, #64	; 0x40
     9e0:	05cb      	lsls	r3, r1, #23
     9e2:	6018      	str	r0, [r3, #0]
   return( 1 );
 }
     9e4:	2001      	movs	r0, #1
     9e6:	bd30      	pop	{r4, r5, pc}
     9e8:	40048004 	.word	0x40048004
     9ec:	40048080 	.word	0x40048080
     9f0:	40044030 	.word	0x40044030
     9f4:	40044034 	.word	0x40044034
     9f8:	40000018 	.word	0x40000018
     9fc:	40000014 	.word	0x40000014
     a00:	40000010 	.word	0x40000010
     a04:	4000000c 	.word	0x4000000c
     a08:	e000e100 	.word	0xe000e100

00000a0c <_Z9I2CEnginev>:
 **				timed out. 
 ** 
 *****************************************************************************/
 uint32_t I2CEngine( void ) 
 {
   RdIndex = 0;
     a0c:	4a0f      	ldr	r2, [pc, #60]	; (a4c <_Z9I2CEnginev+0x40>)
   WrIndex = 0;
     a0e:	4810      	ldr	r0, [pc, #64]	; (a50 <_Z9I2CEnginev+0x44>)
 **				timed out. 
 ** 
 *****************************************************************************/
 uint32_t I2CEngine( void ) 
 {
   RdIndex = 0;
     a10:	2300      	movs	r3, #0
     a12:	6013      	str	r3, [r2, #0]
   WrIndex = 0;
     a14:	6003      	str	r3, [r0, #0]

   /*--- Issue a start condition ---*/
   I2C0CONSET = I2CONSET_STA;	/* Set Start flag */
     a16:	2380      	movs	r3, #128	; 0x80
     a18:	05da      	lsls	r2, r3, #23

   I2CMasterState = I2C_BUSY;	
     a1a:	4b0e      	ldr	r3, [pc, #56]	; (a54 <_Z9I2CEnginev+0x48>)
 {
   RdIndex = 0;
   WrIndex = 0;

   /*--- Issue a start condition ---*/
   I2C0CONSET = I2CONSET_STA;	/* Set Start flag */
     a1c:	2120      	movs	r1, #32

   I2CMasterState = I2C_BUSY;	
     a1e:	2006      	movs	r0, #6
 {
   RdIndex = 0;
   WrIndex = 0;

   /*--- Issue a start condition ---*/
   I2C0CONSET = I2CONSET_STA;	/* Set Start flag */
     a20:	6011      	str	r1, [r2, #0]

   I2CMasterState = I2C_BUSY;	
     a22:	6018      	str	r0, [r3, #0]

   while ( I2CMasterState == I2C_BUSY )
     a24:	6819      	ldr	r1, [r3, #0]
     a26:	2906      	cmp	r1, #6
     a28:	d10b      	bne.n	a42 <_Z9I2CEnginev+0x36>
   {
	 if ( timeout >= MAX_TIMEOUT )
     a2a:	4a0b      	ldr	r2, [pc, #44]	; (a58 <_Z9I2CEnginev+0x4c>)
     a2c:	490b      	ldr	r1, [pc, #44]	; (a5c <_Z9I2CEnginev+0x50>)
     a2e:	6810      	ldr	r0, [r2, #0]
     a30:	4288      	cmp	r0, r1
     a32:	d902      	bls.n	a3a <_Z9I2CEnginev+0x2e>
	 {
	   I2CMasterState = I2C_TIME_OUT;
     a34:	220b      	movs	r2, #11
     a36:	601a      	str	r2, [r3, #0]
	   break;
     a38:	e003      	b.n	a42 <_Z9I2CEnginev+0x36>
	 }
	 timeout++;
     a3a:	6810      	ldr	r0, [r2, #0]
     a3c:	3001      	adds	r0, #1
     a3e:	6010      	str	r0, [r2, #0]
     a40:	e7f0      	b.n	a24 <_Z9I2CEnginev+0x18>
   }    
   I2C0CONCLR = I2CONCLR_STAC;
     a42:	4807      	ldr	r0, [pc, #28]	; (a60 <_Z9I2CEnginev+0x54>)
     a44:	2120      	movs	r1, #32
     a46:	6001      	str	r1, [r0, #0]

   return ( I2CMasterState );
     a48:	6818      	ldr	r0, [r3, #0]
 }
     a4a:	4770      	bx	lr
     a4c:	10000a6c 	.word	0x10000a6c
     a50:	10000a78 	.word	0x10000a78
     a54:	10000a74 	.word	0x10000a74
     a58:	10000a7c 	.word	0x10000a7c
     a5c:	00fffffe 	.word	0x00fffffe
     a60:	40000018 	.word	0x40000018

00000a64 <_ZN7TwoWire5beginEv>:
 }

 // Public Methods //////////////////////////////////////////////////////////////

 void TwoWire::begin(void)
 {
     a64:	b508      	push	{r3, lr}
   I2CInit(I2CMASTER);
     a66:	2001      	movs	r0, #1
     a68:	f7ff ff82 	bl	970 <_Z7I2CInitm>
 }
     a6c:	bd08      	pop	{r3, pc}
	...

00000a70 <_ZN7TwoWire11requestFromEhhh>:

 uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity, uint8_t sendStop)
 {
   I2CReadLength = quantity;
   I2CMasterBuffer[1] = address;
     a70:	4806      	ldr	r0, [pc, #24]	; (a8c <_ZN7TwoWire11requestFromEhhh+0x1c>)
   I2CInit(I2CMASTER);
 }

 uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity, uint8_t sendStop)
 {
   I2CReadLength = quantity;
     a72:	4b07      	ldr	r3, [pc, #28]	; (a90 <_ZN7TwoWire11requestFromEhhh+0x20>)
     a74:	601a      	str	r2, [r3, #0]
   I2CMasterBuffer[1] = address;
     a76:	7041      	strb	r1, [r0, #1]
   I2CMasterBuffer[2] = I2CMasterBuffer[0] | RD_BIT;
     a78:	7802      	ldrb	r2, [r0, #0]
     a7a:	2101      	movs	r1, #1
     a7c:	430a      	orrs	r2, r1
   I2CWriteLength += 1;
     a7e:	4b05      	ldr	r3, [pc, #20]	; (a94 <_ZN7TwoWire11requestFromEhhh+0x24>)

 uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity, uint8_t sendStop)
 {
   I2CReadLength = quantity;
   I2CMasterBuffer[1] = address;
   I2CMasterBuffer[2] = I2CMasterBuffer[0] | RD_BIT;
     a80:	7082      	strb	r2, [r0, #2]
   I2CWriteLength += 1;
     a82:	6818      	ldr	r0, [r3, #0]
     a84:	1842      	adds	r2, r0, r1
     a86:	601a      	str	r2, [r3, #0]
   return 0;
 }
     a88:	2000      	movs	r0, #0
     a8a:	4770      	bx	lr
     a8c:	100009e1 	.word	0x100009e1
     a90:	10000a64 	.word	0x10000a64
     a94:	10000a68 	.word	0x10000a68

00000a98 <_ZN7TwoWire11requestFromEii>:
 {
   return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
 }

 uint8_t TwoWire::requestFrom(int address, int quantity)
 {
     a98:	b508      	push	{r3, lr}
   return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
     a9a:	b2c9      	uxtb	r1, r1
     a9c:	b2d2      	uxtb	r2, r2
     a9e:	2301      	movs	r3, #1
     aa0:	f7ff ffe6 	bl	a70 <_ZN7TwoWire11requestFromEhhh>
 }
     aa4:	bd08      	pop	{r3, pc}
	...

00000aa8 <_ZN7TwoWire17beginTransmissionEh>:
   return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)sendStop);
 }

 void TwoWire::beginTransmission(uint8_t address)
 {
   I2CWriteLength = 1;
     aa8:	4b04      	ldr	r3, [pc, #16]	; (abc <_ZN7TwoWire17beginTransmissionEh+0x14>)
     aaa:	2201      	movs	r2, #1
     aac:	601a      	str	r2, [r3, #0]
   I2CReadLength = 0;
     aae:	4a04      	ldr	r2, [pc, #16]	; (ac0 <_ZN7TwoWire17beginTransmissionEh+0x18>)
   I2CMasterBuffer[0] = address;
     ab0:	4b04      	ldr	r3, [pc, #16]	; (ac4 <_ZN7TwoWire17beginTransmissionEh+0x1c>)
 }

 void TwoWire::beginTransmission(uint8_t address)
 {
   I2CWriteLength = 1;
   I2CReadLength = 0;
     ab2:	2000      	movs	r0, #0
     ab4:	6010      	str	r0, [r2, #0]
   I2CMasterBuffer[0] = address;
     ab6:	7019      	strb	r1, [r3, #0]
 }
     ab8:	4770      	bx	lr
     aba:	46c0      	nop			; (mov r8, r8)
     abc:	10000a68 	.word	0x10000a68
     ac0:	10000a64 	.word	0x10000a64
     ac4:	100009e1 	.word	0x100009e1

00000ac8 <_ZN7TwoWire15endTransmissionEv>:

//	This provides backwards compatibility with the original
//	definition, and expected behaviour, of endTransmission
//
uint8_t TwoWire::endTransmission(void)
{
     ac8:	b508      	push	{r3, lr}
 //	no call to endTransmission(true) is made. Some I2C
 //	devices will behave oddly if they do not see a STOP.
 //
uint8_t TwoWire::endTransmission(uint8_t sendStop)
{
  return I2CEngine();
     aca:	f7ff ff9f 	bl	a0c <_Z9I2CEnginev>
//	This provides backwards compatibility with the original
//	definition, and expected behaviour, of endTransmission
//
uint8_t TwoWire::endTransmission(void)
{
  return endTransmission(true);
     ace:	b2c0      	uxtb	r0, r0
}
     ad0:	bd08      	pop	{r3, pc}
	...

00000ad4 <_ZN7TwoWire5writeEh>:

size_t TwoWire::write(uint8_t data)
{
  I2CMasterBuffer[I2CWriteLength] = data;
     ad4:	4b04      	ldr	r3, [pc, #16]	; (ae8 <_ZN7TwoWire5writeEh+0x14>)
     ad6:	4805      	ldr	r0, [pc, #20]	; (aec <_ZN7TwoWire5writeEh+0x18>)
     ad8:	681a      	ldr	r2, [r3, #0]
     ada:	5481      	strb	r1, [r0, r2]
  I2CWriteLength++;
     adc:	6819      	ldr	r1, [r3, #0]
  return 1;
}
     ade:	2001      	movs	r0, #1
}

size_t TwoWire::write(uint8_t data)
{
  I2CMasterBuffer[I2CWriteLength] = data;
  I2CWriteLength++;
     ae0:	3101      	adds	r1, #1
     ae2:	6019      	str	r1, [r3, #0]
  return 1;
}
     ae4:	4770      	bx	lr
     ae6:	46c0      	nop			; (mov r8, r8)
     ae8:	10000a68 	.word	0x10000a68
     aec:	100009e1 	.word	0x100009e1

00000af0 <_ZN7TwoWire4readEv>:
// or after requestFrom(address, numBytes)
uint8_t TwoWire::read(void)
{
  int value = -1;
  
  value = I2CSlaveBuffer[I2CReadLength-1];
     af0:	4b04      	ldr	r3, [pc, #16]	; (b04 <_ZN7TwoWire4readEv+0x14>)
     af2:	4905      	ldr	r1, [pc, #20]	; (b08 <_ZN7TwoWire4readEv+0x18>)
     af4:	681a      	ldr	r2, [r3, #0]
     af6:	3a01      	subs	r2, #1
     af8:	5c88      	ldrb	r0, [r1, r2]
  I2CReadLength--;
     afa:	681a      	ldr	r2, [r3, #0]
     afc:	3a01      	subs	r2, #1
     afe:	601a      	str	r2, [r3, #0]

  return value;
}
     b00:	4770      	bx	lr
     b02:	46c0      	nop			; (mov r8, r8)
     b04:	10000a64 	.word	0x10000a64
     b08:	10000a80 	.word	0x10000a80

00000b0c <_ZN5Print5writeEPKhj>:

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     b0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     b0e:	1c06      	adds	r6, r0, #0
     b10:	1c0c      	adds	r4, r1, #0
#include "Print.h"

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
     b12:	188f      	adds	r7, r1, r2
{
  size_t n = 0;
     b14:	2500      	movs	r5, #0
  while (size--) {
     b16:	42bc      	cmp	r4, r7
     b18:	d007      	beq.n	b2a <_ZN5Print5writeEPKhj+0x1e>
    n += write(*buffer++);
     b1a:	6833      	ldr	r3, [r6, #0]
     b1c:	7821      	ldrb	r1, [r4, #0]
     b1e:	681a      	ldr	r2, [r3, #0]
     b20:	1c30      	adds	r0, r6, #0
     b22:	4790      	blx	r2
     b24:	3401      	adds	r4, #1
     b26:	182d      	adds	r5, r5, r0
     b28:	e7f5      	b.n	b16 <_ZN5Print5writeEPKhj+0xa>
  }
  return n;
}
     b2a:	1c28      	adds	r0, r5, #0
     b2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00000b2e <_ZN5Print5writeEPKc>:
  
    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }
  
    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
     b2e:	b538      	push	{r3, r4, r5, lr}
     b30:	1c05      	adds	r5, r0, #0
     b32:	1c0c      	adds	r4, r1, #0
      if (str == NULL) return 0;
     b34:	1e08      	subs	r0, r1, #0
     b36:	d007      	beq.n	b48 <_ZN5Print5writeEPKc+0x1a>
      return write((const uint8_t *)str, strlen(str));
     b38:	f000 fccc 	bl	14d4 <strlen>
     b3c:	682b      	ldr	r3, [r5, #0]
     b3e:	1c02      	adds	r2, r0, #0
     b40:	685b      	ldr	r3, [r3, #4]
     b42:	1c28      	adds	r0, r5, #0
     b44:	1c21      	adds	r1, r4, #0
     b46:	4798      	blx	r3
    }
     b48:	bd38      	pop	{r3, r4, r5, pc}

00000b4a <_ZN5Print5printEPKc>:
  }
  return n;
}

size_t Print::print(const char str[])
{
     b4a:	b508      	push	{r3, lr}
  return write(str);
     b4c:	f7ff ffef 	bl	b2e <_ZN5Print5writeEPKc>
}
     b50:	bd08      	pop	{r3, pc}

00000b52 <_ZN5Print5printEc>:

size_t Print::print(char c)
{
     b52:	b508      	push	{r3, lr}
  return write(c);
     b54:	6803      	ldr	r3, [r0, #0]
     b56:	681a      	ldr	r2, [r3, #0]
     b58:	4790      	blx	r2
}
     b5a:	bd08      	pop	{r3, pc}

00000b5c <_ZN5Print7printlnEv>:
{
  return x.printTo(*this);
}

size_t Print::println(void)
{
     b5c:	b538      	push	{r3, r4, r5, lr}
  size_t n = print('\r');
     b5e:	210d      	movs	r1, #13
{
  return x.printTo(*this);
}

size_t Print::println(void)
{
     b60:	1c04      	adds	r4, r0, #0
  size_t n = print('\r');
     b62:	f7ff fff6 	bl	b52 <_ZN5Print5printEc>
  n += print('\n');
     b66:	210a      	movs	r1, #10
  return x.printTo(*this);
}

size_t Print::println(void)
{
  size_t n = print('\r');
     b68:	1c05      	adds	r5, r0, #0
  n += print('\n');
     b6a:	1c20      	adds	r0, r4, #0
     b6c:	f7ff fff1 	bl	b52 <_ZN5Print5printEc>
     b70:	1940      	adds	r0, r0, r5
  return n;
}
     b72:	bd38      	pop	{r3, r4, r5, pc}

00000b74 <_ZN5Print7printlnEPKc>:
  n += println();
  return n;
}

size_t Print::println(const char c[])
{
     b74:	b538      	push	{r3, r4, r5, lr}
     b76:	1c04      	adds	r4, r0, #0
  return n;
}

size_t Print::print(const char str[])
{
  return write(str);
     b78:	f7ff ffd9 	bl	b2e <_ZN5Print5writeEPKc>
     b7c:	1c05      	adds	r5, r0, #0
}

size_t Print::println(const char c[])
{
  size_t n = print(c);
  n += println();
     b7e:	1c20      	adds	r0, r4, #0
     b80:	f7ff ffec 	bl	b5c <_ZN5Print7printlnEv>
     b84:	1828      	adds	r0, r5, r0
  return n;
}
     b86:	bd38      	pop	{r3, r4, r5, pc}

00000b88 <_ZN5Print7printlnEc>:

size_t Print::println(char c)
{
     b88:	b538      	push	{r3, r4, r5, lr}
     b8a:	1c04      	adds	r4, r0, #0
  size_t n = print(c);
     b8c:	f7ff ffe1 	bl	b52 <_ZN5Print5printEc>
     b90:	1c05      	adds	r5, r0, #0
  n += println();
     b92:	1c20      	adds	r0, r4, #0
     b94:	f7ff ffe2 	bl	b5c <_ZN5Print7printlnEv>
     b98:	1940      	adds	r0, r0, r5
  return n;
}
     b9a:	bd38      	pop	{r3, r4, r5, pc}

00000b9c <_ZN5Print11printNumberEmh>:
  return n;
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base) {
     b9c:	b5f0      	push	{r4, r5, r6, r7, lr}
     b9e:	b08b      	sub	sp, #44	; 0x2c
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
     ba0:	ac09      	add	r4, sp, #36	; 0x24
     ba2:	2300      	movs	r3, #0
  return n;
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base) {
     ba4:	1c07      	adds	r7, r0, #0
     ba6:	1c0d      	adds	r5, r1, #0
     ba8:	1c16      	adds	r6, r2, #0
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
     baa:	7023      	strb	r3, [r4, #0]

  // prevent crash if called with base == 1
  if (base < 2) base = 10;
     bac:	2a01      	cmp	r2, #1
     bae:	d800      	bhi.n	bb2 <_ZN5Print11printNumberEmh+0x16>
     bb0:	260a      	movs	r6, #10

  do {
    unsigned long m = n;
    n /= base;
     bb2:	1c28      	adds	r0, r5, #0
     bb4:	1c31      	adds	r1, r6, #0
     bb6:	f000 fde5 	bl	1784 <__aeabi_uidiv>
    char c = m - base * n;
     bba:	1c01      	adds	r1, r0, #0
     bbc:	4371      	muls	r1, r6
     bbe:	1a6d      	subs	r5, r5, r1
     bc0:	b2ea      	uxtb	r2, r5
    *--str = c < 10 ? c + '0' : c + 'A' - 10;
     bc2:	3c01      	subs	r4, #1
     bc4:	2a09      	cmp	r2, #9
     bc6:	d801      	bhi.n	bcc <_ZN5Print11printNumberEmh+0x30>
     bc8:	3230      	adds	r2, #48	; 0x30
     bca:	e000      	b.n	bce <_ZN5Print11printNumberEmh+0x32>
     bcc:	3237      	adds	r2, #55	; 0x37
     bce:	b2d3      	uxtb	r3, r2
     bd0:	7023      	strb	r3, [r4, #0]
  // prevent crash if called with base == 1
  if (base < 2) base = 10;

  do {
    unsigned long m = n;
    n /= base;
     bd2:	1e05      	subs	r5, r0, #0
  *str = '\0';

  // prevent crash if called with base == 1
  if (base < 2) base = 10;

  do {
     bd4:	d1ed      	bne.n	bb2 <_ZN5Print11printNumberEmh+0x16>
    n /= base;
    char c = m - base * n;
    *--str = c < 10 ? c + '0' : c + 'A' - 10;
  } while(n);

  return write(str);
     bd6:	1c38      	adds	r0, r7, #0
     bd8:	1c21      	adds	r1, r4, #0
     bda:	f7ff ffa8 	bl	b2e <_ZN5Print5writeEPKc>
}
     bde:	b00b      	add	sp, #44	; 0x2c
     be0:	bdf0      	pop	{r4, r5, r6, r7, pc}

00000be2 <_ZN5Print5printEmi>:
    return printNumber(n, base);
  }
}

size_t Print::print(unsigned long n, int base)
{
     be2:	b508      	push	{r3, lr}
  if (base == 0) return write(n);
     be4:	2a00      	cmp	r2, #0
     be6:	d104      	bne.n	bf2 <_ZN5Print5printEmi+0x10>
     be8:	6803      	ldr	r3, [r0, #0]
     bea:	b2c9      	uxtb	r1, r1
     bec:	681a      	ldr	r2, [r3, #0]
     bee:	4790      	blx	r2
     bf0:	e002      	b.n	bf8 <_ZN5Print5printEmi+0x16>
  else return printNumber(n, base);
     bf2:	b2d2      	uxtb	r2, r2
     bf4:	f7ff ffd2 	bl	b9c <_ZN5Print11printNumberEmh>
}
     bf8:	bd08      	pop	{r3, pc}

00000bfa <_ZN5Print7printlnEhi>:
  n += println();
  return n;
}

size_t Print::println(unsigned char b, int base)
{
     bfa:	b538      	push	{r3, r4, r5, lr}
     bfc:	1c04      	adds	r4, r0, #0
  return write(c);
}

size_t Print::print(unsigned char b, int base)
{
  return print((unsigned long) b, base);
     bfe:	f7ff fff0 	bl	be2 <_ZN5Print5printEmi>
     c02:	1c05      	adds	r5, r0, #0
}

size_t Print::println(unsigned char b, int base)
{
  size_t n = print(b, base);
  n += println();
     c04:	1c20      	adds	r0, r4, #0
     c06:	f7ff ffa9 	bl	b5c <_ZN5Print7printlnEv>
     c0a:	1828      	adds	r0, r5, r0
  return n;
}
     c0c:	bd38      	pop	{r3, r4, r5, pc}

00000c0e <_ZN5Print5printEli>:
{
  return print((unsigned long) n, base);
}

size_t Print::print(long n, int base)
{
     c0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c10:	1c04      	adds	r4, r0, #0
     c12:	1c0d      	adds	r5, r1, #0
     c14:	1e16      	subs	r6, r2, #0
  if (base == 0) {
     c16:	d104      	bne.n	c22 <_ZN5Print5printEli+0x14>
    return write(n);
     c18:	6803      	ldr	r3, [r0, #0]
     c1a:	b2c9      	uxtb	r1, r1
     c1c:	681a      	ldr	r2, [r3, #0]
     c1e:	4790      	blx	r2
     c20:	e012      	b.n	c48 <_ZN5Print5printEli+0x3a>
  } else if (base == 10) {
     c22:	2a0a      	cmp	r2, #10
     c24:	d10d      	bne.n	c42 <_ZN5Print5printEli+0x34>
    if (n < 0) {
     c26:	2900      	cmp	r1, #0
     c28:	da0a      	bge.n	c40 <_ZN5Print5printEli+0x32>
      int t = print('-');
     c2a:	212d      	movs	r1, #45	; 0x2d
     c2c:	f7ff ff91 	bl	b52 <_ZN5Print5printEc>
      n = -n;
     c30:	4269      	negs	r1, r5
{
  if (base == 0) {
    return write(n);
  } else if (base == 10) {
    if (n < 0) {
      int t = print('-');
     c32:	1c07      	adds	r7, r0, #0
      n = -n;
      return printNumber(n, 10) + t;
     c34:	1c32      	adds	r2, r6, #0
     c36:	1c20      	adds	r0, r4, #0
     c38:	f7ff ffb0 	bl	b9c <_ZN5Print11printNumberEmh>
     c3c:	19c0      	adds	r0, r0, r7
     c3e:	e003      	b.n	c48 <_ZN5Print5printEli+0x3a>
     c40:	e000      	b.n	c44 <_ZN5Print5printEli+0x36>
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
     c42:	b2d2      	uxtb	r2, r2
     c44:	f7ff ffaa 	bl	b9c <_ZN5Print11printNumberEmh>
  }
}
     c48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00000c4a <_ZN5Print7printlnEli>:
  n += println();
  return n;
}

size_t Print::println(long num, int base)
{
     c4a:	b538      	push	{r3, r4, r5, lr}
     c4c:	1c04      	adds	r4, r0, #0
  size_t n = print(num, base);
     c4e:	f7ff ffde 	bl	c0e <_ZN5Print5printEli>
     c52:	1c05      	adds	r5, r0, #0
  n += println();
     c54:	1c20      	adds	r0, r4, #0
     c56:	f7ff ff81 	bl	b5c <_ZN5Print7printlnEv>
     c5a:	1940      	adds	r0, r0, r5
  return n;
}
     c5c:	bd38      	pop	{r3, r4, r5, pc}
	...

00000c60 <_ZN5Print10printFloatEdh>:

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
     c60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     c62:	1c1c      	adds	r4, r3, #0
     c64:	ab08      	add	r3, sp, #32
     c66:	1c07      	adds	r7, r0, #0
     c68:	7818      	ldrb	r0, [r3, #0]
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
     c6a:	1c21      	adds	r1, r4, #0

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
     c6c:	9000      	str	r0, [sp, #0]
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
     c6e:	1c10      	adds	r0, r2, #0

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
     c70:	1c15      	adds	r5, r2, #0
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
     c72:	f000 fbe5 	bl	1440 <__fpclassifyd>
     c76:	2800      	cmp	r0, #0
     c78:	d102      	bne.n	c80 <_ZN5Print10printFloatEdh+0x20>
  return n;
}

size_t Print::print(const char str[])
{
  return write(str);
     c7a:	1c38      	adds	r0, r7, #0
     c7c:	4950      	ldr	r1, [pc, #320]	; (dc0 <_ZN5Print10printFloatEdh+0x160>)
     c7e:	e007      	b.n	c90 <_ZN5Print10printFloatEdh+0x30>
size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
     c80:	1c28      	adds	r0, r5, #0
     c82:	1c21      	adds	r1, r4, #0
     c84:	f000 fbdc 	bl	1440 <__fpclassifyd>
     c88:	2801      	cmp	r0, #1
     c8a:	d105      	bne.n	c98 <_ZN5Print10printFloatEdh+0x38>
  return n;
}

size_t Print::print(const char str[])
{
  return write(str);
     c8c:	494d      	ldr	r1, [pc, #308]	; (dc4 <_ZN5Print10printFloatEdh+0x164>)
     c8e:	1c38      	adds	r0, r7, #0
     c90:	f7ff ff4d 	bl	b2e <_ZN5Print5writeEPKc>
     c94:	1c06      	adds	r6, r0, #0
size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
     c96:	e07b      	b.n	d90 <_ZN5Print10printFloatEdh+0x130>
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
     c98:	1c28      	adds	r0, r5, #0
     c9a:	1c21      	adds	r1, r4, #0
     c9c:	4b3f      	ldr	r3, [pc, #252]	; (d9c <_ZN5Print10printFloatEdh+0x13c>)
     c9e:	4a3e      	ldr	r2, [pc, #248]	; (d98 <_ZN5Print10printFloatEdh+0x138>)
     ca0:	f000 fdea 	bl	1878 <__aeabi_dcmpgt>
     ca4:	2800      	cmp	r0, #0
     ca6:	d107      	bne.n	cb8 <_ZN5Print10printFloatEdh+0x58>
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
     ca8:	1c28      	adds	r0, r5, #0
     caa:	1c21      	adds	r1, r4, #0
     cac:	4a3c      	ldr	r2, [pc, #240]	; (da0 <_ZN5Print10printFloatEdh+0x140>)
     cae:	4b3d      	ldr	r3, [pc, #244]	; (da4 <_ZN5Print10printFloatEdh+0x144>)
     cb0:	f000 fdce 	bl	1850 <__aeabi_dcmplt>
     cb4:	2800      	cmp	r0, #0
     cb6:	d002      	beq.n	cbe <_ZN5Print10printFloatEdh+0x5e>
  return n;
}

size_t Print::print(const char str[])
{
  return write(str);
     cb8:	1c38      	adds	r0, r7, #0
     cba:	4943      	ldr	r1, [pc, #268]	; (dc8 <_ZN5Print10printFloatEdh+0x168>)
     cbc:	e7e8      	b.n	c90 <_ZN5Print10printFloatEdh+0x30>
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
  
  // Handle negative numbers
  if (number < 0.0)
     cbe:	1c28      	adds	r0, r5, #0
     cc0:	1c21      	adds	r1, r4, #0
     cc2:	4a39      	ldr	r2, [pc, #228]	; (da8 <_ZN5Print10printFloatEdh+0x148>)
     cc4:	4b39      	ldr	r3, [pc, #228]	; (dac <_ZN5Print10printFloatEdh+0x14c>)
     cc6:	f000 fdc3 	bl	1850 <__aeabi_dcmplt>
     cca:	2800      	cmp	r0, #0
     ccc:	d008      	beq.n	ce0 <_ZN5Print10printFloatEdh+0x80>
  {
     n += print('-');
     cce:	212d      	movs	r1, #45	; 0x2d
     cd0:	1c38      	adds	r0, r7, #0
     cd2:	f7ff ff3e 	bl	b52 <_ZN5Print5printEc>
     number = -number;
     cd6:	2180      	movs	r1, #128	; 0x80
     cd8:	060a      	lsls	r2, r1, #24
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
  
  // Handle negative numbers
  if (number < 0.0)
  {
     n += print('-');
     cda:	9001      	str	r0, [sp, #4]
     number = -number;
     cdc:	18a4      	adds	r4, r4, r2
     cde:	e000      	b.n	ce2 <_ZN5Print10printFloatEdh+0x82>
  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
     ce0:	9001      	str	r0, [sp, #4]
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
     ce2:	2600      	movs	r6, #0
     n += print('-');
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
     ce4:	4a32      	ldr	r2, [pc, #200]	; (db0 <_ZN5Print10printFloatEdh+0x150>)
     ce6:	4b33      	ldr	r3, [pc, #204]	; (db4 <_ZN5Print10printFloatEdh+0x154>)
  for (uint8_t i=0; i<digits; ++i)
     ce8:	9800      	ldr	r0, [sp, #0]
     cea:	4286      	cmp	r6, r0
     cec:	d00a      	beq.n	d04 <_ZN5Print10printFloatEdh+0xa4>
    rounding /= 10.0;
     cee:	1c10      	adds	r0, r2, #0
     cf0:	1c19      	adds	r1, r3, #0
     cf2:	4a31      	ldr	r2, [pc, #196]	; (db8 <_ZN5Print10printFloatEdh+0x158>)
     cf4:	4b31      	ldr	r3, [pc, #196]	; (dbc <_ZN5Print10printFloatEdh+0x15c>)
     cf6:	f001 f9a3 	bl	2040 <__aeabi_ddiv>
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
     cfa:	3601      	adds	r6, #1
    rounding /= 10.0;
     cfc:	1c02      	adds	r2, r0, #0
     cfe:	1c0b      	adds	r3, r1, #0
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
     d00:	b2f6      	uxtb	r6, r6
     d02:	e7f1      	b.n	ce8 <_ZN5Print10printFloatEdh+0x88>
    rounding /= 10.0;
  
  number += rounding;
     d04:	1c28      	adds	r0, r5, #0
     d06:	1c21      	adds	r1, r4, #0
     d08:	f000 fdea 	bl	18e0 <__aeabi_dadd>
     d0c:	1c0d      	adds	r5, r1, #0
     d0e:	1c04      	adds	r4, r0, #0

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
     d10:	f000 fdc6 	bl	18a0 <__aeabi_d2uiz>
     d14:	1c06      	adds	r6, r0, #0
  double remainder = number - (double)int_part;
     d16:	f002 fbef 	bl	34f8 <__aeabi_ui2d>
     d1a:	1c0b      	adds	r3, r1, #0
     d1c:	1c02      	adds	r2, r0, #0
     d1e:	1c29      	adds	r1, r5, #0
     d20:	1c20      	adds	r0, r4, #0
     d22:	f001 fff9 	bl	2d18 <__aeabi_dsub>
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
     d26:	220a      	movs	r2, #10
  
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
     d28:	1c04      	adds	r4, r0, #0
     d2a:	1c0d      	adds	r5, r1, #0
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
     d2c:	1c38      	adds	r0, r7, #0
     d2e:	1c31      	adds	r1, r6, #0
     d30:	f7ff ff34 	bl	b9c <_ZN5Print11printNumberEmh>
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
     d34:	9b01      	ldr	r3, [sp, #4]

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
     d36:	9900      	ldr	r1, [sp, #0]
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
     d38:	18c6      	adds	r6, r0, r3

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
     d3a:	2900      	cmp	r1, #0
     d3c:	d028      	beq.n	d90 <_ZN5Print10printFloatEdh+0x130>
  return n;
}

size_t Print::print(const char str[])
{
  return write(str);
     d3e:	1c38      	adds	r0, r7, #0
     d40:	4922      	ldr	r1, [pc, #136]	; (dcc <_ZN5Print10printFloatEdh+0x16c>)
     d42:	f7ff fef4 	bl	b2e <_ZN5Print5writeEPKc>
  double remainder = number - (double)int_part;
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print("."); 
     d46:	1836      	adds	r6, r6, r0
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
     d48:	9a00      	ldr	r2, [sp, #0]
     d4a:	2a00      	cmp	r2, #0
     d4c:	d020      	beq.n	d90 <_ZN5Print10printFloatEdh+0x130>
  {
    remainder *= 10.0;
     d4e:	4a1a      	ldr	r2, [pc, #104]	; (db8 <_ZN5Print10printFloatEdh+0x158>)
     d50:	4b1a      	ldr	r3, [pc, #104]	; (dbc <_ZN5Print10printFloatEdh+0x15c>)
     d52:	1c20      	adds	r0, r4, #0
     d54:	1c29      	adds	r1, r5, #0
     d56:	f001 fd6d 	bl	2834 <__aeabi_dmul>
     d5a:	1c0d      	adds	r5, r1, #0
     d5c:	1c04      	adds	r4, r0, #0
    int toPrint = int(remainder);
     d5e:	f002 fb5d 	bl	341c <__aeabi_d2iz>
     d62:	9001      	str	r0, [sp, #4]
  return print((unsigned long) b, base);
}

size_t Print::print(int n, int base)
{
  return print((long) n, base);
     d64:	220a      	movs	r2, #10
     d66:	9901      	ldr	r1, [sp, #4]
     d68:	1c38      	adds	r0, r7, #0
     d6a:	f7ff ff50 	bl	c0e <_ZN5Print5printEli>
  // Extract digits from the remainder one at a time
  while (digits-- > 0)
  {
    remainder *= 10.0;
    int toPrint = int(remainder);
    n += print(toPrint);
     d6e:	1836      	adds	r6, r6, r0
    remainder -= toPrint; 
     d70:	9801      	ldr	r0, [sp, #4]
     d72:	f002 fb87 	bl	3484 <__aeabi_i2d>
     d76:	1c0b      	adds	r3, r1, #0
     d78:	1c02      	adds	r2, r0, #0
     d7a:	1c29      	adds	r1, r5, #0
     d7c:	1c20      	adds	r0, r4, #0
     d7e:	f001 ffcb 	bl	2d18 <__aeabi_dsub>
     d82:	1c04      	adds	r4, r0, #0
     d84:	9800      	ldr	r0, [sp, #0]
     d86:	1c0d      	adds	r5, r1, #0
     d88:	3801      	subs	r0, #1
     d8a:	b2c3      	uxtb	r3, r0
     d8c:	9300      	str	r3, [sp, #0]
     d8e:	e7db      	b.n	d48 <_ZN5Print10printFloatEdh+0xe8>
  } 
  
  return n;
}
     d90:	1c30      	adds	r0, r6, #0
     d92:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     d94:	46c0      	nop			; (mov r8, r8)
     d96:	46c0      	nop			; (mov r8, r8)
     d98:	e0000000 	.word	0xe0000000
     d9c:	41efffff 	.word	0x41efffff
     da0:	e0000000 	.word	0xe0000000
     da4:	c1efffff 	.word	0xc1efffff
	...
     db4:	3fe00000 	.word	0x3fe00000
     db8:	00000000 	.word	0x00000000
     dbc:	40240000 	.word	0x40240000
     dc0:	000036f8 	.word	0x000036f8
     dc4:	000036fc 	.word	0x000036fc
     dc8:	00003700 	.word	0x00003700
     dcc:	00003704 	.word	0x00003704

00000dd0 <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
     dd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
     dd2:	1c04      	adds	r4, r0, #0
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
     dd4:	4668      	mov	r0, sp
     dd6:	7e01      	ldrb	r1, [r0, #24]
     dd8:	1c20      	adds	r0, r4, #0
     dda:	9100      	str	r1, [sp, #0]
     ddc:	f7ff ff40 	bl	c60 <_ZN5Print10printFloatEdh>
     de0:	1c05      	adds	r5, r0, #0
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
     de2:	1c20      	adds	r0, r4, #0
     de4:	f7ff feba 	bl	b5c <_ZN5Print7printlnEv>
     de8:	1828      	adds	r0, r5, r0
  return n;
}
     dea:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

00000dec <__register_exitproc>:
     dec:	b5f0      	push	{r4, r5, r6, r7, lr}
     dee:	464f      	mov	r7, r9
     df0:	4646      	mov	r6, r8
     df2:	b4c0      	push	{r6, r7}
     df4:	4698      	mov	r8, r3
     df6:	4b2c      	ldr	r3, [pc, #176]	; (ea8 <__register_exitproc+0xbc>)
     df8:	1c06      	adds	r6, r0, #0
     dfa:	25a4      	movs	r5, #164	; 0xa4
     dfc:	6818      	ldr	r0, [r3, #0]
     dfe:	1c0f      	adds	r7, r1, #0
     e00:	0069      	lsls	r1, r5, #1
     e02:	5844      	ldr	r4, [r0, r1]
     e04:	b083      	sub	sp, #12
     e06:	4691      	mov	r9, r2
     e08:	9001      	str	r0, [sp, #4]
     e0a:	2c00      	cmp	r4, #0
     e0c:	d047      	beq.n	e9e <__register_exitproc+0xb2>
     e0e:	6862      	ldr	r2, [r4, #4]
     e10:	2a1f      	cmp	r2, #31
     e12:	dd1a      	ble.n	e4a <__register_exitproc+0x5e>
     e14:	4c25      	ldr	r4, [pc, #148]	; (eac <__register_exitproc+0xc0>)
     e16:	2c00      	cmp	r4, #0
     e18:	d102      	bne.n	e20 <__register_exitproc+0x34>
     e1a:	2701      	movs	r7, #1
     e1c:	4278      	negs	r0, r7
     e1e:	e01d      	b.n	e5c <__register_exitproc+0x70>
     e20:	23c8      	movs	r3, #200	; 0xc8
     e22:	0058      	lsls	r0, r3, #1
     e24:	f000 f874 	bl	f10 <malloc>
     e28:	1e04      	subs	r4, r0, #0
     e2a:	d0f6      	beq.n	e1a <__register_exitproc+0x2e>
     e2c:	2500      	movs	r5, #0
     e2e:	6045      	str	r5, [r0, #4]
     e30:	9901      	ldr	r1, [sp, #4]
     e32:	20a4      	movs	r0, #164	; 0xa4
     e34:	0042      	lsls	r2, r0, #1
     e36:	588b      	ldr	r3, [r1, r2]
     e38:	9801      	ldr	r0, [sp, #4]
     e3a:	6023      	str	r3, [r4, #0]
     e3c:	5084      	str	r4, [r0, r2]
     e3e:	23c6      	movs	r3, #198	; 0xc6
     e40:	22c4      	movs	r2, #196	; 0xc4
     e42:	0051      	lsls	r1, r2, #1
     e44:	0058      	lsls	r0, r3, #1
     e46:	5065      	str	r5, [r4, r1]
     e48:	5025      	str	r5, [r4, r0]
     e4a:	6865      	ldr	r5, [r4, #4]
     e4c:	2e00      	cmp	r6, #0
     e4e:	d10a      	bne.n	e66 <__register_exitproc+0x7a>
     e50:	1ca9      	adds	r1, r5, #2
     e52:	008e      	lsls	r6, r1, #2
     e54:	3501      	adds	r5, #1
     e56:	5137      	str	r7, [r6, r4]
     e58:	6065      	str	r5, [r4, #4]
     e5a:	2000      	movs	r0, #0
     e5c:	b003      	add	sp, #12
     e5e:	bc0c      	pop	{r2, r3}
     e60:	4690      	mov	r8, r2
     e62:	4699      	mov	r9, r3
     e64:	bdf0      	pop	{r4, r5, r6, r7, pc}
     e66:	00aa      	lsls	r2, r5, #2
     e68:	18a0      	adds	r0, r4, r2
     e6a:	2388      	movs	r3, #136	; 0x88
     e6c:	4649      	mov	r1, r9
     e6e:	22c4      	movs	r2, #196	; 0xc4
     e70:	50c1      	str	r1, [r0, r3]
     e72:	0050      	lsls	r0, r2, #1
     e74:	1822      	adds	r2, r4, r0
     e76:	6810      	ldr	r0, [r2, #0]
     e78:	2101      	movs	r1, #1
     e7a:	40a9      	lsls	r1, r5
     e7c:	4308      	orrs	r0, r1
     e7e:	6010      	str	r0, [r2, #0]
     e80:	1c2a      	adds	r2, r5, #0
     e82:	3220      	adds	r2, #32
     e84:	0090      	lsls	r0, r2, #2
     e86:	1822      	adds	r2, r4, r0
     e88:	4640      	mov	r0, r8
     e8a:	50d0      	str	r0, [r2, r3]
     e8c:	2e02      	cmp	r6, #2
     e8e:	d1df      	bne.n	e50 <__register_exitproc+0x64>
     e90:	26c6      	movs	r6, #198	; 0xc6
     e92:	0073      	lsls	r3, r6, #1
     e94:	18e2      	adds	r2, r4, r3
     e96:	6810      	ldr	r0, [r2, #0]
     e98:	4301      	orrs	r1, r0
     e9a:	6011      	str	r1, [r2, #0]
     e9c:	e7d8      	b.n	e50 <__register_exitproc+0x64>
     e9e:	1c04      	adds	r4, r0, #0
     ea0:	344d      	adds	r4, #77	; 0x4d
     ea2:	34ff      	adds	r4, #255	; 0xff
     ea4:	5044      	str	r4, [r0, r1]
     ea6:	e7b2      	b.n	e0e <__register_exitproc+0x22>
     ea8:	0000370c 	.word	0x0000370c
     eac:	00000f11 	.word	0x00000f11

00000eb0 <__libc_fini_array>:
     eb0:	b5f0      	push	{r4, r5, r6, r7, lr}
     eb2:	4b15      	ldr	r3, [pc, #84]	; (f08 <__libc_fini_array+0x58>)
     eb4:	4e15      	ldr	r6, [pc, #84]	; (f0c <__libc_fini_array+0x5c>)
     eb6:	4647      	mov	r7, r8
     eb8:	1af0      	subs	r0, r6, r3
     eba:	b480      	push	{r7}
     ebc:	1086      	asrs	r6, r0, #2
     ebe:	d01d      	beq.n	efc <__libc_fini_array+0x4c>
     ec0:	1e75      	subs	r5, r6, #1
     ec2:	00af      	lsls	r7, r5, #2
     ec4:	18ff      	adds	r7, r7, r3
     ec6:	2101      	movs	r1, #1
     ec8:	4029      	ands	r1, r5
     eca:	683a      	ldr	r2, [r7, #0]
     ecc:	4688      	mov	r8, r1
     ece:	1f3c      	subs	r4, r7, #4
     ed0:	4790      	blx	r2
     ed2:	2d00      	cmp	r5, #0
     ed4:	d012      	beq.n	efc <__libc_fini_array+0x4c>
     ed6:	4643      	mov	r3, r8
     ed8:	2b00      	cmp	r3, #0
     eda:	d006      	beq.n	eea <__libc_fini_array+0x3a>
     edc:	6824      	ldr	r4, [r4, #0]
     ede:	47a0      	blx	r4
     ee0:	1eb5      	subs	r5, r6, #2
     ee2:	1c3c      	adds	r4, r7, #0
     ee4:	3c08      	subs	r4, #8
     ee6:	2d00      	cmp	r5, #0
     ee8:	d008      	beq.n	efc <__libc_fini_array+0x4c>
     eea:	6820      	ldr	r0, [r4, #0]
     eec:	1f26      	subs	r6, r4, #4
     eee:	4780      	blx	r0
     ef0:	3d02      	subs	r5, #2
     ef2:	6837      	ldr	r7, [r6, #0]
     ef4:	47b8      	blx	r7
     ef6:	3c08      	subs	r4, #8
     ef8:	2d00      	cmp	r5, #0
     efa:	d1f6      	bne.n	eea <__libc_fini_array+0x3a>
     efc:	f002 fc54 	bl	37a8 <_fini>
     f00:	bc04      	pop	{r2}
     f02:	4690      	mov	r8, r2
     f04:	bdf0      	pop	{r4, r5, r6, r7, pc}
     f06:	46c0      	nop			; (mov r8, r8)
     f08:	000037b4 	.word	0x000037b4
     f0c:	000037b8 	.word	0x000037b8

00000f10 <malloc>:
     f10:	b508      	push	{r3, lr}
     f12:	4b03      	ldr	r3, [pc, #12]	; (f20 <malloc+0x10>)
     f14:	1c01      	adds	r1, r0, #0
     f16:	6818      	ldr	r0, [r3, #0]
     f18:	f000 f804 	bl	f24 <_malloc_r>
     f1c:	bd08      	pop	{r3, pc}
     f1e:	46c0      	nop			; (mov r8, r8)
     f20:	10000430 	.word	0x10000430

00000f24 <_malloc_r>:
     f24:	b5f0      	push	{r4, r5, r6, r7, lr}
     f26:	4656      	mov	r6, sl
     f28:	4644      	mov	r4, r8
     f2a:	465f      	mov	r7, fp
     f2c:	464d      	mov	r5, r9
     f2e:	b4f0      	push	{r4, r5, r6, r7}
     f30:	1c0c      	adds	r4, r1, #0
     f32:	340b      	adds	r4, #11
     f34:	b083      	sub	sp, #12
     f36:	1c06      	adds	r6, r0, #0
     f38:	2c16      	cmp	r4, #22
     f3a:	d92a      	bls.n	f92 <_malloc_r+0x6e>
     f3c:	2307      	movs	r3, #7
     f3e:	439c      	bics	r4, r3
     f40:	d42a      	bmi.n	f98 <_malloc_r+0x74>
     f42:	42a1      	cmp	r1, r4
     f44:	d828      	bhi.n	f98 <_malloc_r+0x74>
     f46:	1c30      	adds	r0, r6, #0
     f48:	f000 fa76 	bl	1438 <__malloc_lock>
     f4c:	48bc      	ldr	r0, [pc, #752]	; (1240 <__ram_size+0x240>)
     f4e:	4284      	cmp	r4, r0
     f50:	d826      	bhi.n	fa0 <_malloc_r+0x7c>
     f52:	08e0      	lsrs	r0, r4, #3
     f54:	4dbb      	ldr	r5, [pc, #748]	; (1244 <__ram_size+0x244>)
     f56:	00c3      	lsls	r3, r0, #3
     f58:	18e9      	adds	r1, r5, r3
     f5a:	68cf      	ldr	r7, [r1, #12]
     f5c:	428f      	cmp	r7, r1
     f5e:	d100      	bne.n	f62 <_malloc_r+0x3e>
     f60:	e1d6      	b.n	1310 <__ram_size+0x310>
     f62:	6879      	ldr	r1, [r7, #4]
     f64:	2403      	movs	r4, #3
     f66:	43a1      	bics	r1, r4
     f68:	187c      	adds	r4, r7, r1
     f6a:	6860      	ldr	r0, [r4, #4]
     f6c:	68fd      	ldr	r5, [r7, #12]
     f6e:	68bb      	ldr	r3, [r7, #8]
     f70:	2201      	movs	r2, #1
     f72:	4302      	orrs	r2, r0
     f74:	60dd      	str	r5, [r3, #12]
     f76:	1c30      	adds	r0, r6, #0
     f78:	60ab      	str	r3, [r5, #8]
     f7a:	6062      	str	r2, [r4, #4]
     f7c:	f000 fa5e 	bl	143c <__malloc_unlock>
     f80:	1c38      	adds	r0, r7, #0
     f82:	3008      	adds	r0, #8
     f84:	b003      	add	sp, #12
     f86:	bc3c      	pop	{r2, r3, r4, r5}
     f88:	4690      	mov	r8, r2
     f8a:	4699      	mov	r9, r3
     f8c:	46a2      	mov	sl, r4
     f8e:	46ab      	mov	fp, r5
     f90:	bdf0      	pop	{r4, r5, r6, r7, pc}
     f92:	2410      	movs	r4, #16
     f94:	42a1      	cmp	r1, r4
     f96:	d9d6      	bls.n	f46 <_malloc_r+0x22>
     f98:	270c      	movs	r7, #12
     f9a:	6037      	str	r7, [r6, #0]
     f9c:	2000      	movs	r0, #0
     f9e:	e7f1      	b.n	f84 <_malloc_r+0x60>
     fa0:	0a61      	lsrs	r1, r4, #9
     fa2:	d100      	bne.n	fa6 <_malloc_r+0x82>
     fa4:	e08b      	b.n	10be <__ram_size+0xbe>
     fa6:	2904      	cmp	r1, #4
     fa8:	d900      	bls.n	fac <_malloc_r+0x88>
     faa:	e13e      	b.n	122a <__ram_size+0x22a>
     fac:	09a7      	lsrs	r7, r4, #6
     fae:	3738      	adds	r7, #56	; 0x38
     fb0:	46b8      	mov	r8, r7
     fb2:	007b      	lsls	r3, r7, #1
     fb4:	4da3      	ldr	r5, [pc, #652]	; (1244 <__ram_size+0x244>)
     fb6:	0098      	lsls	r0, r3, #2
     fb8:	1829      	adds	r1, r5, r0
     fba:	68cf      	ldr	r7, [r1, #12]
     fbc:	42b9      	cmp	r1, r7
     fbe:	d013      	beq.n	fe8 <_malloc_r+0xc4>
     fc0:	687a      	ldr	r2, [r7, #4]
     fc2:	2303      	movs	r3, #3
     fc4:	439a      	bics	r2, r3
     fc6:	1b13      	subs	r3, r2, r4
     fc8:	2b0f      	cmp	r3, #15
     fca:	dc7c      	bgt.n	10c6 <__ram_size+0xc6>
     fcc:	2003      	movs	r0, #3
     fce:	2b00      	cmp	r3, #0
     fd0:	db07      	blt.n	fe2 <_malloc_r+0xbe>
     fd2:	e07c      	b.n	10ce <__ram_size+0xce>
     fd4:	687a      	ldr	r2, [r7, #4]
     fd6:	4382      	bics	r2, r0
     fd8:	1b13      	subs	r3, r2, r4
     fda:	2b0f      	cmp	r3, #15
     fdc:	dc73      	bgt.n	10c6 <__ram_size+0xc6>
     fde:	2b00      	cmp	r3, #0
     fe0:	da75      	bge.n	10ce <__ram_size+0xce>
     fe2:	68ff      	ldr	r7, [r7, #12]
     fe4:	42b9      	cmp	r1, r7
     fe6:	d1f5      	bne.n	fd4 <_malloc_r+0xb0>
     fe8:	2201      	movs	r2, #1
     fea:	4490      	add	r8, r2
     fec:	1c2b      	adds	r3, r5, #0
     fee:	692f      	ldr	r7, [r5, #16]
     ff0:	3308      	adds	r3, #8
     ff2:	429f      	cmp	r7, r3
     ff4:	d100      	bne.n	ff8 <_malloc_r+0xd4>
     ff6:	e168      	b.n	12ca <__ram_size+0x2ca>
     ff8:	6878      	ldr	r0, [r7, #4]
     ffa:	2103      	movs	r1, #3
     ffc:	4388      	bics	r0, r1
     ffe:	1c02      	adds	r2, r0, #0
    1000:	1b01      	subs	r1, r0, r4
    1002:	290f      	cmp	r1, #15
    1004:	dd00      	ble.n	1008 <__ram_size+0x8>
    1006:	e14f      	b.n	12a8 <__ram_size+0x2a8>
    1008:	616b      	str	r3, [r5, #20]
    100a:	612b      	str	r3, [r5, #16]
    100c:	2900      	cmp	r1, #0
    100e:	da6d      	bge.n	10ec <__ram_size+0xec>
    1010:	4b8d      	ldr	r3, [pc, #564]	; (1248 <__ram_size+0x248>)
    1012:	4298      	cmp	r0, r3
    1014:	d900      	bls.n	1018 <__ram_size+0x18>
    1016:	e127      	b.n	1268 <__ram_size+0x268>
    1018:	08c1      	lsrs	r1, r0, #3
    101a:	108b      	asrs	r3, r1, #2
    101c:	686a      	ldr	r2, [r5, #4]
    101e:	2001      	movs	r0, #1
    1020:	00c9      	lsls	r1, r1, #3
    1022:	4098      	lsls	r0, r3
    1024:	186b      	adds	r3, r5, r1
    1026:	4310      	orrs	r0, r2
    1028:	689a      	ldr	r2, [r3, #8]
    102a:	60fb      	str	r3, [r7, #12]
    102c:	60ba      	str	r2, [r7, #8]
    102e:	6068      	str	r0, [r5, #4]
    1030:	609f      	str	r7, [r3, #8]
    1032:	60d7      	str	r7, [r2, #12]
    1034:	4647      	mov	r7, r8
    1036:	10bb      	asrs	r3, r7, #2
    1038:	2101      	movs	r1, #1
    103a:	4099      	lsls	r1, r3
    103c:	4281      	cmp	r1, r0
    103e:	d85a      	bhi.n	10f6 <__ram_size+0xf6>
    1040:	4201      	tst	r1, r0
    1042:	d10d      	bne.n	1060 <__ram_size+0x60>
    1044:	4642      	mov	r2, r8
    1046:	2703      	movs	r7, #3
    1048:	43ba      	bics	r2, r7
    104a:	1c13      	adds	r3, r2, #0
    104c:	3304      	adds	r3, #4
    104e:	0049      	lsls	r1, r1, #1
    1050:	4698      	mov	r8, r3
    1052:	4201      	tst	r1, r0
    1054:	d104      	bne.n	1060 <__ram_size+0x60>
    1056:	2704      	movs	r7, #4
    1058:	0049      	lsls	r1, r1, #1
    105a:	44b8      	add	r8, r7
    105c:	4201      	tst	r1, r0
    105e:	d0fa      	beq.n	1056 <__ram_size+0x56>
    1060:	2003      	movs	r0, #3
    1062:	4684      	mov	ip, r0
    1064:	4642      	mov	r2, r8
    1066:	00d3      	lsls	r3, r2, #3
    1068:	195f      	adds	r7, r3, r5
    106a:	46bb      	mov	fp, r7
    106c:	1c38      	adds	r0, r7, #0
    106e:	46c1      	mov	r9, r8
    1070:	68c7      	ldr	r7, [r0, #12]
    1072:	42b8      	cmp	r0, r7
    1074:	d107      	bne.n	1086 <__ram_size+0x86>
    1076:	e12a      	b.n	12ce <__ram_size+0x2ce>
    1078:	2b00      	cmp	r3, #0
    107a:	db00      	blt.n	107e <__ram_size+0x7e>
    107c:	e151      	b.n	1322 <__ram_size+0x322>
    107e:	68ff      	ldr	r7, [r7, #12]
    1080:	42b8      	cmp	r0, r7
    1082:	d100      	bne.n	1086 <__ram_size+0x86>
    1084:	e123      	b.n	12ce <__ram_size+0x2ce>
    1086:	687a      	ldr	r2, [r7, #4]
    1088:	4663      	mov	r3, ip
    108a:	439a      	bics	r2, r3
    108c:	1b13      	subs	r3, r2, r4
    108e:	2b0f      	cmp	r3, #15
    1090:	ddf2      	ble.n	1078 <__ram_size+0x78>
    1092:	2001      	movs	r0, #1
    1094:	193a      	adds	r2, r7, r4
    1096:	4304      	orrs	r4, r0
    1098:	68b9      	ldr	r1, [r7, #8]
    109a:	607c      	str	r4, [r7, #4]
    109c:	68fc      	ldr	r4, [r7, #12]
    109e:	4318      	orrs	r0, r3
    10a0:	60cc      	str	r4, [r1, #12]
    10a2:	60a1      	str	r1, [r4, #8]
    10a4:	616a      	str	r2, [r5, #20]
    10a6:	612a      	str	r2, [r5, #16]
    10a8:	3508      	adds	r5, #8
    10aa:	6050      	str	r0, [r2, #4]
    10ac:	60d5      	str	r5, [r2, #12]
    10ae:	1c30      	adds	r0, r6, #0
    10b0:	6095      	str	r5, [r2, #8]
    10b2:	50d3      	str	r3, [r2, r3]
    10b4:	f000 f9c2 	bl	143c <__malloc_unlock>
    10b8:	1c38      	adds	r0, r7, #0
    10ba:	3008      	adds	r0, #8
    10bc:	e762      	b.n	f84 <_malloc_r+0x60>
    10be:	08e3      	lsrs	r3, r4, #3
    10c0:	4698      	mov	r8, r3
    10c2:	005b      	lsls	r3, r3, #1
    10c4:	e776      	b.n	fb4 <_malloc_r+0x90>
    10c6:	2701      	movs	r7, #1
    10c8:	4279      	negs	r1, r7
    10ca:	4488      	add	r8, r1
    10cc:	e78c      	b.n	fe8 <_malloc_r+0xc4>
    10ce:	68bd      	ldr	r5, [r7, #8]
    10d0:	68fc      	ldr	r4, [r7, #12]
    10d2:	2301      	movs	r3, #1
    10d4:	60ec      	str	r4, [r5, #12]
    10d6:	60a5      	str	r5, [r4, #8]
    10d8:	18bd      	adds	r5, r7, r2
    10da:	6868      	ldr	r0, [r5, #4]
    10dc:	4303      	orrs	r3, r0
    10de:	1c30      	adds	r0, r6, #0
    10e0:	606b      	str	r3, [r5, #4]
    10e2:	f000 f9ab 	bl	143c <__malloc_unlock>
    10e6:	1c38      	adds	r0, r7, #0
    10e8:	3008      	adds	r0, #8
    10ea:	e74b      	b.n	f84 <_malloc_r+0x60>
    10ec:	183d      	adds	r5, r7, r0
    10ee:	686a      	ldr	r2, [r5, #4]
    10f0:	2301      	movs	r3, #1
    10f2:	4313      	orrs	r3, r2
    10f4:	e7f3      	b.n	10de <__ram_size+0xde>
    10f6:	68af      	ldr	r7, [r5, #8]
    10f8:	2103      	movs	r1, #3
    10fa:	687b      	ldr	r3, [r7, #4]
    10fc:	438b      	bics	r3, r1
    10fe:	4699      	mov	r9, r3
    1100:	42a3      	cmp	r3, r4
    1102:	d303      	bcc.n	110c <__ram_size+0x10c>
    1104:	1b18      	subs	r0, r3, r4
    1106:	280f      	cmp	r0, #15
    1108:	dd00      	ble.n	110c <__ram_size+0x10c>
    110a:	e080      	b.n	120e <__ram_size+0x20e>
    110c:	4648      	mov	r0, r9
    110e:	183a      	adds	r2, r7, r0
    1110:	494e      	ldr	r1, [pc, #312]	; (124c <__ram_size+0x24c>)
    1112:	484f      	ldr	r0, [pc, #316]	; (1250 <__ram_size+0x250>)
    1114:	680b      	ldr	r3, [r1, #0]
    1116:	6801      	ldr	r1, [r0, #0]
    1118:	9201      	str	r2, [sp, #4]
    111a:	18e3      	adds	r3, r4, r3
    111c:	4683      	mov	fp, r0
    111e:	1c48      	adds	r0, r1, #1
    1120:	d100      	bne.n	1124 <__ram_size+0x124>
    1122:	e141      	b.n	13a8 <__ram_size+0x3a8>
    1124:	484b      	ldr	r0, [pc, #300]	; (1254 <__ram_size+0x254>)
    1126:	181b      	adds	r3, r3, r0
    1128:	0b1a      	lsrs	r2, r3, #12
    112a:	0311      	lsls	r1, r2, #12
    112c:	9100      	str	r1, [sp, #0]
    112e:	1c30      	adds	r0, r6, #0
    1130:	9900      	ldr	r1, [sp, #0]
    1132:	f000 f9bd 	bl	14b0 <_sbrk_r>
    1136:	4680      	mov	r8, r0
    1138:	1c42      	adds	r2, r0, #1
    113a:	d05d      	beq.n	11f8 <__ram_size+0x1f8>
    113c:	9b01      	ldr	r3, [sp, #4]
    113e:	4543      	cmp	r3, r8
    1140:	d900      	bls.n	1144 <__ram_size+0x144>
    1142:	e106      	b.n	1352 <__ram_size+0x352>
    1144:	4844      	ldr	r0, [pc, #272]	; (1258 <__ram_size+0x258>)
    1146:	9900      	ldr	r1, [sp, #0]
    1148:	6803      	ldr	r3, [r0, #0]
    114a:	4682      	mov	sl, r0
    114c:	18cb      	adds	r3, r1, r3
    114e:	6003      	str	r3, [r0, #0]
    1150:	9801      	ldr	r0, [sp, #4]
    1152:	4540      	cmp	r0, r8
    1154:	d100      	bne.n	1158 <__ram_size+0x158>
    1156:	e135      	b.n	13c4 <__ram_size+0x3c4>
    1158:	465a      	mov	r2, fp
    115a:	6810      	ldr	r0, [r2, #0]
    115c:	1c42      	adds	r2, r0, #1
    115e:	d100      	bne.n	1162 <__ram_size+0x162>
    1160:	e147      	b.n	13f2 <__ram_size+0x3f2>
    1162:	9a01      	ldr	r2, [sp, #4]
    1164:	4641      	mov	r1, r8
    1166:	1a88      	subs	r0, r1, r2
    1168:	181b      	adds	r3, r3, r0
    116a:	4651      	mov	r1, sl
    116c:	600b      	str	r3, [r1, #0]
    116e:	2307      	movs	r3, #7
    1170:	4641      	mov	r1, r8
    1172:	400b      	ands	r3, r1
    1174:	d100      	bne.n	1178 <__ram_size+0x178>
    1176:	e0fe      	b.n	1376 <__ram_size+0x376>
    1178:	1ac8      	subs	r0, r1, r3
    117a:	4938      	ldr	r1, [pc, #224]	; (125c <__ram_size+0x25c>)
    117c:	3008      	adds	r0, #8
    117e:	4680      	mov	r8, r0
    1180:	1acb      	subs	r3, r1, r3
    1182:	9a00      	ldr	r2, [sp, #0]
    1184:	1c10      	adds	r0, r2, #0
    1186:	4440      	add	r0, r8
    1188:	0501      	lsls	r1, r0, #20
    118a:	0d0a      	lsrs	r2, r1, #20
    118c:	1a9b      	subs	r3, r3, r2
    118e:	1c19      	adds	r1, r3, #0
    1190:	1c30      	adds	r0, r6, #0
    1192:	469b      	mov	fp, r3
    1194:	f000 f98c 	bl	14b0 <_sbrk_r>
    1198:	1c41      	adds	r1, r0, #1
    119a:	d100      	bne.n	119e <__ram_size+0x19e>
    119c:	e11d      	b.n	13da <__ram_size+0x3da>
    119e:	4641      	mov	r1, r8
    11a0:	1a40      	subs	r0, r0, r1
    11a2:	4458      	add	r0, fp
    11a4:	2201      	movs	r2, #1
    11a6:	4310      	orrs	r0, r2
    11a8:	4652      	mov	r2, sl
    11aa:	6811      	ldr	r1, [r2, #0]
    11ac:	1c0b      	adds	r3, r1, #0
    11ae:	445b      	add	r3, fp
    11b0:	4641      	mov	r1, r8
    11b2:	6013      	str	r3, [r2, #0]
    11b4:	60a9      	str	r1, [r5, #8]
    11b6:	6048      	str	r0, [r1, #4]
    11b8:	42af      	cmp	r7, r5
    11ba:	d013      	beq.n	11e4 <__ram_size+0x1e4>
    11bc:	4648      	mov	r0, r9
    11be:	280f      	cmp	r0, #15
    11c0:	d800      	bhi.n	11c4 <__ram_size+0x1c4>
    11c2:	e0e4      	b.n	138e <__ram_size+0x38e>
    11c4:	464a      	mov	r2, r9
    11c6:	6878      	ldr	r0, [r7, #4]
    11c8:	2107      	movs	r1, #7
    11ca:	3a0c      	subs	r2, #12
    11cc:	438a      	bics	r2, r1
    11ce:	2101      	movs	r1, #1
    11d0:	4001      	ands	r1, r0
    11d2:	4311      	orrs	r1, r2
    11d4:	6079      	str	r1, [r7, #4]
    11d6:	2005      	movs	r0, #5
    11d8:	18b9      	adds	r1, r7, r2
    11da:	6048      	str	r0, [r1, #4]
    11dc:	6088      	str	r0, [r1, #8]
    11de:	2a0f      	cmp	r2, #15
    11e0:	d900      	bls.n	11e4 <__ram_size+0x1e4>
    11e2:	e0fe      	b.n	13e2 <__ram_size+0x3e2>
    11e4:	4f1e      	ldr	r7, [pc, #120]	; (1260 <__ram_size+0x260>)
    11e6:	6839      	ldr	r1, [r7, #0]
    11e8:	428b      	cmp	r3, r1
    11ea:	d900      	bls.n	11ee <__ram_size+0x1ee>
    11ec:	603b      	str	r3, [r7, #0]
    11ee:	481d      	ldr	r0, [pc, #116]	; (1264 <__ram_size+0x264>)
    11f0:	6802      	ldr	r2, [r0, #0]
    11f2:	4293      	cmp	r3, r2
    11f4:	d900      	bls.n	11f8 <__ram_size+0x1f8>
    11f6:	6003      	str	r3, [r0, #0]
    11f8:	68af      	ldr	r7, [r5, #8]
    11fa:	2303      	movs	r3, #3
    11fc:	6879      	ldr	r1, [r7, #4]
    11fe:	4399      	bics	r1, r3
    1200:	1b08      	subs	r0, r1, r4
    1202:	42a1      	cmp	r1, r4
    1204:	d200      	bcs.n	1208 <__ram_size+0x208>
    1206:	e0a8      	b.n	135a <__ram_size+0x35a>
    1208:	280f      	cmp	r0, #15
    120a:	dc00      	bgt.n	120e <__ram_size+0x20e>
    120c:	e0a5      	b.n	135a <__ram_size+0x35a>
    120e:	2201      	movs	r2, #1
    1210:	1c23      	adds	r3, r4, #0
    1212:	4310      	orrs	r0, r2
    1214:	4313      	orrs	r3, r2
    1216:	193c      	adds	r4, r7, r4
    1218:	607b      	str	r3, [r7, #4]
    121a:	60ac      	str	r4, [r5, #8]
    121c:	6060      	str	r0, [r4, #4]
    121e:	1c30      	adds	r0, r6, #0
    1220:	f000 f90c 	bl	143c <__malloc_unlock>
    1224:	1c38      	adds	r0, r7, #0
    1226:	3008      	adds	r0, #8
    1228:	e6ac      	b.n	f84 <_malloc_r+0x60>
    122a:	2914      	cmp	r1, #20
    122c:	d800      	bhi.n	1230 <__ram_size+0x230>
    122e:	e087      	b.n	1340 <__ram_size+0x340>
    1230:	2954      	cmp	r1, #84	; 0x54
    1232:	d900      	bls.n	1236 <__ram_size+0x236>
    1234:	e096      	b.n	1364 <__ram_size+0x364>
    1236:	0b25      	lsrs	r5, r4, #12
    1238:	356e      	adds	r5, #110	; 0x6e
    123a:	46a8      	mov	r8, r5
    123c:	006b      	lsls	r3, r5, #1
    123e:	e6b9      	b.n	fb4 <_malloc_r+0x90>
    1240:	000001f7 	.word	0x000001f7
    1244:	10000434 	.word	0x10000434
    1248:	000001ff 	.word	0x000001ff
    124c:	10000b08 	.word	0x10000b08
    1250:	10000840 	.word	0x10000840
    1254:	0000100f 	.word	0x0000100f
    1258:	10000b0c 	.word	0x10000b0c
    125c:	00001008 	.word	0x00001008
    1260:	10000b04 	.word	0x10000b04
    1264:	10000b00 	.word	0x10000b00
    1268:	0a40      	lsrs	r0, r0, #9
    126a:	2804      	cmp	r0, #4
    126c:	d96c      	bls.n	1348 <__ram_size+0x348>
    126e:	2814      	cmp	r0, #20
    1270:	d900      	bls.n	1274 <__ram_size+0x274>
    1272:	e09c      	b.n	13ae <__ram_size+0x3ae>
    1274:	305b      	adds	r0, #91	; 0x5b
    1276:	4682      	mov	sl, r0
    1278:	0040      	lsls	r0, r0, #1
    127a:	0080      	lsls	r0, r0, #2
    127c:	1943      	adds	r3, r0, r5
    127e:	4699      	mov	r9, r3
    1280:	689b      	ldr	r3, [r3, #8]
    1282:	2103      	movs	r1, #3
    1284:	468c      	mov	ip, r1
    1286:	454b      	cmp	r3, r9
    1288:	d078      	beq.n	137c <__ram_size+0x37c>
    128a:	6859      	ldr	r1, [r3, #4]
    128c:	4660      	mov	r0, ip
    128e:	4381      	bics	r1, r0
    1290:	428a      	cmp	r2, r1
    1292:	d202      	bcs.n	129a <__ram_size+0x29a>
    1294:	689b      	ldr	r3, [r3, #8]
    1296:	4599      	cmp	r9, r3
    1298:	d1f7      	bne.n	128a <__ram_size+0x28a>
    129a:	68d9      	ldr	r1, [r3, #12]
    129c:	6868      	ldr	r0, [r5, #4]
    129e:	60f9      	str	r1, [r7, #12]
    12a0:	60bb      	str	r3, [r7, #8]
    12a2:	60df      	str	r7, [r3, #12]
    12a4:	608f      	str	r7, [r1, #8]
    12a6:	e6c5      	b.n	1034 <__ram_size+0x34>
    12a8:	2001      	movs	r0, #1
    12aa:	193a      	adds	r2, r7, r4
    12ac:	4304      	orrs	r4, r0
    12ae:	4308      	orrs	r0, r1
    12b0:	607c      	str	r4, [r7, #4]
    12b2:	616a      	str	r2, [r5, #20]
    12b4:	612a      	str	r2, [r5, #16]
    12b6:	6050      	str	r0, [r2, #4]
    12b8:	60d3      	str	r3, [r2, #12]
    12ba:	1c30      	adds	r0, r6, #0
    12bc:	6093      	str	r3, [r2, #8]
    12be:	5051      	str	r1, [r2, r1]
    12c0:	f000 f8bc 	bl	143c <__malloc_unlock>
    12c4:	1c38      	adds	r0, r7, #0
    12c6:	3008      	adds	r0, #8
    12c8:	e65c      	b.n	f84 <_malloc_r+0x60>
    12ca:	6868      	ldr	r0, [r5, #4]
    12cc:	e6b2      	b.n	1034 <__ram_size+0x34>
    12ce:	2201      	movs	r2, #1
    12d0:	4491      	add	r9, r2
    12d2:	4663      	mov	r3, ip
    12d4:	464f      	mov	r7, r9
    12d6:	3008      	adds	r0, #8
    12d8:	423b      	tst	r3, r7
    12da:	d000      	beq.n	12de <__ram_size+0x2de>
    12dc:	e6c8      	b.n	1070 <__ram_size+0x70>
    12de:	465a      	mov	r2, fp
    12e0:	4643      	mov	r3, r8
    12e2:	4660      	mov	r0, ip
    12e4:	4218      	tst	r0, r3
    12e6:	d100      	bne.n	12ea <__ram_size+0x2ea>
    12e8:	e098      	b.n	141c <__ram_size+0x41c>
    12ea:	1c17      	adds	r7, r2, #0
    12ec:	6812      	ldr	r2, [r2, #0]
    12ee:	3f08      	subs	r7, #8
    12f0:	3b01      	subs	r3, #1
    12f2:	42ba      	cmp	r2, r7
    12f4:	d0f5      	beq.n	12e2 <__ram_size+0x2e2>
    12f6:	686f      	ldr	r7, [r5, #4]
    12f8:	0049      	lsls	r1, r1, #1
    12fa:	42b9      	cmp	r1, r7
    12fc:	d900      	bls.n	1300 <__ram_size+0x300>
    12fe:	e6fa      	b.n	10f6 <__ram_size+0xf6>
    1300:	2900      	cmp	r1, #0
    1302:	d100      	bne.n	1306 <__ram_size+0x306>
    1304:	e6f7      	b.n	10f6 <__ram_size+0xf6>
    1306:	4239      	tst	r1, r7
    1308:	d100      	bne.n	130c <__ram_size+0x30c>
    130a:	e08b      	b.n	1424 <__ram_size+0x424>
    130c:	46c8      	mov	r8, r9
    130e:	e6a9      	b.n	1064 <__ram_size+0x64>
    1310:	1c3a      	adds	r2, r7, #0
    1312:	697f      	ldr	r7, [r7, #20]
    1314:	3002      	adds	r0, #2
    1316:	3208      	adds	r2, #8
    1318:	4680      	mov	r8, r0
    131a:	42ba      	cmp	r2, r7
    131c:	d100      	bne.n	1320 <__ram_size+0x320>
    131e:	e665      	b.n	fec <_malloc_r+0xc8>
    1320:	e61f      	b.n	f62 <_malloc_r+0x3e>
    1322:	18ba      	adds	r2, r7, r2
    1324:	6854      	ldr	r4, [r2, #4]
    1326:	68b8      	ldr	r0, [r7, #8]
    1328:	68fd      	ldr	r5, [r7, #12]
    132a:	2301      	movs	r3, #1
    132c:	4323      	orrs	r3, r4
    132e:	60c5      	str	r5, [r0, #12]
    1330:	60a8      	str	r0, [r5, #8]
    1332:	6053      	str	r3, [r2, #4]
    1334:	1c30      	adds	r0, r6, #0
    1336:	f000 f881 	bl	143c <__malloc_unlock>
    133a:	1c38      	adds	r0, r7, #0
    133c:	3008      	adds	r0, #8
    133e:	e621      	b.n	f84 <_malloc_r+0x60>
    1340:	315b      	adds	r1, #91	; 0x5b
    1342:	4688      	mov	r8, r1
    1344:	004b      	lsls	r3, r1, #1
    1346:	e635      	b.n	fb4 <_malloc_r+0x90>
    1348:	0991      	lsrs	r1, r2, #6
    134a:	3138      	adds	r1, #56	; 0x38
    134c:	468a      	mov	sl, r1
    134e:	0048      	lsls	r0, r1, #1
    1350:	e793      	b.n	127a <__ram_size+0x27a>
    1352:	42af      	cmp	r7, r5
    1354:	d000      	beq.n	1358 <__ram_size+0x358>
    1356:	e74f      	b.n	11f8 <__ram_size+0x1f8>
    1358:	e6f4      	b.n	1144 <__ram_size+0x144>
    135a:	1c30      	adds	r0, r6, #0
    135c:	f000 f86e 	bl	143c <__malloc_unlock>
    1360:	2000      	movs	r0, #0
    1362:	e60f      	b.n	f84 <_malloc_r+0x60>
    1364:	22aa      	movs	r2, #170	; 0xaa
    1366:	0055      	lsls	r5, r2, #1
    1368:	42a9      	cmp	r1, r5
    136a:	d815      	bhi.n	1398 <__ram_size+0x398>
    136c:	0be2      	lsrs	r2, r4, #15
    136e:	3277      	adds	r2, #119	; 0x77
    1370:	4690      	mov	r8, r2
    1372:	0053      	lsls	r3, r2, #1
    1374:	e61e      	b.n	fb4 <_malloc_r+0x90>
    1376:	2280      	movs	r2, #128	; 0x80
    1378:	0153      	lsls	r3, r2, #5
    137a:	e702      	b.n	1182 <__ram_size+0x182>
    137c:	4652      	mov	r2, sl
    137e:	1091      	asrs	r1, r2, #2
    1380:	2001      	movs	r0, #1
    1382:	686a      	ldr	r2, [r5, #4]
    1384:	4088      	lsls	r0, r1
    1386:	4310      	orrs	r0, r2
    1388:	6068      	str	r0, [r5, #4]
    138a:	1c19      	adds	r1, r3, #0
    138c:	e787      	b.n	129e <__ram_size+0x29e>
    138e:	2201      	movs	r2, #1
    1390:	604a      	str	r2, [r1, #4]
    1392:	4647      	mov	r7, r8
    1394:	2100      	movs	r1, #0
    1396:	e733      	b.n	1200 <__ram_size+0x200>
    1398:	4f26      	ldr	r7, [pc, #152]	; (1434 <__ram_size+0x434>)
    139a:	42b9      	cmp	r1, r7
    139c:	d80e      	bhi.n	13bc <__ram_size+0x3bc>
    139e:	0ca1      	lsrs	r1, r4, #18
    13a0:	317c      	adds	r1, #124	; 0x7c
    13a2:	4688      	mov	r8, r1
    13a4:	004b      	lsls	r3, r1, #1
    13a6:	e605      	b.n	fb4 <_malloc_r+0x90>
    13a8:	3310      	adds	r3, #16
    13aa:	9300      	str	r3, [sp, #0]
    13ac:	e6bf      	b.n	112e <__ram_size+0x12e>
    13ae:	2854      	cmp	r0, #84	; 0x54
    13b0:	d823      	bhi.n	13fa <__ram_size+0x3fa>
    13b2:	0b13      	lsrs	r3, r2, #12
    13b4:	336e      	adds	r3, #110	; 0x6e
    13b6:	469a      	mov	sl, r3
    13b8:	0058      	lsls	r0, r3, #1
    13ba:	e75e      	b.n	127a <__ram_size+0x27a>
    13bc:	207e      	movs	r0, #126	; 0x7e
    13be:	23fc      	movs	r3, #252	; 0xfc
    13c0:	4680      	mov	r8, r0
    13c2:	e5f7      	b.n	fb4 <_malloc_r+0x90>
    13c4:	0501      	lsls	r1, r0, #20
    13c6:	d000      	beq.n	13ca <__ram_size+0x3ca>
    13c8:	e6c6      	b.n	1158 <__ram_size+0x158>
    13ca:	9900      	ldr	r1, [sp, #0]
    13cc:	68af      	ldr	r7, [r5, #8]
    13ce:	1c08      	adds	r0, r1, #0
    13d0:	4448      	add	r0, r9
    13d2:	2201      	movs	r2, #1
    13d4:	4302      	orrs	r2, r0
    13d6:	607a      	str	r2, [r7, #4]
    13d8:	e704      	b.n	11e4 <__ram_size+0x1e4>
    13da:	2300      	movs	r3, #0
    13dc:	2001      	movs	r0, #1
    13de:	469b      	mov	fp, r3
    13e0:	e6e2      	b.n	11a8 <__ram_size+0x1a8>
    13e2:	1c39      	adds	r1, r7, #0
    13e4:	3108      	adds	r1, #8
    13e6:	1c30      	adds	r0, r6, #0
    13e8:	4657      	mov	r7, sl
    13ea:	f000 f8df 	bl	15ac <_free_r>
    13ee:	683b      	ldr	r3, [r7, #0]
    13f0:	e6f8      	b.n	11e4 <__ram_size+0x1e4>
    13f2:	4642      	mov	r2, r8
    13f4:	4658      	mov	r0, fp
    13f6:	6002      	str	r2, [r0, #0]
    13f8:	e6b9      	b.n	116e <__ram_size+0x16e>
    13fa:	21aa      	movs	r1, #170	; 0xaa
    13fc:	004b      	lsls	r3, r1, #1
    13fe:	4298      	cmp	r0, r3
    1400:	d804      	bhi.n	140c <__ram_size+0x40c>
    1402:	0bd0      	lsrs	r0, r2, #15
    1404:	3077      	adds	r0, #119	; 0x77
    1406:	4682      	mov	sl, r0
    1408:	0040      	lsls	r0, r0, #1
    140a:	e736      	b.n	127a <__ram_size+0x27a>
    140c:	4909      	ldr	r1, [pc, #36]	; (1434 <__ram_size+0x434>)
    140e:	4288      	cmp	r0, r1
    1410:	d80c      	bhi.n	142c <__ram_size+0x42c>
    1412:	0c91      	lsrs	r1, r2, #18
    1414:	317c      	adds	r1, #124	; 0x7c
    1416:	468a      	mov	sl, r1
    1418:	0048      	lsls	r0, r1, #1
    141a:	e72e      	b.n	127a <__ram_size+0x27a>
    141c:	686f      	ldr	r7, [r5, #4]
    141e:	438f      	bics	r7, r1
    1420:	606f      	str	r7, [r5, #4]
    1422:	e769      	b.n	12f8 <__ram_size+0x2f8>
    1424:	2004      	movs	r0, #4
    1426:	4481      	add	r9, r0
    1428:	0049      	lsls	r1, r1, #1
    142a:	e76c      	b.n	1306 <__ram_size+0x306>
    142c:	237e      	movs	r3, #126	; 0x7e
    142e:	20fc      	movs	r0, #252	; 0xfc
    1430:	469a      	mov	sl, r3
    1432:	e722      	b.n	127a <__ram_size+0x27a>
    1434:	00000554 	.word	0x00000554

00001438 <__malloc_lock>:
    1438:	4770      	bx	lr
    143a:	46c0      	nop			; (mov r8, r8)

0000143c <__malloc_unlock>:
    143c:	4770      	bx	lr
    143e:	46c0      	nop			; (mov r8, r8)

00001440 <__fpclassifyd>:
    1440:	1c0b      	adds	r3, r1, #0
    1442:	1c01      	adds	r1, r0, #0
    1444:	b530      	push	{r4, r5, lr}
    1446:	4319      	orrs	r1, r3
    1448:	2202      	movs	r2, #2
    144a:	2900      	cmp	r1, #0
    144c:	d101      	bne.n	1452 <__fpclassifyd+0x12>
    144e:	1c10      	adds	r0, r2, #0
    1450:	bd30      	pop	{r4, r5, pc}
    1452:	2480      	movs	r4, #128	; 0x80
    1454:	0625      	lsls	r5, r4, #24
    1456:	42ab      	cmp	r3, r5
    1458:	d01e      	beq.n	1498 <__fpclassifyd+0x58>
    145a:	4a11      	ldr	r2, [pc, #68]	; (14a0 <__fpclassifyd+0x60>)
    145c:	4911      	ldr	r1, [pc, #68]	; (14a4 <__fpclassifyd+0x64>)
    145e:	189c      	adds	r4, r3, r2
    1460:	2204      	movs	r2, #4
    1462:	428c      	cmp	r4, r1
    1464:	d9f3      	bls.n	144e <__fpclassifyd+0xe>
    1466:	4d10      	ldr	r5, [pc, #64]	; (14a8 <__fpclassifyd+0x68>)
    1468:	195c      	adds	r4, r3, r5
    146a:	428c      	cmp	r4, r1
    146c:	d9ef      	bls.n	144e <__fpclassifyd+0xe>
    146e:	490f      	ldr	r1, [pc, #60]	; (14ac <__fpclassifyd+0x6c>)
    1470:	2203      	movs	r2, #3
    1472:	428b      	cmp	r3, r1
    1474:	d9eb      	bls.n	144e <__fpclassifyd+0xe>
    1476:	2280      	movs	r2, #128	; 0x80
    1478:	0615      	lsls	r5, r2, #24
    147a:	490c      	ldr	r1, [pc, #48]	; (14ac <__fpclassifyd+0x6c>)
    147c:	195c      	adds	r4, r3, r5
    147e:	2203      	movs	r2, #3
    1480:	428c      	cmp	r4, r1
    1482:	d9e4      	bls.n	144e <__fpclassifyd+0xe>
    1484:	4a08      	ldr	r2, [pc, #32]	; (14a8 <__fpclassifyd+0x68>)
    1486:	4293      	cmp	r3, r2
    1488:	d003      	beq.n	1492 <__fpclassifyd+0x52>
    148a:	4d05      	ldr	r5, [pc, #20]	; (14a0 <__fpclassifyd+0x60>)
    148c:	2200      	movs	r2, #0
    148e:	42ab      	cmp	r3, r5
    1490:	d1dd      	bne.n	144e <__fpclassifyd+0xe>
    1492:	4242      	negs	r2, r0
    1494:	4142      	adcs	r2, r0
    1496:	e7da      	b.n	144e <__fpclassifyd+0xe>
    1498:	2800      	cmp	r0, #0
    149a:	d0d8      	beq.n	144e <__fpclassifyd+0xe>
    149c:	e7eb      	b.n	1476 <__fpclassifyd+0x36>
    149e:	46c0      	nop			; (mov r8, r8)
    14a0:	fff00000 	.word	0xfff00000
    14a4:	7fdfffff 	.word	0x7fdfffff
    14a8:	7ff00000 	.word	0x7ff00000
    14ac:	000fffff 	.word	0x000fffff

000014b0 <_sbrk_r>:
    14b0:	b538      	push	{r3, r4, r5, lr}
    14b2:	4c07      	ldr	r4, [pc, #28]	; (14d0 <_sbrk_r+0x20>)
    14b4:	2300      	movs	r3, #0
    14b6:	1c05      	adds	r5, r0, #0
    14b8:	1c08      	adds	r0, r1, #0
    14ba:	6023      	str	r3, [r4, #0]
    14bc:	f000 f93e 	bl	173c <_sbrk>
    14c0:	1c43      	adds	r3, r0, #1
    14c2:	d000      	beq.n	14c6 <_sbrk_r+0x16>
    14c4:	bd38      	pop	{r3, r4, r5, pc}
    14c6:	6821      	ldr	r1, [r4, #0]
    14c8:	2900      	cmp	r1, #0
    14ca:	d0fb      	beq.n	14c4 <_sbrk_r+0x14>
    14cc:	6029      	str	r1, [r5, #0]
    14ce:	e7f9      	b.n	14c4 <_sbrk_r+0x14>
    14d0:	10000b38 	.word	0x10000b38

000014d4 <strlen>:
    14d4:	2300      	movs	r3, #0
    14d6:	5cc2      	ldrb	r2, [r0, r3]
    14d8:	3301      	adds	r3, #1
    14da:	2a00      	cmp	r2, #0
    14dc:	d1fb      	bne.n	14d6 <strlen+0x2>
    14de:	1e58      	subs	r0, r3, #1
    14e0:	4770      	bx	lr
    14e2:	46c0      	nop			; (mov r8, r8)

000014e4 <register_fini>:
    14e4:	b508      	push	{r3, lr}
    14e6:	4b03      	ldr	r3, [pc, #12]	; (14f4 <register_fini+0x10>)
    14e8:	2b00      	cmp	r3, #0
    14ea:	d002      	beq.n	14f2 <register_fini+0xe>
    14ec:	4802      	ldr	r0, [pc, #8]	; (14f8 <register_fini+0x14>)
    14ee:	f000 f805 	bl	14fc <atexit>
    14f2:	bd08      	pop	{r3, pc}
    14f4:	00000000 	.word	0x00000000
    14f8:	00000eb1 	.word	0x00000eb1

000014fc <atexit>:
    14fc:	b508      	push	{r3, lr}
    14fe:	1c01      	adds	r1, r0, #0
    1500:	2200      	movs	r2, #0
    1502:	2000      	movs	r0, #0
    1504:	2300      	movs	r3, #0
    1506:	f7ff fc71 	bl	dec <__register_exitproc>
    150a:	bd08      	pop	{r3, pc}

0000150c <_malloc_trim_r>:
    150c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    150e:	1c0f      	adds	r7, r1, #0
    1510:	1c04      	adds	r4, r0, #0
    1512:	f7ff ff91 	bl	1438 <__malloc_lock>
    1516:	4d20      	ldr	r5, [pc, #128]	; (1598 <_malloc_trim_r+0x8c>)
    1518:	2003      	movs	r0, #3
    151a:	68ab      	ldr	r3, [r5, #8]
    151c:	4a1f      	ldr	r2, [pc, #124]	; (159c <_malloc_trim_r+0x90>)
    151e:	685e      	ldr	r6, [r3, #4]
    1520:	4386      	bics	r6, r0
    1522:	18b1      	adds	r1, r6, r2
    1524:	1bcf      	subs	r7, r1, r7
    1526:	0b3b      	lsrs	r3, r7, #12
    1528:	481d      	ldr	r0, [pc, #116]	; (15a0 <_malloc_trim_r+0x94>)
    152a:	3b01      	subs	r3, #1
    152c:	031f      	lsls	r7, r3, #12
    152e:	4287      	cmp	r7, r0
    1530:	dd07      	ble.n	1542 <_malloc_trim_r+0x36>
    1532:	2100      	movs	r1, #0
    1534:	1c20      	adds	r0, r4, #0
    1536:	f7ff ffbb 	bl	14b0 <_sbrk_r>
    153a:	68aa      	ldr	r2, [r5, #8]
    153c:	1991      	adds	r1, r2, r6
    153e:	4288      	cmp	r0, r1
    1540:	d004      	beq.n	154c <_malloc_trim_r+0x40>
    1542:	1c20      	adds	r0, r4, #0
    1544:	f7ff ff7a 	bl	143c <__malloc_unlock>
    1548:	2000      	movs	r0, #0
    154a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    154c:	4279      	negs	r1, r7
    154e:	1c20      	adds	r0, r4, #0
    1550:	f7ff ffae 	bl	14b0 <_sbrk_r>
    1554:	3001      	adds	r0, #1
    1556:	d00d      	beq.n	1574 <_malloc_trim_r+0x68>
    1558:	4812      	ldr	r0, [pc, #72]	; (15a4 <_malloc_trim_r+0x98>)
    155a:	68ad      	ldr	r5, [r5, #8]
    155c:	6802      	ldr	r2, [r0, #0]
    155e:	1bf6      	subs	r6, r6, r7
    1560:	2301      	movs	r3, #1
    1562:	431e      	orrs	r6, r3
    1564:	1bd7      	subs	r7, r2, r7
    1566:	6007      	str	r7, [r0, #0]
    1568:	606e      	str	r6, [r5, #4]
    156a:	1c20      	adds	r0, r4, #0
    156c:	f7ff ff66 	bl	143c <__malloc_unlock>
    1570:	2001      	movs	r0, #1
    1572:	e7ea      	b.n	154a <_malloc_trim_r+0x3e>
    1574:	1c20      	adds	r0, r4, #0
    1576:	2100      	movs	r1, #0
    1578:	f7ff ff9a 	bl	14b0 <_sbrk_r>
    157c:	68ad      	ldr	r5, [r5, #8]
    157e:	1b46      	subs	r6, r0, r5
    1580:	2e0f      	cmp	r6, #15
    1582:	ddde      	ble.n	1542 <_malloc_trim_r+0x36>
    1584:	4908      	ldr	r1, [pc, #32]	; (15a8 <_malloc_trim_r+0x9c>)
    1586:	4a07      	ldr	r2, [pc, #28]	; (15a4 <_malloc_trim_r+0x98>)
    1588:	680b      	ldr	r3, [r1, #0]
    158a:	2701      	movs	r7, #1
    158c:	1ac0      	subs	r0, r0, r3
    158e:	433e      	orrs	r6, r7
    1590:	6010      	str	r0, [r2, #0]
    1592:	606e      	str	r6, [r5, #4]
    1594:	e7d5      	b.n	1542 <_malloc_trim_r+0x36>
    1596:	46c0      	nop			; (mov r8, r8)
    1598:	10000434 	.word	0x10000434
    159c:	00000fef 	.word	0x00000fef
    15a0:	00000fff 	.word	0x00000fff
    15a4:	10000b0c 	.word	0x10000b0c
    15a8:	10000840 	.word	0x10000840

000015ac <_free_r>:
    15ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    15ae:	4647      	mov	r7, r8
    15b0:	b480      	push	{r7}
    15b2:	1c05      	adds	r5, r0, #0
    15b4:	1e0c      	subs	r4, r1, #0
    15b6:	d055      	beq.n	1664 <_free_r+0xb8>
    15b8:	f7ff ff3e 	bl	1438 <__malloc_lock>
    15bc:	1c21      	adds	r1, r4, #0
    15be:	3908      	subs	r1, #8
    15c0:	6848      	ldr	r0, [r1, #4]
    15c2:	2701      	movs	r7, #1
    15c4:	1c03      	adds	r3, r0, #0
    15c6:	43bb      	bics	r3, r7
    15c8:	18ca      	adds	r2, r1, r3
    15ca:	6854      	ldr	r4, [r2, #4]
    15cc:	2603      	movs	r6, #3
    15ce:	43b4      	bics	r4, r6
    15d0:	4680      	mov	r8, r0
    15d2:	1c20      	adds	r0, r4, #0
    15d4:	4c53      	ldr	r4, [pc, #332]	; (1724 <_free_r+0x178>)
    15d6:	68a6      	ldr	r6, [r4, #8]
    15d8:	4296      	cmp	r6, r2
    15da:	d060      	beq.n	169e <_free_r+0xf2>
    15dc:	2600      	movs	r6, #0
    15de:	46b4      	mov	ip, r6
    15e0:	4646      	mov	r6, r8
    15e2:	6050      	str	r0, [r2, #4]
    15e4:	4237      	tst	r7, r6
    15e6:	d10a      	bne.n	15fe <_free_r+0x52>
    15e8:	680f      	ldr	r7, [r1, #0]
    15ea:	1bc9      	subs	r1, r1, r7
    15ec:	19db      	adds	r3, r3, r7
    15ee:	688e      	ldr	r6, [r1, #8]
    15f0:	1c27      	adds	r7, r4, #0
    15f2:	3708      	adds	r7, #8
    15f4:	42be      	cmp	r6, r7
    15f6:	d06b      	beq.n	16d0 <_free_r+0x124>
    15f8:	68cf      	ldr	r7, [r1, #12]
    15fa:	60f7      	str	r7, [r6, #12]
    15fc:	60be      	str	r6, [r7, #8]
    15fe:	1817      	adds	r7, r2, r0
    1600:	687f      	ldr	r7, [r7, #4]
    1602:	2601      	movs	r6, #1
    1604:	4237      	tst	r7, r6
    1606:	d107      	bne.n	1618 <_free_r+0x6c>
    1608:	181b      	adds	r3, r3, r0
    160a:	4660      	mov	r0, ip
    160c:	2800      	cmp	r0, #0
    160e:	d02c      	beq.n	166a <_free_r+0xbe>
    1610:	6890      	ldr	r0, [r2, #8]
    1612:	68d2      	ldr	r2, [r2, #12]
    1614:	60c2      	str	r2, [r0, #12]
    1616:	6090      	str	r0, [r2, #8]
    1618:	2701      	movs	r7, #1
    161a:	1c1e      	adds	r6, r3, #0
    161c:	433e      	orrs	r6, r7
    161e:	4660      	mov	r0, ip
    1620:	604e      	str	r6, [r1, #4]
    1622:	50cb      	str	r3, [r1, r3]
    1624:	2800      	cmp	r0, #0
    1626:	d11a      	bne.n	165e <_free_r+0xb2>
    1628:	4a3f      	ldr	r2, [pc, #252]	; (1728 <_free_r+0x17c>)
    162a:	4293      	cmp	r3, r2
    162c:	d929      	bls.n	1682 <_free_r+0xd6>
    162e:	0a5f      	lsrs	r7, r3, #9
    1630:	2f04      	cmp	r7, #4
    1632:	d850      	bhi.n	16d6 <_free_r+0x12a>
    1634:	099f      	lsrs	r7, r3, #6
    1636:	3738      	adds	r7, #56	; 0x38
    1638:	007e      	lsls	r6, r7, #1
    163a:	00b0      	lsls	r0, r6, #2
    163c:	1820      	adds	r0, r4, r0
    163e:	6882      	ldr	r2, [r0, #8]
    1640:	2603      	movs	r6, #3
    1642:	4282      	cmp	r2, r0
    1644:	d04c      	beq.n	16e0 <_free_r+0x134>
    1646:	6854      	ldr	r4, [r2, #4]
    1648:	43b4      	bics	r4, r6
    164a:	42a3      	cmp	r3, r4
    164c:	d202      	bcs.n	1654 <_free_r+0xa8>
    164e:	6892      	ldr	r2, [r2, #8]
    1650:	4290      	cmp	r0, r2
    1652:	d1f8      	bne.n	1646 <_free_r+0x9a>
    1654:	68d7      	ldr	r7, [r2, #12]
    1656:	60cf      	str	r7, [r1, #12]
    1658:	608a      	str	r2, [r1, #8]
    165a:	60d1      	str	r1, [r2, #12]
    165c:	60b9      	str	r1, [r7, #8]
    165e:	1c28      	adds	r0, r5, #0
    1660:	f7ff feec 	bl	143c <__malloc_unlock>
    1664:	bc04      	pop	{r2}
    1666:	4690      	mov	r8, r2
    1668:	bdf0      	pop	{r4, r5, r6, r7, pc}
    166a:	6890      	ldr	r0, [r2, #8]
    166c:	4f2f      	ldr	r7, [pc, #188]	; (172c <_free_r+0x180>)
    166e:	42b8      	cmp	r0, r7
    1670:	d1cf      	bne.n	1612 <_free_r+0x66>
    1672:	431e      	orrs	r6, r3
    1674:	60c1      	str	r1, [r0, #12]
    1676:	6081      	str	r1, [r0, #8]
    1678:	60c8      	str	r0, [r1, #12]
    167a:	6088      	str	r0, [r1, #8]
    167c:	604e      	str	r6, [r1, #4]
    167e:	50cb      	str	r3, [r1, r3]
    1680:	e7ed      	b.n	165e <_free_r+0xb2>
    1682:	08da      	lsrs	r2, r3, #3
    1684:	1090      	asrs	r0, r2, #2
    1686:	6863      	ldr	r3, [r4, #4]
    1688:	4087      	lsls	r7, r0
    168a:	431f      	orrs	r7, r3
    168c:	00d6      	lsls	r6, r2, #3
    168e:	6067      	str	r7, [r4, #4]
    1690:	19a4      	adds	r4, r4, r6
    1692:	68a7      	ldr	r7, [r4, #8]
    1694:	60cc      	str	r4, [r1, #12]
    1696:	608f      	str	r7, [r1, #8]
    1698:	60f9      	str	r1, [r7, #12]
    169a:	60a1      	str	r1, [r4, #8]
    169c:	e7df      	b.n	165e <_free_r+0xb2>
    169e:	18c3      	adds	r3, r0, r3
    16a0:	4640      	mov	r0, r8
    16a2:	4207      	tst	r7, r0
    16a4:	d106      	bne.n	16b4 <_free_r+0x108>
    16a6:	680e      	ldr	r6, [r1, #0]
    16a8:	1b89      	subs	r1, r1, r6
    16aa:	68cf      	ldr	r7, [r1, #12]
    16ac:	688a      	ldr	r2, [r1, #8]
    16ae:	199b      	adds	r3, r3, r6
    16b0:	60d7      	str	r7, [r2, #12]
    16b2:	60ba      	str	r2, [r7, #8]
    16b4:	2001      	movs	r0, #1
    16b6:	4318      	orrs	r0, r3
    16b8:	60a1      	str	r1, [r4, #8]
    16ba:	6048      	str	r0, [r1, #4]
    16bc:	491c      	ldr	r1, [pc, #112]	; (1730 <_free_r+0x184>)
    16be:	680c      	ldr	r4, [r1, #0]
    16c0:	42a3      	cmp	r3, r4
    16c2:	d3cc      	bcc.n	165e <_free_r+0xb2>
    16c4:	4e1b      	ldr	r6, [pc, #108]	; (1734 <_free_r+0x188>)
    16c6:	1c28      	adds	r0, r5, #0
    16c8:	6831      	ldr	r1, [r6, #0]
    16ca:	f7ff ff1f 	bl	150c <_malloc_trim_r>
    16ce:	e7c6      	b.n	165e <_free_r+0xb2>
    16d0:	2601      	movs	r6, #1
    16d2:	46b4      	mov	ip, r6
    16d4:	e793      	b.n	15fe <_free_r+0x52>
    16d6:	2f14      	cmp	r7, #20
    16d8:	d80b      	bhi.n	16f2 <_free_r+0x146>
    16da:	375b      	adds	r7, #91	; 0x5b
    16dc:	007e      	lsls	r6, r7, #1
    16de:	e7ac      	b.n	163a <_free_r+0x8e>
    16e0:	10b8      	asrs	r0, r7, #2
    16e2:	2301      	movs	r3, #1
    16e4:	6867      	ldr	r7, [r4, #4]
    16e6:	4083      	lsls	r3, r0
    16e8:	1c1e      	adds	r6, r3, #0
    16ea:	433e      	orrs	r6, r7
    16ec:	6066      	str	r6, [r4, #4]
    16ee:	1c17      	adds	r7, r2, #0
    16f0:	e7b1      	b.n	1656 <_free_r+0xaa>
    16f2:	2f54      	cmp	r7, #84	; 0x54
    16f4:	d803      	bhi.n	16fe <_free_r+0x152>
    16f6:	0b1f      	lsrs	r7, r3, #12
    16f8:	376e      	adds	r7, #110	; 0x6e
    16fa:	007e      	lsls	r6, r7, #1
    16fc:	e79d      	b.n	163a <_free_r+0x8e>
    16fe:	26aa      	movs	r6, #170	; 0xaa
    1700:	0070      	lsls	r0, r6, #1
    1702:	4287      	cmp	r7, r0
    1704:	d803      	bhi.n	170e <_free_r+0x162>
    1706:	0bdf      	lsrs	r7, r3, #15
    1708:	3777      	adds	r7, #119	; 0x77
    170a:	007e      	lsls	r6, r7, #1
    170c:	e795      	b.n	163a <_free_r+0x8e>
    170e:	4a0a      	ldr	r2, [pc, #40]	; (1738 <_free_r+0x18c>)
    1710:	4297      	cmp	r7, r2
    1712:	d803      	bhi.n	171c <_free_r+0x170>
    1714:	0c9f      	lsrs	r7, r3, #18
    1716:	377c      	adds	r7, #124	; 0x7c
    1718:	007e      	lsls	r6, r7, #1
    171a:	e78e      	b.n	163a <_free_r+0x8e>
    171c:	26fc      	movs	r6, #252	; 0xfc
    171e:	277e      	movs	r7, #126	; 0x7e
    1720:	e78b      	b.n	163a <_free_r+0x8e>
    1722:	46c0      	nop			; (mov r8, r8)
    1724:	10000434 	.word	0x10000434
    1728:	000001ff 	.word	0x000001ff
    172c:	1000043c 	.word	0x1000043c
    1730:	1000083c 	.word	0x1000083c
    1734:	10000b08 	.word	0x10000b08
    1738:	00000554 	.word	0x00000554

0000173c <_sbrk>:
    173c:	4a09      	ldr	r2, [pc, #36]	; (1764 <_sbrk+0x28>)
    173e:	6813      	ldr	r3, [r2, #0]
    1740:	2b00      	cmp	r3, #0
    1742:	d00c      	beq.n	175e <_sbrk+0x22>
    1744:	1818      	adds	r0, r3, r0
    1746:	4669      	mov	r1, sp
    1748:	4288      	cmp	r0, r1
    174a:	d802      	bhi.n	1752 <_sbrk+0x16>
    174c:	6010      	str	r0, [r2, #0]
    174e:	1c18      	adds	r0, r3, #0
    1750:	4770      	bx	lr
    1752:	4b05      	ldr	r3, [pc, #20]	; (1768 <_sbrk+0x2c>)
    1754:	220c      	movs	r2, #12
    1756:	2001      	movs	r0, #1
    1758:	601a      	str	r2, [r3, #0]
    175a:	4243      	negs	r3, r0
    175c:	e7f7      	b.n	174e <_sbrk+0x12>
    175e:	4b03      	ldr	r3, [pc, #12]	; (176c <_sbrk+0x30>)
    1760:	6013      	str	r3, [r2, #0]
    1762:	e7ef      	b.n	1744 <_sbrk+0x8>
    1764:	10000b34 	.word	0x10000b34
    1768:	10000b38 	.word	0x10000b38
    176c:	10000b3c 	.word	0x10000b3c

00001770 <__gnu_thumb1_case_uqi>:
    1770:	b402      	push	{r1}
    1772:	4671      	mov	r1, lr
    1774:	0849      	lsrs	r1, r1, #1
    1776:	0049      	lsls	r1, r1, #1
    1778:	5c09      	ldrb	r1, [r1, r0]
    177a:	0049      	lsls	r1, r1, #1
    177c:	448e      	add	lr, r1
    177e:	bc02      	pop	{r1}
    1780:	4770      	bx	lr
    1782:	46c0      	nop			; (mov r8, r8)

00001784 <__aeabi_uidiv>:
    1784:	2900      	cmp	r1, #0
    1786:	d034      	beq.n	17f2 <.udivsi3_skip_div0_test+0x6a>

00001788 <.udivsi3_skip_div0_test>:
    1788:	2301      	movs	r3, #1
    178a:	2200      	movs	r2, #0
    178c:	b410      	push	{r4}
    178e:	4288      	cmp	r0, r1
    1790:	d32c      	bcc.n	17ec <.udivsi3_skip_div0_test+0x64>
    1792:	2401      	movs	r4, #1
    1794:	0724      	lsls	r4, r4, #28
    1796:	42a1      	cmp	r1, r4
    1798:	d204      	bcs.n	17a4 <.udivsi3_skip_div0_test+0x1c>
    179a:	4281      	cmp	r1, r0
    179c:	d202      	bcs.n	17a4 <.udivsi3_skip_div0_test+0x1c>
    179e:	0109      	lsls	r1, r1, #4
    17a0:	011b      	lsls	r3, r3, #4
    17a2:	e7f8      	b.n	1796 <.udivsi3_skip_div0_test+0xe>
    17a4:	00e4      	lsls	r4, r4, #3
    17a6:	42a1      	cmp	r1, r4
    17a8:	d204      	bcs.n	17b4 <.udivsi3_skip_div0_test+0x2c>
    17aa:	4281      	cmp	r1, r0
    17ac:	d202      	bcs.n	17b4 <.udivsi3_skip_div0_test+0x2c>
    17ae:	0049      	lsls	r1, r1, #1
    17b0:	005b      	lsls	r3, r3, #1
    17b2:	e7f8      	b.n	17a6 <.udivsi3_skip_div0_test+0x1e>
    17b4:	4288      	cmp	r0, r1
    17b6:	d301      	bcc.n	17bc <.udivsi3_skip_div0_test+0x34>
    17b8:	1a40      	subs	r0, r0, r1
    17ba:	431a      	orrs	r2, r3
    17bc:	084c      	lsrs	r4, r1, #1
    17be:	42a0      	cmp	r0, r4
    17c0:	d302      	bcc.n	17c8 <.udivsi3_skip_div0_test+0x40>
    17c2:	1b00      	subs	r0, r0, r4
    17c4:	085c      	lsrs	r4, r3, #1
    17c6:	4322      	orrs	r2, r4
    17c8:	088c      	lsrs	r4, r1, #2
    17ca:	42a0      	cmp	r0, r4
    17cc:	d302      	bcc.n	17d4 <.udivsi3_skip_div0_test+0x4c>
    17ce:	1b00      	subs	r0, r0, r4
    17d0:	089c      	lsrs	r4, r3, #2
    17d2:	4322      	orrs	r2, r4
    17d4:	08cc      	lsrs	r4, r1, #3
    17d6:	42a0      	cmp	r0, r4
    17d8:	d302      	bcc.n	17e0 <.udivsi3_skip_div0_test+0x58>
    17da:	1b00      	subs	r0, r0, r4
    17dc:	08dc      	lsrs	r4, r3, #3
    17de:	4322      	orrs	r2, r4
    17e0:	2800      	cmp	r0, #0
    17e2:	d003      	beq.n	17ec <.udivsi3_skip_div0_test+0x64>
    17e4:	091b      	lsrs	r3, r3, #4
    17e6:	d001      	beq.n	17ec <.udivsi3_skip_div0_test+0x64>
    17e8:	0909      	lsrs	r1, r1, #4
    17ea:	e7e3      	b.n	17b4 <.udivsi3_skip_div0_test+0x2c>
    17ec:	1c10      	adds	r0, r2, #0
    17ee:	bc10      	pop	{r4}
    17f0:	4770      	bx	lr
    17f2:	2800      	cmp	r0, #0
    17f4:	d001      	beq.n	17fa <.udivsi3_skip_div0_test+0x72>
    17f6:	2000      	movs	r0, #0
    17f8:	43c0      	mvns	r0, r0
    17fa:	b407      	push	{r0, r1, r2}
    17fc:	4802      	ldr	r0, [pc, #8]	; (1808 <.udivsi3_skip_div0_test+0x80>)
    17fe:	a102      	add	r1, pc, #8	; (adr r1, 1808 <.udivsi3_skip_div0_test+0x80>)
    1800:	1840      	adds	r0, r0, r1
    1802:	9002      	str	r0, [sp, #8]
    1804:	bd03      	pop	{r0, r1, pc}
    1806:	46c0      	nop			; (mov r8, r8)
    1808:	00000019 	.word	0x00000019

0000180c <__aeabi_uidivmod>:
    180c:	2900      	cmp	r1, #0
    180e:	d0f0      	beq.n	17f2 <.udivsi3_skip_div0_test+0x6a>
    1810:	b503      	push	{r0, r1, lr}
    1812:	f7ff ffb9 	bl	1788 <.udivsi3_skip_div0_test>
    1816:	bc0e      	pop	{r1, r2, r3}
    1818:	4342      	muls	r2, r0
    181a:	1a89      	subs	r1, r1, r2
    181c:	4718      	bx	r3
    181e:	46c0      	nop			; (mov r8, r8)

00001820 <__aeabi_idiv0>:
    1820:	4770      	bx	lr
    1822:	46c0      	nop			; (mov r8, r8)

00001824 <__aeabi_cdrcmple>:
    1824:	4684      	mov	ip, r0
    1826:	1c10      	adds	r0, r2, #0
    1828:	4662      	mov	r2, ip
    182a:	468c      	mov	ip, r1
    182c:	1c19      	adds	r1, r3, #0
    182e:	4663      	mov	r3, ip
    1830:	e000      	b.n	1834 <__aeabi_cdcmpeq>
    1832:	46c0      	nop			; (mov r8, r8)

00001834 <__aeabi_cdcmpeq>:
    1834:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    1836:	f000 ff91 	bl	275c <__ledf2>
    183a:	2800      	cmp	r0, #0
    183c:	d401      	bmi.n	1842 <__aeabi_cdcmpeq+0xe>
    183e:	2100      	movs	r1, #0
    1840:	42c8      	cmn	r0, r1
    1842:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00001844 <__aeabi_dcmpeq>:
    1844:	b510      	push	{r4, lr}
    1846:	f000 fed7 	bl	25f8 <__eqdf2>
    184a:	4240      	negs	r0, r0
    184c:	3001      	adds	r0, #1
    184e:	bd10      	pop	{r4, pc}

00001850 <__aeabi_dcmplt>:
    1850:	b510      	push	{r4, lr}
    1852:	f000 ff83 	bl	275c <__ledf2>
    1856:	2800      	cmp	r0, #0
    1858:	db01      	blt.n	185e <__aeabi_dcmplt+0xe>
    185a:	2000      	movs	r0, #0
    185c:	bd10      	pop	{r4, pc}
    185e:	2001      	movs	r0, #1
    1860:	bd10      	pop	{r4, pc}
    1862:	46c0      	nop			; (mov r8, r8)

00001864 <__aeabi_dcmple>:
    1864:	b510      	push	{r4, lr}
    1866:	f000 ff79 	bl	275c <__ledf2>
    186a:	2800      	cmp	r0, #0
    186c:	dd01      	ble.n	1872 <__aeabi_dcmple+0xe>
    186e:	2000      	movs	r0, #0
    1870:	bd10      	pop	{r4, pc}
    1872:	2001      	movs	r0, #1
    1874:	bd10      	pop	{r4, pc}
    1876:	46c0      	nop			; (mov r8, r8)

00001878 <__aeabi_dcmpgt>:
    1878:	b510      	push	{r4, lr}
    187a:	f000 fefb 	bl	2674 <__gedf2>
    187e:	2800      	cmp	r0, #0
    1880:	dc01      	bgt.n	1886 <__aeabi_dcmpgt+0xe>
    1882:	2000      	movs	r0, #0
    1884:	bd10      	pop	{r4, pc}
    1886:	2001      	movs	r0, #1
    1888:	bd10      	pop	{r4, pc}
    188a:	46c0      	nop			; (mov r8, r8)

0000188c <__aeabi_dcmpge>:
    188c:	b510      	push	{r4, lr}
    188e:	f000 fef1 	bl	2674 <__gedf2>
    1892:	2800      	cmp	r0, #0
    1894:	da01      	bge.n	189a <__aeabi_dcmpge+0xe>
    1896:	2000      	movs	r0, #0
    1898:	bd10      	pop	{r4, pc}
    189a:	2001      	movs	r0, #1
    189c:	bd10      	pop	{r4, pc}
    189e:	46c0      	nop			; (mov r8, r8)

000018a0 <__aeabi_d2uiz>:
    18a0:	b538      	push	{r3, r4, r5, lr}
    18a2:	4b0e      	ldr	r3, [pc, #56]	; (18dc <__aeabi_d2uiz+0x3c>)
    18a4:	4a0c      	ldr	r2, [pc, #48]	; (18d8 <__aeabi_d2uiz+0x38>)
    18a6:	1c04      	adds	r4, r0, #0
    18a8:	1c0d      	adds	r5, r1, #0
    18aa:	f7ff ffef 	bl	188c <__aeabi_dcmpge>
    18ae:	2800      	cmp	r0, #0
    18b0:	d104      	bne.n	18bc <__aeabi_d2uiz+0x1c>
    18b2:	1c20      	adds	r0, r4, #0
    18b4:	1c29      	adds	r1, r5, #0
    18b6:	f001 fdb1 	bl	341c <__aeabi_d2iz>
    18ba:	bd38      	pop	{r3, r4, r5, pc}
    18bc:	4b07      	ldr	r3, [pc, #28]	; (18dc <__aeabi_d2uiz+0x3c>)
    18be:	4a06      	ldr	r2, [pc, #24]	; (18d8 <__aeabi_d2uiz+0x38>)
    18c0:	1c20      	adds	r0, r4, #0
    18c2:	1c29      	adds	r1, r5, #0
    18c4:	f001 fa28 	bl	2d18 <__aeabi_dsub>
    18c8:	f001 fda8 	bl	341c <__aeabi_d2iz>
    18cc:	2380      	movs	r3, #128	; 0x80
    18ce:	0619      	lsls	r1, r3, #24
    18d0:	1840      	adds	r0, r0, r1
    18d2:	e7f2      	b.n	18ba <__aeabi_d2uiz+0x1a>
    18d4:	46c0      	nop			; (mov r8, r8)
    18d6:	46c0      	nop			; (mov r8, r8)
    18d8:	00000000 	.word	0x00000000
    18dc:	41e00000 	.word	0x41e00000

000018e0 <__aeabi_dadd>:
    18e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    18e2:	465f      	mov	r7, fp
    18e4:	4656      	mov	r6, sl
    18e6:	464d      	mov	r5, r9
    18e8:	4644      	mov	r4, r8
    18ea:	b4f0      	push	{r4, r5, r6, r7}
    18ec:	030c      	lsls	r4, r1, #12
    18ee:	0f46      	lsrs	r6, r0, #29
    18f0:	0a64      	lsrs	r4, r4, #9
    18f2:	4334      	orrs	r4, r6
    18f4:	46a3      	mov	fp, r4
    18f6:	005e      	lsls	r6, r3, #1
    18f8:	031c      	lsls	r4, r3, #12
    18fa:	0fdb      	lsrs	r3, r3, #31
    18fc:	469c      	mov	ip, r3
    18fe:	0a63      	lsrs	r3, r4, #9
    1900:	4698      	mov	r8, r3
    1902:	004d      	lsls	r5, r1, #1
    1904:	0f53      	lsrs	r3, r2, #29
    1906:	4644      	mov	r4, r8
    1908:	431c      	orrs	r4, r3
    190a:	0d6d      	lsrs	r5, r5, #21
    190c:	0fc9      	lsrs	r1, r1, #31
    190e:	0d76      	lsrs	r6, r6, #21
    1910:	00d2      	lsls	r2, r2, #3
    1912:	1c0f      	adds	r7, r1, #0
    1914:	00c0      	lsls	r0, r0, #3
    1916:	46a1      	mov	r9, r4
    1918:	4692      	mov	sl, r2
    191a:	1bab      	subs	r3, r5, r6
    191c:	4561      	cmp	r1, ip
    191e:	d100      	bne.n	1922 <__aeabi_dadd+0x42>
    1920:	e0a4      	b.n	1a6c <__aeabi_dadd+0x18c>
    1922:	2b00      	cmp	r3, #0
    1924:	dc00      	bgt.n	1928 <__aeabi_dadd+0x48>
    1926:	e0f5      	b.n	1b14 <__aeabi_dadd+0x234>
    1928:	2e00      	cmp	r6, #0
    192a:	d10c      	bne.n	1946 <__aeabi_dadd+0x66>
    192c:	1c26      	adds	r6, r4, #0
    192e:	4316      	orrs	r6, r2
    1930:	d100      	bne.n	1934 <__aeabi_dadd+0x54>
    1932:	e0c2      	b.n	1aba <__aeabi_dadd+0x1da>
    1934:	3b01      	subs	r3, #1
    1936:	2b00      	cmp	r3, #0
    1938:	d000      	beq.n	193c <__aeabi_dadd+0x5c>
    193a:	e146      	b.n	1bca <__aeabi_dadd+0x2ea>
    193c:	465c      	mov	r4, fp
    193e:	464b      	mov	r3, r9
    1940:	1a82      	subs	r2, r0, r2
    1942:	1ae7      	subs	r7, r4, r3
    1944:	e021      	b.n	198a <__aeabi_dadd+0xaa>
    1946:	4ed2      	ldr	r6, [pc, #840]	; (1c90 <__aeabi_dadd+0x3b0>)
    1948:	42b5      	cmp	r5, r6
    194a:	d100      	bne.n	194e <__aeabi_dadd+0x6e>
    194c:	e0cd      	b.n	1aea <__aeabi_dadd+0x20a>
    194e:	2480      	movs	r4, #128	; 0x80
    1950:	464a      	mov	r2, r9
    1952:	0427      	lsls	r7, r4, #16
    1954:	433a      	orrs	r2, r7
    1956:	4691      	mov	r9, r2
    1958:	2b38      	cmp	r3, #56	; 0x38
    195a:	dd00      	ble.n	195e <__aeabi_dadd+0x7e>
    195c:	e10f      	b.n	1b7e <__aeabi_dadd+0x29e>
    195e:	2b1f      	cmp	r3, #31
    1960:	dd00      	ble.n	1964 <__aeabi_dadd+0x84>
    1962:	e150      	b.n	1c06 <__aeabi_dadd+0x326>
    1964:	2620      	movs	r6, #32
    1966:	1af6      	subs	r6, r6, r3
    1968:	464c      	mov	r4, r9
    196a:	4652      	mov	r2, sl
    196c:	4657      	mov	r7, sl
    196e:	40b4      	lsls	r4, r6
    1970:	40b7      	lsls	r7, r6
    1972:	40da      	lsrs	r2, r3
    1974:	4322      	orrs	r2, r4
    1976:	1c3e      	adds	r6, r7, #0
    1978:	464c      	mov	r4, r9
    197a:	1e77      	subs	r7, r6, #1
    197c:	41be      	sbcs	r6, r7
    197e:	40dc      	lsrs	r4, r3
    1980:	4332      	orrs	r2, r6
    1982:	1c26      	adds	r6, r4, #0
    1984:	465b      	mov	r3, fp
    1986:	1a82      	subs	r2, r0, r2
    1988:	1b9f      	subs	r7, r3, r6
    198a:	4290      	cmp	r0, r2
    198c:	4180      	sbcs	r0, r0
    198e:	4246      	negs	r6, r0
    1990:	1bbb      	subs	r3, r7, r6
    1992:	1c14      	adds	r4, r2, #0
    1994:	1c2e      	adds	r6, r5, #0
    1996:	1c0f      	adds	r7, r1, #0
    1998:	0218      	lsls	r0, r3, #8
    199a:	d400      	bmi.n	199e <__aeabi_dadd+0xbe>
    199c:	e0ae      	b.n	1afc <__aeabi_dadd+0x21c>
    199e:	025d      	lsls	r5, r3, #9
    19a0:	0a69      	lsrs	r1, r5, #9
    19a2:	4688      	mov	r8, r1
    19a4:	4642      	mov	r2, r8
    19a6:	2a00      	cmp	r2, #0
    19a8:	d100      	bne.n	19ac <__aeabi_dadd+0xcc>
    19aa:	e0d9      	b.n	1b60 <__aeabi_dadd+0x280>
    19ac:	4640      	mov	r0, r8
    19ae:	f001 fdd5 	bl	355c <__clzsi2>
    19b2:	1c05      	adds	r5, r0, #0
    19b4:	3d08      	subs	r5, #8
    19b6:	2d1f      	cmp	r5, #31
    19b8:	dd00      	ble.n	19bc <__aeabi_dadd+0xdc>
    19ba:	e0da      	b.n	1b72 <__aeabi_dadd+0x292>
    19bc:	2228      	movs	r2, #40	; 0x28
    19be:	1a13      	subs	r3, r2, r0
    19c0:	1c20      	adds	r0, r4, #0
    19c2:	4641      	mov	r1, r8
    19c4:	40d8      	lsrs	r0, r3
    19c6:	40a9      	lsls	r1, r5
    19c8:	1c03      	adds	r3, r0, #0
    19ca:	430b      	orrs	r3, r1
    19cc:	40ac      	lsls	r4, r5
    19ce:	42ae      	cmp	r6, r5
    19d0:	dd00      	ble.n	19d4 <__aeabi_dadd+0xf4>
    19d2:	e090      	b.n	1af6 <__aeabi_dadd+0x216>
    19d4:	1bae      	subs	r6, r5, r6
    19d6:	1c71      	adds	r1, r6, #1
    19d8:	291f      	cmp	r1, #31
    19da:	dd00      	ble.n	19de <__aeabi_dadd+0xfe>
    19dc:	e100      	b.n	1be0 <__aeabi_dadd+0x300>
    19de:	201f      	movs	r0, #31
    19e0:	1b85      	subs	r5, r0, r6
    19e2:	1c1a      	adds	r2, r3, #0
    19e4:	1c20      	adds	r0, r4, #0
    19e6:	40aa      	lsls	r2, r5
    19e8:	40c8      	lsrs	r0, r1
    19ea:	40ac      	lsls	r4, r5
    19ec:	4310      	orrs	r0, r2
    19ee:	1e66      	subs	r6, r4, #1
    19f0:	41b4      	sbcs	r4, r6
    19f2:	4304      	orrs	r4, r0
    19f4:	40cb      	lsrs	r3, r1
    19f6:	2201      	movs	r2, #1
    19f8:	2600      	movs	r6, #0
    19fa:	200f      	movs	r0, #15
    19fc:	4020      	ands	r0, r4
    19fe:	2804      	cmp	r0, #4
    1a00:	d064      	beq.n	1acc <__aeabi_dadd+0x1ec>
    1a02:	1d20      	adds	r0, r4, #4
    1a04:	42a0      	cmp	r0, r4
    1a06:	41a4      	sbcs	r4, r4
    1a08:	4265      	negs	r5, r4
    1a0a:	2180      	movs	r1, #128	; 0x80
    1a0c:	195b      	adds	r3, r3, r5
    1a0e:	2401      	movs	r4, #1
    1a10:	040d      	lsls	r5, r1, #16
    1a12:	401d      	ands	r5, r3
    1a14:	4027      	ands	r7, r4
    1a16:	2d00      	cmp	r5, #0
    1a18:	d007      	beq.n	1a2a <__aeabi_dadd+0x14a>
    1a1a:	4e9d      	ldr	r6, [pc, #628]	; (1c90 <__aeabi_dadd+0x3b0>)
    1a1c:	42b2      	cmp	r2, r6
    1a1e:	d100      	bne.n	1a22 <__aeabi_dadd+0x142>
    1a20:	e09a      	b.n	1b58 <__aeabi_dadd+0x278>
    1a22:	499c      	ldr	r1, [pc, #624]	; (1c94 <__aeabi_dadd+0x3b4>)
    1a24:	1c16      	adds	r6, r2, #0
    1a26:	400b      	ands	r3, r1
    1a28:	3201      	adds	r2, #1
    1a2a:	075c      	lsls	r4, r3, #29
    1a2c:	08c0      	lsrs	r0, r0, #3
    1a2e:	0552      	lsls	r2, r2, #21
    1a30:	4304      	orrs	r4, r0
    1a32:	08db      	lsrs	r3, r3, #3
    1a34:	0d55      	lsrs	r5, r2, #21
    1a36:	2d01      	cmp	r5, #1
    1a38:	dd62      	ble.n	1b00 <__aeabi_dadd+0x220>
    1a3a:	031b      	lsls	r3, r3, #12
    1a3c:	0576      	lsls	r6, r6, #21
    1a3e:	0b1b      	lsrs	r3, r3, #12
    1a40:	0d76      	lsrs	r6, r6, #21
    1a42:	2000      	movs	r0, #0
    1a44:	2100      	movs	r1, #0
    1a46:	0d09      	lsrs	r1, r1, #20
    1a48:	1c20      	adds	r0, r4, #0
    1a4a:	050a      	lsls	r2, r1, #20
    1a4c:	4c92      	ldr	r4, [pc, #584]	; (1c98 <__aeabi_dadd+0x3b8>)
    1a4e:	4313      	orrs	r3, r2
    1a50:	0576      	lsls	r6, r6, #21
    1a52:	0875      	lsrs	r5, r6, #1
    1a54:	401c      	ands	r4, r3
    1a56:	432c      	orrs	r4, r5
    1a58:	0063      	lsls	r3, r4, #1
    1a5a:	07ff      	lsls	r7, r7, #31
    1a5c:	0859      	lsrs	r1, r3, #1
    1a5e:	4339      	orrs	r1, r7
    1a60:	bc3c      	pop	{r2, r3, r4, r5}
    1a62:	4690      	mov	r8, r2
    1a64:	4699      	mov	r9, r3
    1a66:	46a2      	mov	sl, r4
    1a68:	46ab      	mov	fp, r5
    1a6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1a6c:	2b00      	cmp	r3, #0
    1a6e:	dc00      	bgt.n	1a72 <__aeabi_dadd+0x192>
    1a70:	e091      	b.n	1b96 <__aeabi_dadd+0x2b6>
    1a72:	2e00      	cmp	r6, #0
    1a74:	d031      	beq.n	1ada <__aeabi_dadd+0x1fa>
    1a76:	4e86      	ldr	r6, [pc, #536]	; (1c90 <__aeabi_dadd+0x3b0>)
    1a78:	42b5      	cmp	r5, r6
    1a7a:	d100      	bne.n	1a7e <__aeabi_dadd+0x19e>
    1a7c:	e0a9      	b.n	1bd2 <__aeabi_dadd+0x2f2>
    1a7e:	2480      	movs	r4, #128	; 0x80
    1a80:	464e      	mov	r6, r9
    1a82:	0422      	lsls	r2, r4, #16
    1a84:	4316      	orrs	r6, r2
    1a86:	46b1      	mov	r9, r6
    1a88:	2b38      	cmp	r3, #56	; 0x38
    1a8a:	dd00      	ble.n	1a8e <__aeabi_dadd+0x1ae>
    1a8c:	e118      	b.n	1cc0 <__aeabi_dadd+0x3e0>
    1a8e:	2b1f      	cmp	r3, #31
    1a90:	dd00      	ble.n	1a94 <__aeabi_dadd+0x1b4>
    1a92:	e173      	b.n	1d7c <__aeabi_dadd+0x49c>
    1a94:	2620      	movs	r6, #32
    1a96:	1af6      	subs	r6, r6, r3
    1a98:	464a      	mov	r2, r9
    1a9a:	40b2      	lsls	r2, r6
    1a9c:	4690      	mov	r8, r2
    1a9e:	4652      	mov	r2, sl
    1aa0:	4644      	mov	r4, r8
    1aa2:	40da      	lsrs	r2, r3
    1aa4:	4322      	orrs	r2, r4
    1aa6:	4654      	mov	r4, sl
    1aa8:	40b4      	lsls	r4, r6
    1aaa:	1c26      	adds	r6, r4, #0
    1aac:	1e74      	subs	r4, r6, #1
    1aae:	41a6      	sbcs	r6, r4
    1ab0:	464c      	mov	r4, r9
    1ab2:	4332      	orrs	r2, r6
    1ab4:	40dc      	lsrs	r4, r3
    1ab6:	1812      	adds	r2, r2, r0
    1ab8:	e0f6      	b.n	1ca8 <__aeabi_dadd+0x3c8>
    1aba:	1c04      	adds	r4, r0, #0
    1abc:	200f      	movs	r0, #15
    1abe:	1c6a      	adds	r2, r5, #1
    1ac0:	465b      	mov	r3, fp
    1ac2:	1c2e      	adds	r6, r5, #0
    1ac4:	1c0f      	adds	r7, r1, #0
    1ac6:	4020      	ands	r0, r4
    1ac8:	2804      	cmp	r0, #4
    1aca:	d19a      	bne.n	1a02 <__aeabi_dadd+0x122>
    1acc:	2580      	movs	r5, #128	; 0x80
    1ace:	042d      	lsls	r5, r5, #16
    1ad0:	2101      	movs	r1, #1
    1ad2:	401d      	ands	r5, r3
    1ad4:	400f      	ands	r7, r1
    1ad6:	1c20      	adds	r0, r4, #0
    1ad8:	e79d      	b.n	1a16 <__aeabi_dadd+0x136>
    1ada:	4314      	orrs	r4, r2
    1adc:	d000      	beq.n	1ae0 <__aeabi_dadd+0x200>
    1ade:	e0dd      	b.n	1c9c <__aeabi_dadd+0x3bc>
    1ae0:	1c6a      	adds	r2, r5, #1
    1ae2:	465b      	mov	r3, fp
    1ae4:	1c04      	adds	r4, r0, #0
    1ae6:	1c2e      	adds	r6, r5, #0
    1ae8:	e787      	b.n	19fa <__aeabi_dadd+0x11a>
    1aea:	2180      	movs	r1, #128	; 0x80
    1aec:	465b      	mov	r3, fp
    1aee:	1c04      	adds	r4, r0, #0
    1af0:	010a      	lsls	r2, r1, #4
    1af2:	1c2e      	adds	r6, r5, #0
    1af4:	e781      	b.n	19fa <__aeabi_dadd+0x11a>
    1af6:	1b76      	subs	r6, r6, r5
    1af8:	4d66      	ldr	r5, [pc, #408]	; (1c94 <__aeabi_dadd+0x3b4>)
    1afa:	402b      	ands	r3, r5
    1afc:	1c72      	adds	r2, r6, #1
    1afe:	e77c      	b.n	19fa <__aeabi_dadd+0x11a>
    1b00:	1c21      	adds	r1, r4, #0
    1b02:	4319      	orrs	r1, r3
    1b04:	d100      	bne.n	1b08 <__aeabi_dadd+0x228>
    1b06:	e267      	b.n	1fd8 <__aeabi_dadd+0x6f8>
    1b08:	2e00      	cmp	r6, #0
    1b0a:	d041      	beq.n	1b90 <__aeabi_dadd+0x2b0>
    1b0c:	2080      	movs	r0, #128	; 0x80
    1b0e:	0302      	lsls	r2, r0, #12
    1b10:	4313      	orrs	r3, r2
    1b12:	e792      	b.n	1a3a <__aeabi_dadd+0x15a>
    1b14:	2b00      	cmp	r3, #0
    1b16:	d000      	beq.n	1b1a <__aeabi_dadd+0x23a>
    1b18:	e088      	b.n	1c2c <__aeabi_dadd+0x34c>
    1b1a:	1c69      	adds	r1, r5, #1
    1b1c:	054e      	lsls	r6, r1, #21
    1b1e:	0d74      	lsrs	r4, r6, #21
    1b20:	2c01      	cmp	r4, #1
    1b22:	dc00      	bgt.n	1b26 <__aeabi_dadd+0x246>
    1b24:	e11a      	b.n	1d5c <__aeabi_dadd+0x47c>
    1b26:	465b      	mov	r3, fp
    1b28:	1c16      	adds	r6, r2, #0
    1b2a:	464c      	mov	r4, r9
    1b2c:	1a82      	subs	r2, r0, r2
    1b2e:	1b19      	subs	r1, r3, r4
    1b30:	4290      	cmp	r0, r2
    1b32:	419b      	sbcs	r3, r3
    1b34:	425b      	negs	r3, r3
    1b36:	1ac9      	subs	r1, r1, r3
    1b38:	4688      	mov	r8, r1
    1b3a:	020b      	lsls	r3, r1, #8
    1b3c:	d400      	bmi.n	1b40 <__aeabi_dadd+0x260>
    1b3e:	e09e      	b.n	1c7e <__aeabi_dadd+0x39e>
    1b40:	1a37      	subs	r7, r6, r0
    1b42:	45ba      	cmp	sl, r7
    1b44:	4192      	sbcs	r2, r2
    1b46:	465e      	mov	r6, fp
    1b48:	1ba4      	subs	r4, r4, r6
    1b4a:	4253      	negs	r3, r2
    1b4c:	1ae1      	subs	r1, r4, r3
    1b4e:	4688      	mov	r8, r1
    1b50:	1c3c      	adds	r4, r7, #0
    1b52:	1c2e      	adds	r6, r5, #0
    1b54:	4667      	mov	r7, ip
    1b56:	e725      	b.n	19a4 <__aeabi_dadd+0xc4>
    1b58:	1c16      	adds	r6, r2, #0
    1b5a:	2300      	movs	r3, #0
    1b5c:	2400      	movs	r4, #0
    1b5e:	e770      	b.n	1a42 <__aeabi_dadd+0x162>
    1b60:	1c20      	adds	r0, r4, #0
    1b62:	f001 fcfb 	bl	355c <__clzsi2>
    1b66:	3020      	adds	r0, #32
    1b68:	1c05      	adds	r5, r0, #0
    1b6a:	3d08      	subs	r5, #8
    1b6c:	2d1f      	cmp	r5, #31
    1b6e:	dc00      	bgt.n	1b72 <__aeabi_dadd+0x292>
    1b70:	e724      	b.n	19bc <__aeabi_dadd+0xdc>
    1b72:	1c03      	adds	r3, r0, #0
    1b74:	3b28      	subs	r3, #40	; 0x28
    1b76:	409c      	lsls	r4, r3
    1b78:	1c23      	adds	r3, r4, #0
    1b7a:	2400      	movs	r4, #0
    1b7c:	e727      	b.n	19ce <__aeabi_dadd+0xee>
    1b7e:	464a      	mov	r2, r9
    1b80:	4653      	mov	r3, sl
    1b82:	431a      	orrs	r2, r3
    1b84:	2600      	movs	r6, #0
    1b86:	2a00      	cmp	r2, #0
    1b88:	d100      	bne.n	1b8c <__aeabi_dadd+0x2ac>
    1b8a:	e6fb      	b.n	1984 <__aeabi_dadd+0xa4>
    1b8c:	2201      	movs	r2, #1
    1b8e:	e6f9      	b.n	1984 <__aeabi_dadd+0xa4>
    1b90:	031d      	lsls	r5, r3, #12
    1b92:	0b2b      	lsrs	r3, r5, #12
    1b94:	e755      	b.n	1a42 <__aeabi_dadd+0x162>
    1b96:	2b00      	cmp	r3, #0
    1b98:	d000      	beq.n	1b9c <__aeabi_dadd+0x2bc>
    1b9a:	e104      	b.n	1da6 <__aeabi_dadd+0x4c6>
    1b9c:	1c6e      	adds	r6, r5, #1
    1b9e:	0574      	lsls	r4, r6, #21
    1ba0:	0d63      	lsrs	r3, r4, #21
    1ba2:	2b01      	cmp	r3, #1
    1ba4:	dc00      	bgt.n	1ba8 <__aeabi_dadd+0x2c8>
    1ba6:	e0aa      	b.n	1cfe <__aeabi_dadd+0x41e>
    1ba8:	4939      	ldr	r1, [pc, #228]	; (1c90 <__aeabi_dadd+0x3b0>)
    1baa:	428e      	cmp	r6, r1
    1bac:	d100      	bne.n	1bb0 <__aeabi_dadd+0x2d0>
    1bae:	e130      	b.n	1e12 <__aeabi_dadd+0x532>
    1bb0:	1811      	adds	r1, r2, r0
    1bb2:	4281      	cmp	r1, r0
    1bb4:	4180      	sbcs	r0, r0
    1bb6:	464b      	mov	r3, r9
    1bb8:	4242      	negs	r2, r0
    1bba:	445b      	add	r3, fp
    1bbc:	189b      	adds	r3, r3, r2
    1bbe:	07dc      	lsls	r4, r3, #31
    1bc0:	0849      	lsrs	r1, r1, #1
    1bc2:	430c      	orrs	r4, r1
    1bc4:	085b      	lsrs	r3, r3, #1
    1bc6:	1caa      	adds	r2, r5, #2
    1bc8:	e717      	b.n	19fa <__aeabi_dadd+0x11a>
    1bca:	4f31      	ldr	r7, [pc, #196]	; (1c90 <__aeabi_dadd+0x3b0>)
    1bcc:	42bd      	cmp	r5, r7
    1bce:	d000      	beq.n	1bd2 <__aeabi_dadd+0x2f2>
    1bd0:	e6c2      	b.n	1958 <__aeabi_dadd+0x78>
    1bd2:	1c04      	adds	r4, r0, #0
    1bd4:	2080      	movs	r0, #128	; 0x80
    1bd6:	465b      	mov	r3, fp
    1bd8:	1c0f      	adds	r7, r1, #0
    1bda:	0102      	lsls	r2, r0, #4
    1bdc:	1c2e      	adds	r6, r5, #0
    1bde:	e70c      	b.n	19fa <__aeabi_dadd+0x11a>
    1be0:	1c30      	adds	r0, r6, #0
    1be2:	381f      	subs	r0, #31
    1be4:	1c1a      	adds	r2, r3, #0
    1be6:	40c2      	lsrs	r2, r0
    1be8:	1c15      	adds	r5, r2, #0
    1bea:	2920      	cmp	r1, #32
    1bec:	d100      	bne.n	1bf0 <__aeabi_dadd+0x310>
    1bee:	e082      	b.n	1cf6 <__aeabi_dadd+0x416>
    1bf0:	213f      	movs	r1, #63	; 0x3f
    1bf2:	1b8e      	subs	r6, r1, r6
    1bf4:	40b3      	lsls	r3, r6
    1bf6:	431c      	orrs	r4, r3
    1bf8:	1e63      	subs	r3, r4, #1
    1bfa:	419c      	sbcs	r4, r3
    1bfc:	432c      	orrs	r4, r5
    1bfe:	2201      	movs	r2, #1
    1c00:	2300      	movs	r3, #0
    1c02:	2600      	movs	r6, #0
    1c04:	e6f9      	b.n	19fa <__aeabi_dadd+0x11a>
    1c06:	1c1c      	adds	r4, r3, #0
    1c08:	3c20      	subs	r4, #32
    1c0a:	464f      	mov	r7, r9
    1c0c:	40e7      	lsrs	r7, r4
    1c0e:	1c3e      	adds	r6, r7, #0
    1c10:	2b20      	cmp	r3, #32
    1c12:	d072      	beq.n	1cfa <__aeabi_dadd+0x41a>
    1c14:	2240      	movs	r2, #64	; 0x40
    1c16:	1ad4      	subs	r4, r2, r3
    1c18:	464b      	mov	r3, r9
    1c1a:	40a3      	lsls	r3, r4
    1c1c:	1c1a      	adds	r2, r3, #0
    1c1e:	4657      	mov	r7, sl
    1c20:	433a      	orrs	r2, r7
    1c22:	1e53      	subs	r3, r2, #1
    1c24:	419a      	sbcs	r2, r3
    1c26:	4332      	orrs	r2, r6
    1c28:	2600      	movs	r6, #0
    1c2a:	e6ab      	b.n	1984 <__aeabi_dadd+0xa4>
    1c2c:	425f      	negs	r7, r3
    1c2e:	2d00      	cmp	r5, #0
    1c30:	d050      	beq.n	1cd4 <__aeabi_dadd+0x3f4>
    1c32:	4d17      	ldr	r5, [pc, #92]	; (1c90 <__aeabi_dadd+0x3b0>)
    1c34:	42ae      	cmp	r6, r5
    1c36:	d100      	bne.n	1c3a <__aeabi_dadd+0x35a>
    1c38:	e155      	b.n	1ee6 <__aeabi_dadd+0x606>
    1c3a:	2480      	movs	r4, #128	; 0x80
    1c3c:	465a      	mov	r2, fp
    1c3e:	0421      	lsls	r1, r4, #16
    1c40:	430a      	orrs	r2, r1
    1c42:	4693      	mov	fp, r2
    1c44:	2f38      	cmp	r7, #56	; 0x38
    1c46:	dd00      	ble.n	1c4a <__aeabi_dadd+0x36a>
    1c48:	e0da      	b.n	1e00 <__aeabi_dadd+0x520>
    1c4a:	2f1f      	cmp	r7, #31
    1c4c:	dd00      	ble.n	1c50 <__aeabi_dadd+0x370>
    1c4e:	e178      	b.n	1f42 <__aeabi_dadd+0x662>
    1c50:	2120      	movs	r1, #32
    1c52:	1bcc      	subs	r4, r1, r7
    1c54:	1c05      	adds	r5, r0, #0
    1c56:	465a      	mov	r2, fp
    1c58:	40a2      	lsls	r2, r4
    1c5a:	40fd      	lsrs	r5, r7
    1c5c:	40a0      	lsls	r0, r4
    1c5e:	4315      	orrs	r5, r2
    1c60:	465b      	mov	r3, fp
    1c62:	1e42      	subs	r2, r0, #1
    1c64:	4190      	sbcs	r0, r2
    1c66:	4328      	orrs	r0, r5
    1c68:	40fb      	lsrs	r3, r7
    1c6a:	4657      	mov	r7, sl
    1c6c:	1a3c      	subs	r4, r7, r0
    1c6e:	45a2      	cmp	sl, r4
    1c70:	4192      	sbcs	r2, r2
    1c72:	4648      	mov	r0, r9
    1c74:	1ac1      	subs	r1, r0, r3
    1c76:	4255      	negs	r5, r2
    1c78:	1b4b      	subs	r3, r1, r5
    1c7a:	4667      	mov	r7, ip
    1c7c:	e68c      	b.n	1998 <__aeabi_dadd+0xb8>
    1c7e:	1c08      	adds	r0, r1, #0
    1c80:	4310      	orrs	r0, r2
    1c82:	d130      	bne.n	1ce6 <__aeabi_dadd+0x406>
    1c84:	2700      	movs	r7, #0
    1c86:	2201      	movs	r2, #1
    1c88:	2300      	movs	r3, #0
    1c8a:	2004      	movs	r0, #4
    1c8c:	2600      	movs	r6, #0
    1c8e:	e6cc      	b.n	1a2a <__aeabi_dadd+0x14a>
    1c90:	000007ff 	.word	0x000007ff
    1c94:	ff7fffff 	.word	0xff7fffff
    1c98:	800fffff 	.word	0x800fffff
    1c9c:	3b01      	subs	r3, #1
    1c9e:	2b00      	cmp	r3, #0
    1ca0:	d124      	bne.n	1cec <__aeabi_dadd+0x40c>
    1ca2:	4653      	mov	r3, sl
    1ca4:	181a      	adds	r2, r3, r0
    1ca6:	464c      	mov	r4, r9
    1ca8:	4282      	cmp	r2, r0
    1caa:	4180      	sbcs	r0, r0
    1cac:	445c      	add	r4, fp
    1cae:	4243      	negs	r3, r0
    1cb0:	18e3      	adds	r3, r4, r3
    1cb2:	1c2e      	adds	r6, r5, #0
    1cb4:	1c14      	adds	r4, r2, #0
    1cb6:	0218      	lsls	r0, r3, #8
    1cb8:	d43e      	bmi.n	1d38 <__aeabi_dadd+0x458>
    1cba:	1c72      	adds	r2, r6, #1
    1cbc:	1c0f      	adds	r7, r1, #0
    1cbe:	e69c      	b.n	19fa <__aeabi_dadd+0x11a>
    1cc0:	464a      	mov	r2, r9
    1cc2:	4653      	mov	r3, sl
    1cc4:	431a      	orrs	r2, r3
    1cc6:	2400      	movs	r4, #0
    1cc8:	2a00      	cmp	r2, #0
    1cca:	d100      	bne.n	1cce <__aeabi_dadd+0x3ee>
    1ccc:	e6f3      	b.n	1ab6 <__aeabi_dadd+0x1d6>
    1cce:	2201      	movs	r2, #1
    1cd0:	1812      	adds	r2, r2, r0
    1cd2:	e7e9      	b.n	1ca8 <__aeabi_dadd+0x3c8>
    1cd4:	465b      	mov	r3, fp
    1cd6:	4303      	orrs	r3, r0
    1cd8:	d000      	beq.n	1cdc <__aeabi_dadd+0x3fc>
    1cda:	e083      	b.n	1de4 <__aeabi_dadd+0x504>
    1cdc:	1c23      	adds	r3, r4, #0
    1cde:	1c72      	adds	r2, r6, #1
    1ce0:	4654      	mov	r4, sl
    1ce2:	4667      	mov	r7, ip
    1ce4:	e689      	b.n	19fa <__aeabi_dadd+0x11a>
    1ce6:	1c14      	adds	r4, r2, #0
    1ce8:	1c2e      	adds	r6, r5, #0
    1cea:	e65b      	b.n	19a4 <__aeabi_dadd+0xc4>
    1cec:	4ecd      	ldr	r6, [pc, #820]	; (2024 <__aeabi_dadd+0x744>)
    1cee:	42b5      	cmp	r5, r6
    1cf0:	d000      	beq.n	1cf4 <__aeabi_dadd+0x414>
    1cf2:	e6c9      	b.n	1a88 <__aeabi_dadd+0x1a8>
    1cf4:	e76d      	b.n	1bd2 <__aeabi_dadd+0x2f2>
    1cf6:	2300      	movs	r3, #0
    1cf8:	e77d      	b.n	1bf6 <__aeabi_dadd+0x316>
    1cfa:	2200      	movs	r2, #0
    1cfc:	e78f      	b.n	1c1e <__aeabi_dadd+0x33e>
    1cfe:	465e      	mov	r6, fp
    1d00:	4306      	orrs	r6, r0
    1d02:	2d00      	cmp	r5, #0
    1d04:	d000      	beq.n	1d08 <__aeabi_dadd+0x428>
    1d06:	e0f4      	b.n	1ef2 <__aeabi_dadd+0x612>
    1d08:	2e00      	cmp	r6, #0
    1d0a:	d100      	bne.n	1d0e <__aeabi_dadd+0x42e>
    1d0c:	e14c      	b.n	1fa8 <__aeabi_dadd+0x6c8>
    1d0e:	464b      	mov	r3, r9
    1d10:	4313      	orrs	r3, r2
    1d12:	d100      	bne.n	1d16 <__aeabi_dadd+0x436>
    1d14:	e17e      	b.n	2014 <__aeabi_dadd+0x734>
    1d16:	1815      	adds	r5, r2, r0
    1d18:	464e      	mov	r6, r9
    1d1a:	4285      	cmp	r5, r0
    1d1c:	4180      	sbcs	r0, r0
    1d1e:	445e      	add	r6, fp
    1d20:	4242      	negs	r2, r0
    1d22:	18b3      	adds	r3, r6, r2
    1d24:	021e      	lsls	r6, r3, #8
    1d26:	d400      	bmi.n	1d2a <__aeabi_dadd+0x44a>
    1d28:	e182      	b.n	2030 <__aeabi_dadd+0x750>
    1d2a:	4fbf      	ldr	r7, [pc, #764]	; (2028 <__aeabi_dadd+0x748>)
    1d2c:	1c2c      	adds	r4, r5, #0
    1d2e:	403b      	ands	r3, r7
    1d30:	2202      	movs	r2, #2
    1d32:	1c0f      	adds	r7, r1, #0
    1d34:	2601      	movs	r6, #1
    1d36:	e660      	b.n	19fa <__aeabi_dadd+0x11a>
    1d38:	4dba      	ldr	r5, [pc, #744]	; (2024 <__aeabi_dadd+0x744>)
    1d3a:	1c70      	adds	r0, r6, #1
    1d3c:	42a8      	cmp	r0, r5
    1d3e:	d04b      	beq.n	1dd8 <__aeabi_dadd+0x4f8>
    1d40:	4fb9      	ldr	r7, [pc, #740]	; (2028 <__aeabi_dadd+0x748>)
    1d42:	2501      	movs	r5, #1
    1d44:	4025      	ands	r5, r4
    1d46:	0862      	lsrs	r2, r4, #1
    1d48:	403b      	ands	r3, r7
    1d4a:	1c2c      	adds	r4, r5, #0
    1d4c:	07df      	lsls	r7, r3, #31
    1d4e:	4314      	orrs	r4, r2
    1d50:	433c      	orrs	r4, r7
    1d52:	1cb2      	adds	r2, r6, #2
    1d54:	085b      	lsrs	r3, r3, #1
    1d56:	1c06      	adds	r6, r0, #0
    1d58:	1c0f      	adds	r7, r1, #0
    1d5a:	e64e      	b.n	19fa <__aeabi_dadd+0x11a>
    1d5c:	465e      	mov	r6, fp
    1d5e:	4306      	orrs	r6, r0
    1d60:	2d00      	cmp	r5, #0
    1d62:	d12c      	bne.n	1dbe <__aeabi_dadd+0x4de>
    1d64:	2e00      	cmp	r6, #0
    1d66:	d000      	beq.n	1d6a <__aeabi_dadd+0x48a>
    1d68:	e07d      	b.n	1e66 <__aeabi_dadd+0x586>
    1d6a:	464e      	mov	r6, r9
    1d6c:	1c14      	adds	r4, r2, #0
    1d6e:	4316      	orrs	r6, r2
    1d70:	d088      	beq.n	1c84 <__aeabi_dadd+0x3a4>
    1d72:	464b      	mov	r3, r9
    1d74:	4667      	mov	r7, ip
    1d76:	2201      	movs	r2, #1
    1d78:	2600      	movs	r6, #0
    1d7a:	e63e      	b.n	19fa <__aeabi_dadd+0x11a>
    1d7c:	1c1e      	adds	r6, r3, #0
    1d7e:	3e20      	subs	r6, #32
    1d80:	464c      	mov	r4, r9
    1d82:	40f4      	lsrs	r4, r6
    1d84:	1c26      	adds	r6, r4, #0
    1d86:	2b20      	cmp	r3, #32
    1d88:	d100      	bne.n	1d8c <__aeabi_dadd+0x4ac>
    1d8a:	e0d8      	b.n	1f3e <__aeabi_dadd+0x65e>
    1d8c:	2240      	movs	r2, #64	; 0x40
    1d8e:	1ad4      	subs	r4, r2, r3
    1d90:	464b      	mov	r3, r9
    1d92:	40a3      	lsls	r3, r4
    1d94:	1c1a      	adds	r2, r3, #0
    1d96:	4654      	mov	r4, sl
    1d98:	4322      	orrs	r2, r4
    1d9a:	1e53      	subs	r3, r2, #1
    1d9c:	419a      	sbcs	r2, r3
    1d9e:	4332      	orrs	r2, r6
    1da0:	2400      	movs	r4, #0
    1da2:	1812      	adds	r2, r2, r0
    1da4:	e780      	b.n	1ca8 <__aeabi_dadd+0x3c8>
    1da6:	425b      	negs	r3, r3
    1da8:	2d00      	cmp	r5, #0
    1daa:	d137      	bne.n	1e1c <__aeabi_dadd+0x53c>
    1dac:	465c      	mov	r4, fp
    1dae:	4304      	orrs	r4, r0
    1db0:	d000      	beq.n	1db4 <__aeabi_dadd+0x4d4>
    1db2:	e0d7      	b.n	1f64 <__aeabi_dadd+0x684>
    1db4:	1c72      	adds	r2, r6, #1
    1db6:	464b      	mov	r3, r9
    1db8:	4654      	mov	r4, sl
    1dba:	1c0f      	adds	r7, r1, #0
    1dbc:	e61d      	b.n	19fa <__aeabi_dadd+0x11a>
    1dbe:	2e00      	cmp	r6, #0
    1dc0:	d16e      	bne.n	1ea0 <__aeabi_dadd+0x5c0>
    1dc2:	464b      	mov	r3, r9
    1dc4:	1c14      	adds	r4, r2, #0
    1dc6:	4313      	orrs	r3, r2
    1dc8:	d100      	bne.n	1dcc <__aeabi_dadd+0x4ec>
    1dca:	e0dc      	b.n	1f86 <__aeabi_dadd+0x6a6>
    1dcc:	2580      	movs	r5, #128	; 0x80
    1dce:	464b      	mov	r3, r9
    1dd0:	4667      	mov	r7, ip
    1dd2:	012a      	lsls	r2, r5, #4
    1dd4:	4e93      	ldr	r6, [pc, #588]	; (2024 <__aeabi_dadd+0x744>)
    1dd6:	e610      	b.n	19fa <__aeabi_dadd+0x11a>
    1dd8:	2180      	movs	r1, #128	; 0x80
    1dda:	1c06      	adds	r6, r0, #0
    1ddc:	010a      	lsls	r2, r1, #4
    1dde:	2300      	movs	r3, #0
    1de0:	2004      	movs	r0, #4
    1de2:	e622      	b.n	1a2a <__aeabi_dadd+0x14a>
    1de4:	3f01      	subs	r7, #1
    1de6:	2f00      	cmp	r7, #0
    1de8:	d179      	bne.n	1ede <__aeabi_dadd+0x5fe>
    1dea:	1a17      	subs	r7, r2, r0
    1dec:	465b      	mov	r3, fp
    1dee:	45ba      	cmp	sl, r7
    1df0:	41ad      	sbcs	r5, r5
    1df2:	4649      	mov	r1, r9
    1df4:	1aca      	subs	r2, r1, r3
    1df6:	4268      	negs	r0, r5
    1df8:	1c3c      	adds	r4, r7, #0
    1dfa:	1a13      	subs	r3, r2, r0
    1dfc:	4667      	mov	r7, ip
    1dfe:	e5cb      	b.n	1998 <__aeabi_dadd+0xb8>
    1e00:	465f      	mov	r7, fp
    1e02:	4307      	orrs	r7, r0
    1e04:	2300      	movs	r3, #0
    1e06:	2000      	movs	r0, #0
    1e08:	2f00      	cmp	r7, #0
    1e0a:	d100      	bne.n	1e0e <__aeabi_dadd+0x52e>
    1e0c:	e72d      	b.n	1c6a <__aeabi_dadd+0x38a>
    1e0e:	2001      	movs	r0, #1
    1e10:	e72b      	b.n	1c6a <__aeabi_dadd+0x38a>
    1e12:	2580      	movs	r5, #128	; 0x80
    1e14:	012a      	lsls	r2, r5, #4
    1e16:	2300      	movs	r3, #0
    1e18:	2004      	movs	r0, #4
    1e1a:	e606      	b.n	1a2a <__aeabi_dadd+0x14a>
    1e1c:	4d81      	ldr	r5, [pc, #516]	; (2024 <__aeabi_dadd+0x744>)
    1e1e:	42ae      	cmp	r6, r5
    1e20:	d100      	bne.n	1e24 <__aeabi_dadd+0x544>
    1e22:	e0d3      	b.n	1fcc <__aeabi_dadd+0x6ec>
    1e24:	2480      	movs	r4, #128	; 0x80
    1e26:	465d      	mov	r5, fp
    1e28:	0422      	lsls	r2, r4, #16
    1e2a:	4315      	orrs	r5, r2
    1e2c:	46ab      	mov	fp, r5
    1e2e:	2b38      	cmp	r3, #56	; 0x38
    1e30:	dd00      	ble.n	1e34 <__aeabi_dadd+0x554>
    1e32:	e0b0      	b.n	1f96 <__aeabi_dadd+0x6b6>
    1e34:	2b1f      	cmp	r3, #31
    1e36:	dd00      	ble.n	1e3a <__aeabi_dadd+0x55a>
    1e38:	e0db      	b.n	1ff2 <__aeabi_dadd+0x712>
    1e3a:	2520      	movs	r5, #32
    1e3c:	1aed      	subs	r5, r5, r3
    1e3e:	1c02      	adds	r2, r0, #0
    1e40:	465c      	mov	r4, fp
    1e42:	40ac      	lsls	r4, r5
    1e44:	40da      	lsrs	r2, r3
    1e46:	40a8      	lsls	r0, r5
    1e48:	1e45      	subs	r5, r0, #1
    1e4a:	41a8      	sbcs	r0, r5
    1e4c:	4322      	orrs	r2, r4
    1e4e:	4302      	orrs	r2, r0
    1e50:	4658      	mov	r0, fp
    1e52:	40d8      	lsrs	r0, r3
    1e54:	1c03      	adds	r3, r0, #0
    1e56:	4655      	mov	r5, sl
    1e58:	1954      	adds	r4, r2, r5
    1e5a:	4554      	cmp	r4, sl
    1e5c:	4192      	sbcs	r2, r2
    1e5e:	444b      	add	r3, r9
    1e60:	4250      	negs	r0, r2
    1e62:	181b      	adds	r3, r3, r0
    1e64:	e727      	b.n	1cb6 <__aeabi_dadd+0x3d6>
    1e66:	464a      	mov	r2, r9
    1e68:	4656      	mov	r6, sl
    1e6a:	4332      	orrs	r2, r6
    1e6c:	d100      	bne.n	1e70 <__aeabi_dadd+0x590>
    1e6e:	e085      	b.n	1f7c <__aeabi_dadd+0x69c>
    1e70:	1b85      	subs	r5, r0, r6
    1e72:	465b      	mov	r3, fp
    1e74:	464c      	mov	r4, r9
    1e76:	42a8      	cmp	r0, r5
    1e78:	4192      	sbcs	r2, r2
    1e7a:	1b19      	subs	r1, r3, r4
    1e7c:	4256      	negs	r6, r2
    1e7e:	1b8b      	subs	r3, r1, r6
    1e80:	021e      	lsls	r6, r3, #8
    1e82:	d400      	bmi.n	1e86 <__aeabi_dadd+0x5a6>
    1e84:	e0ad      	b.n	1fe2 <__aeabi_dadd+0x702>
    1e86:	4657      	mov	r7, sl
    1e88:	1a3d      	subs	r5, r7, r0
    1e8a:	465b      	mov	r3, fp
    1e8c:	45aa      	cmp	sl, r5
    1e8e:	4189      	sbcs	r1, r1
    1e90:	1ae4      	subs	r4, r4, r3
    1e92:	424a      	negs	r2, r1
    1e94:	1aa3      	subs	r3, r4, r2
    1e96:	4667      	mov	r7, ip
    1e98:	1c2c      	adds	r4, r5, #0
    1e9a:	2201      	movs	r2, #1
    1e9c:	2600      	movs	r6, #0
    1e9e:	e5ac      	b.n	19fa <__aeabi_dadd+0x11a>
    1ea0:	464d      	mov	r5, r9
    1ea2:	1c16      	adds	r6, r2, #0
    1ea4:	4315      	orrs	r5, r2
    1ea6:	d044      	beq.n	1f32 <__aeabi_dadd+0x652>
    1ea8:	465c      	mov	r4, fp
    1eaa:	2180      	movs	r1, #128	; 0x80
    1eac:	08c0      	lsrs	r0, r0, #3
    1eae:	0762      	lsls	r2, r4, #29
    1eb0:	08e3      	lsrs	r3, r4, #3
    1eb2:	030d      	lsls	r5, r1, #12
    1eb4:	4310      	orrs	r0, r2
    1eb6:	422b      	tst	r3, r5
    1eb8:	d100      	bne.n	1ebc <__aeabi_dadd+0x5dc>
    1eba:	e081      	b.n	1fc0 <__aeabi_dadd+0x6e0>
    1ebc:	464c      	mov	r4, r9
    1ebe:	08e1      	lsrs	r1, r4, #3
    1ec0:	4229      	tst	r1, r5
    1ec2:	d17d      	bne.n	1fc0 <__aeabi_dadd+0x6e0>
    1ec4:	08f7      	lsrs	r7, r6, #3
    1ec6:	0766      	lsls	r6, r4, #29
    1ec8:	433e      	orrs	r6, r7
    1eca:	1c0b      	adds	r3, r1, #0
    1ecc:	4667      	mov	r7, ip
    1ece:	0f70      	lsrs	r0, r6, #29
    1ed0:	00db      	lsls	r3, r3, #3
    1ed2:	2280      	movs	r2, #128	; 0x80
    1ed4:	00f4      	lsls	r4, r6, #3
    1ed6:	4303      	orrs	r3, r0
    1ed8:	0112      	lsls	r2, r2, #4
    1eda:	4e52      	ldr	r6, [pc, #328]	; (2024 <__aeabi_dadd+0x744>)
    1edc:	e58d      	b.n	19fa <__aeabi_dadd+0x11a>
    1ede:	4d51      	ldr	r5, [pc, #324]	; (2024 <__aeabi_dadd+0x744>)
    1ee0:	42ae      	cmp	r6, r5
    1ee2:	d000      	beq.n	1ee6 <__aeabi_dadd+0x606>
    1ee4:	e6ae      	b.n	1c44 <__aeabi_dadd+0x364>
    1ee6:	2080      	movs	r0, #128	; 0x80
    1ee8:	464b      	mov	r3, r9
    1eea:	4654      	mov	r4, sl
    1eec:	4667      	mov	r7, ip
    1eee:	0102      	lsls	r2, r0, #4
    1ef0:	e583      	b.n	19fa <__aeabi_dadd+0x11a>
    1ef2:	2e00      	cmp	r6, #0
    1ef4:	d05e      	beq.n	1fb4 <__aeabi_dadd+0x6d4>
    1ef6:	464c      	mov	r4, r9
    1ef8:	4314      	orrs	r4, r2
    1efa:	d01a      	beq.n	1f32 <__aeabi_dadd+0x652>
    1efc:	08c7      	lsrs	r7, r0, #3
    1efe:	2580      	movs	r5, #128	; 0x80
    1f00:	4658      	mov	r0, fp
    1f02:	0743      	lsls	r3, r0, #29
    1f04:	032c      	lsls	r4, r5, #12
    1f06:	08c0      	lsrs	r0, r0, #3
    1f08:	431f      	orrs	r7, r3
    1f0a:	4220      	tst	r0, r4
    1f0c:	d008      	beq.n	1f20 <__aeabi_dadd+0x640>
    1f0e:	464e      	mov	r6, r9
    1f10:	08f3      	lsrs	r3, r6, #3
    1f12:	4223      	tst	r3, r4
    1f14:	d104      	bne.n	1f20 <__aeabi_dadd+0x640>
    1f16:	4652      	mov	r2, sl
    1f18:	08d5      	lsrs	r5, r2, #3
    1f1a:	0777      	lsls	r7, r6, #29
    1f1c:	1c18      	adds	r0, r3, #0
    1f1e:	432f      	orrs	r7, r5
    1f20:	00c3      	lsls	r3, r0, #3
    1f22:	00fc      	lsls	r4, r7, #3
    1f24:	0f78      	lsrs	r0, r7, #29
    1f26:	1c0f      	adds	r7, r1, #0
    1f28:	2180      	movs	r1, #128	; 0x80
    1f2a:	4303      	orrs	r3, r0
    1f2c:	010a      	lsls	r2, r1, #4
    1f2e:	4e3d      	ldr	r6, [pc, #244]	; (2024 <__aeabi_dadd+0x744>)
    1f30:	e563      	b.n	19fa <__aeabi_dadd+0x11a>
    1f32:	2680      	movs	r6, #128	; 0x80
    1f34:	0132      	lsls	r2, r6, #4
    1f36:	465b      	mov	r3, fp
    1f38:	1c04      	adds	r4, r0, #0
    1f3a:	4e3a      	ldr	r6, [pc, #232]	; (2024 <__aeabi_dadd+0x744>)
    1f3c:	e55d      	b.n	19fa <__aeabi_dadd+0x11a>
    1f3e:	2200      	movs	r2, #0
    1f40:	e729      	b.n	1d96 <__aeabi_dadd+0x4b6>
    1f42:	1c39      	adds	r1, r7, #0
    1f44:	3920      	subs	r1, #32
    1f46:	465c      	mov	r4, fp
    1f48:	40cc      	lsrs	r4, r1
    1f4a:	1c22      	adds	r2, r4, #0
    1f4c:	2f20      	cmp	r7, #32
    1f4e:	d067      	beq.n	2020 <__aeabi_dadd+0x740>
    1f50:	2340      	movs	r3, #64	; 0x40
    1f52:	1bdf      	subs	r7, r3, r7
    1f54:	465d      	mov	r5, fp
    1f56:	40bd      	lsls	r5, r7
    1f58:	4328      	orrs	r0, r5
    1f5a:	1e43      	subs	r3, r0, #1
    1f5c:	4198      	sbcs	r0, r3
    1f5e:	4310      	orrs	r0, r2
    1f60:	2300      	movs	r3, #0
    1f62:	e682      	b.n	1c6a <__aeabi_dadd+0x38a>
    1f64:	3b01      	subs	r3, #1
    1f66:	2b00      	cmp	r3, #0
    1f68:	d12c      	bne.n	1fc4 <__aeabi_dadd+0x6e4>
    1f6a:	4450      	add	r0, sl
    1f6c:	465c      	mov	r4, fp
    1f6e:	4290      	cmp	r0, r2
    1f70:	41ad      	sbcs	r5, r5
    1f72:	444c      	add	r4, r9
    1f74:	426a      	negs	r2, r5
    1f76:	18a3      	adds	r3, r4, r2
    1f78:	1c04      	adds	r4, r0, #0
    1f7a:	e69c      	b.n	1cb6 <__aeabi_dadd+0x3d6>
    1f7c:	465b      	mov	r3, fp
    1f7e:	1c04      	adds	r4, r0, #0
    1f80:	2201      	movs	r2, #1
    1f82:	2600      	movs	r6, #0
    1f84:	e539      	b.n	19fa <__aeabi_dadd+0x11a>
    1f86:	2480      	movs	r4, #128	; 0x80
    1f88:	2104      	movs	r1, #4
    1f8a:	2700      	movs	r7, #0
    1f8c:	0122      	lsls	r2, r4, #4
    1f8e:	4b27      	ldr	r3, [pc, #156]	; (202c <__aeabi_dadd+0x74c>)
    1f90:	4248      	negs	r0, r1
    1f92:	4e24      	ldr	r6, [pc, #144]	; (2024 <__aeabi_dadd+0x744>)
    1f94:	e549      	b.n	1a2a <__aeabi_dadd+0x14a>
    1f96:	465d      	mov	r5, fp
    1f98:	4305      	orrs	r5, r0
    1f9a:	2300      	movs	r3, #0
    1f9c:	2200      	movs	r2, #0
    1f9e:	2d00      	cmp	r5, #0
    1fa0:	d100      	bne.n	1fa4 <__aeabi_dadd+0x6c4>
    1fa2:	e758      	b.n	1e56 <__aeabi_dadd+0x576>
    1fa4:	2201      	movs	r2, #1
    1fa6:	e756      	b.n	1e56 <__aeabi_dadd+0x576>
    1fa8:	1c14      	adds	r4, r2, #0
    1faa:	464b      	mov	r3, r9
    1fac:	1c0f      	adds	r7, r1, #0
    1fae:	2201      	movs	r2, #1
    1fb0:	2600      	movs	r6, #0
    1fb2:	e522      	b.n	19fa <__aeabi_dadd+0x11a>
    1fb4:	1c14      	adds	r4, r2, #0
    1fb6:	2280      	movs	r2, #128	; 0x80
    1fb8:	464b      	mov	r3, r9
    1fba:	0112      	lsls	r2, r2, #4
    1fbc:	4e19      	ldr	r6, [pc, #100]	; (2024 <__aeabi_dadd+0x744>)
    1fbe:	e51c      	b.n	19fa <__aeabi_dadd+0x11a>
    1fc0:	1c06      	adds	r6, r0, #0
    1fc2:	e784      	b.n	1ece <__aeabi_dadd+0x5ee>
    1fc4:	4a17      	ldr	r2, [pc, #92]	; (2024 <__aeabi_dadd+0x744>)
    1fc6:	4296      	cmp	r6, r2
    1fc8:	d000      	beq.n	1fcc <__aeabi_dadd+0x6ec>
    1fca:	e730      	b.n	1e2e <__aeabi_dadd+0x54e>
    1fcc:	1c0f      	adds	r7, r1, #0
    1fce:	2180      	movs	r1, #128	; 0x80
    1fd0:	464b      	mov	r3, r9
    1fd2:	4654      	mov	r4, sl
    1fd4:	010a      	lsls	r2, r1, #4
    1fd6:	e510      	b.n	19fa <__aeabi_dadd+0x11a>
    1fd8:	0574      	lsls	r4, r6, #21
    1fda:	0d66      	lsrs	r6, r4, #21
    1fdc:	2300      	movs	r3, #0
    1fde:	2400      	movs	r4, #0
    1fe0:	e52f      	b.n	1a42 <__aeabi_dadd+0x162>
    1fe2:	1c18      	adds	r0, r3, #0
    1fe4:	4328      	orrs	r0, r5
    1fe6:	d100      	bne.n	1fea <__aeabi_dadd+0x70a>
    1fe8:	e64c      	b.n	1c84 <__aeabi_dadd+0x3a4>
    1fea:	1c2c      	adds	r4, r5, #0
    1fec:	2201      	movs	r2, #1
    1fee:	2600      	movs	r6, #0
    1ff0:	e503      	b.n	19fa <__aeabi_dadd+0x11a>
    1ff2:	1c1c      	adds	r4, r3, #0
    1ff4:	3c20      	subs	r4, #32
    1ff6:	465d      	mov	r5, fp
    1ff8:	40e5      	lsrs	r5, r4
    1ffa:	1c2c      	adds	r4, r5, #0
    1ffc:	2b20      	cmp	r3, #32
    1ffe:	d01c      	beq.n	203a <__aeabi_dadd+0x75a>
    2000:	2240      	movs	r2, #64	; 0x40
    2002:	1ad3      	subs	r3, r2, r3
    2004:	465a      	mov	r2, fp
    2006:	409a      	lsls	r2, r3
    2008:	4302      	orrs	r2, r0
    200a:	1e50      	subs	r0, r2, #1
    200c:	4182      	sbcs	r2, r0
    200e:	4322      	orrs	r2, r4
    2010:	2300      	movs	r3, #0
    2012:	e720      	b.n	1e56 <__aeabi_dadd+0x576>
    2014:	465b      	mov	r3, fp
    2016:	1c04      	adds	r4, r0, #0
    2018:	1c0f      	adds	r7, r1, #0
    201a:	2201      	movs	r2, #1
    201c:	2600      	movs	r6, #0
    201e:	e4ec      	b.n	19fa <__aeabi_dadd+0x11a>
    2020:	2500      	movs	r5, #0
    2022:	e799      	b.n	1f58 <__aeabi_dadd+0x678>
    2024:	000007ff 	.word	0x000007ff
    2028:	ff7fffff 	.word	0xff7fffff
    202c:	007fffff 	.word	0x007fffff
    2030:	1c2c      	adds	r4, r5, #0
    2032:	1c0f      	adds	r7, r1, #0
    2034:	2201      	movs	r2, #1
    2036:	2600      	movs	r6, #0
    2038:	e4df      	b.n	19fa <__aeabi_dadd+0x11a>
    203a:	2200      	movs	r2, #0
    203c:	e7e4      	b.n	2008 <__aeabi_dadd+0x728>
    203e:	46c0      	nop			; (mov r8, r8)

00002040 <__aeabi_ddiv>:
    2040:	b5f0      	push	{r4, r5, r6, r7, lr}
    2042:	464d      	mov	r5, r9
    2044:	4644      	mov	r4, r8
    2046:	465f      	mov	r7, fp
    2048:	4656      	mov	r6, sl
    204a:	b4f0      	push	{r4, r5, r6, r7}
    204c:	1c1d      	adds	r5, r3, #0
    204e:	004b      	lsls	r3, r1, #1
    2050:	1c14      	adds	r4, r2, #0
    2052:	030e      	lsls	r6, r1, #12
    2054:	0d5b      	lsrs	r3, r3, #21
    2056:	0fca      	lsrs	r2, r1, #31
    2058:	b087      	sub	sp, #28
    205a:	1c07      	adds	r7, r0, #0
    205c:	0b36      	lsrs	r6, r6, #12
    205e:	4698      	mov	r8, r3
    2060:	4691      	mov	r9, r2
    2062:	2b00      	cmp	r3, #0
    2064:	d11d      	bne.n	20a2 <__aeabi_ddiv+0x62>
    2066:	1c32      	adds	r2, r6, #0
    2068:	4302      	orrs	r2, r0
    206a:	d100      	bne.n	206e <__aeabi_ddiv+0x2e>
    206c:	e181      	b.n	2372 <__aeabi_ddiv+0x332>
    206e:	2e00      	cmp	r6, #0
    2070:	d100      	bne.n	2074 <__aeabi_ddiv+0x34>
    2072:	e204      	b.n	247e <__aeabi_ddiv+0x43e>
    2074:	1c30      	adds	r0, r6, #0
    2076:	f001 fa71 	bl	355c <__clzsi2>
    207a:	2827      	cmp	r0, #39	; 0x27
    207c:	dd00      	ble.n	2080 <__aeabi_ddiv+0x40>
    207e:	e1f8      	b.n	2472 <__aeabi_ddiv+0x432>
    2080:	2128      	movs	r1, #40	; 0x28
    2082:	1c03      	adds	r3, r0, #0
    2084:	3b08      	subs	r3, #8
    2086:	1a0a      	subs	r2, r1, r0
    2088:	1c39      	adds	r1, r7, #0
    208a:	409e      	lsls	r6, r3
    208c:	40d1      	lsrs	r1, r2
    208e:	430e      	orrs	r6, r1
    2090:	409f      	lsls	r7, r3
    2092:	4bc1      	ldr	r3, [pc, #772]	; (2398 <__aeabi_ddiv+0x358>)
    2094:	2100      	movs	r1, #0
    2096:	1a18      	subs	r0, r3, r0
    2098:	2200      	movs	r2, #0
    209a:	4680      	mov	r8, r0
    209c:	468a      	mov	sl, r1
    209e:	9200      	str	r2, [sp, #0]
    20a0:	e00f      	b.n	20c2 <__aeabi_ddiv+0x82>
    20a2:	48be      	ldr	r0, [pc, #760]	; (239c <__aeabi_ddiv+0x35c>)
    20a4:	4283      	cmp	r3, r0
    20a6:	d031      	beq.n	210c <__aeabi_ddiv+0xcc>
    20a8:	2180      	movs	r1, #128	; 0x80
    20aa:	034b      	lsls	r3, r1, #13
    20ac:	431e      	orrs	r6, r3
    20ae:	48bc      	ldr	r0, [pc, #752]	; (23a0 <__aeabi_ddiv+0x360>)
    20b0:	0f7a      	lsrs	r2, r7, #29
    20b2:	00f6      	lsls	r6, r6, #3
    20b4:	2100      	movs	r1, #0
    20b6:	2300      	movs	r3, #0
    20b8:	4316      	orrs	r6, r2
    20ba:	00ff      	lsls	r7, r7, #3
    20bc:	4480      	add	r8, r0
    20be:	468a      	mov	sl, r1
    20c0:	9300      	str	r3, [sp, #0]
    20c2:	1c29      	adds	r1, r5, #0
    20c4:	1c20      	adds	r0, r4, #0
    20c6:	1c25      	adds	r5, r4, #0
    20c8:	004a      	lsls	r2, r1, #1
    20ca:	030c      	lsls	r4, r1, #12
    20cc:	0fcb      	lsrs	r3, r1, #31
    20ce:	0b24      	lsrs	r4, r4, #12
    20d0:	0d52      	lsrs	r2, r2, #21
    20d2:	469b      	mov	fp, r3
    20d4:	d125      	bne.n	2122 <__aeabi_ddiv+0xe2>
    20d6:	1c21      	adds	r1, r4, #0
    20d8:	4301      	orrs	r1, r0
    20da:	d100      	bne.n	20de <__aeabi_ddiv+0x9e>
    20dc:	e150      	b.n	2380 <__aeabi_ddiv+0x340>
    20de:	2c00      	cmp	r4, #0
    20e0:	d100      	bne.n	20e4 <__aeabi_ddiv+0xa4>
    20e2:	e1c2      	b.n	246a <__aeabi_ddiv+0x42a>
    20e4:	1c20      	adds	r0, r4, #0
    20e6:	f001 fa39 	bl	355c <__clzsi2>
    20ea:	2827      	cmp	r0, #39	; 0x27
    20ec:	dd00      	ble.n	20f0 <__aeabi_ddiv+0xb0>
    20ee:	e1b6      	b.n	245e <__aeabi_ddiv+0x41e>
    20f0:	1c03      	adds	r3, r0, #0
    20f2:	2228      	movs	r2, #40	; 0x28
    20f4:	3b08      	subs	r3, #8
    20f6:	1c29      	adds	r1, r5, #0
    20f8:	1a12      	subs	r2, r2, r0
    20fa:	409c      	lsls	r4, r3
    20fc:	40d1      	lsrs	r1, r2
    20fe:	430c      	orrs	r4, r1
    2100:	409d      	lsls	r5, r3
    2102:	4ba5      	ldr	r3, [pc, #660]	; (2398 <__aeabi_ddiv+0x358>)
    2104:	1a1a      	subs	r2, r3, r0
    2106:	2000      	movs	r0, #0
    2108:	9002      	str	r0, [sp, #8]
    210a:	e019      	b.n	2140 <__aeabi_ddiv+0x100>
    210c:	1c32      	adds	r2, r6, #0
    210e:	433a      	orrs	r2, r7
    2110:	d000      	beq.n	2114 <__aeabi_ddiv+0xd4>
    2112:	e129      	b.n	2368 <__aeabi_ddiv+0x328>
    2114:	2708      	movs	r7, #8
    2116:	2302      	movs	r3, #2
    2118:	46ba      	mov	sl, r7
    211a:	2600      	movs	r6, #0
    211c:	2700      	movs	r7, #0
    211e:	9300      	str	r3, [sp, #0]
    2120:	e7cf      	b.n	20c2 <__aeabi_ddiv+0x82>
    2122:	489e      	ldr	r0, [pc, #632]	; (239c <__aeabi_ddiv+0x35c>)
    2124:	4282      	cmp	r2, r0
    2126:	d100      	bne.n	212a <__aeabi_ddiv+0xea>
    2128:	e113      	b.n	2352 <__aeabi_ddiv+0x312>
    212a:	2180      	movs	r1, #128	; 0x80
    212c:	034b      	lsls	r3, r1, #13
    212e:	431c      	orrs	r4, r3
    2130:	499b      	ldr	r1, [pc, #620]	; (23a0 <__aeabi_ddiv+0x360>)
    2132:	0f68      	lsrs	r0, r5, #29
    2134:	00e4      	lsls	r4, r4, #3
    2136:	2300      	movs	r3, #0
    2138:	4304      	orrs	r4, r0
    213a:	00ed      	lsls	r5, r5, #3
    213c:	1852      	adds	r2, r2, r1
    213e:	9302      	str	r3, [sp, #8]
    2140:	4648      	mov	r0, r9
    2142:	465b      	mov	r3, fp
    2144:	4043      	eors	r3, r0
    2146:	9802      	ldr	r0, [sp, #8]
    2148:	4651      	mov	r1, sl
    214a:	9301      	str	r3, [sp, #4]
    214c:	4301      	orrs	r1, r0
    214e:	290f      	cmp	r1, #15
    2150:	d800      	bhi.n	2154 <__aeabi_ddiv+0x114>
    2152:	e0df      	b.n	2314 <__aeabi_ddiv+0x2d4>
    2154:	4643      	mov	r3, r8
    2156:	1a9a      	subs	r2, r3, r2
    2158:	9204      	str	r2, [sp, #16]
    215a:	42a6      	cmp	r6, r4
    215c:	d800      	bhi.n	2160 <__aeabi_ddiv+0x120>
    215e:	e16e      	b.n	243e <__aeabi_ddiv+0x3fe>
    2160:	0871      	lsrs	r1, r6, #1
    2162:	087b      	lsrs	r3, r7, #1
    2164:	07f6      	lsls	r6, r6, #31
    2166:	4333      	orrs	r3, r6
    2168:	07fa      	lsls	r2, r7, #31
    216a:	4689      	mov	r9, r1
    216c:	4698      	mov	r8, r3
    216e:	9202      	str	r2, [sp, #8]
    2170:	0e28      	lsrs	r0, r5, #24
    2172:	0224      	lsls	r4, r4, #8
    2174:	4304      	orrs	r4, r0
    2176:	022d      	lsls	r5, r5, #8
    2178:	0427      	lsls	r7, r4, #16
    217a:	0c39      	lsrs	r1, r7, #16
    217c:	46ab      	mov	fp, r5
    217e:	0c25      	lsrs	r5, r4, #16
    2180:	9100      	str	r1, [sp, #0]
    2182:	4648      	mov	r0, r9
    2184:	1c29      	adds	r1, r5, #0
    2186:	f7ff fafd 	bl	1784 <__aeabi_uidiv>
    218a:	9f00      	ldr	r7, [sp, #0]
    218c:	1c06      	adds	r6, r0, #0
    218e:	4347      	muls	r7, r0
    2190:	1c29      	adds	r1, r5, #0
    2192:	4648      	mov	r0, r9
    2194:	f7ff fb3a 	bl	180c <__aeabi_uidivmod>
    2198:	4643      	mov	r3, r8
    219a:	0408      	lsls	r0, r1, #16
    219c:	0c1a      	lsrs	r2, r3, #16
    219e:	4310      	orrs	r0, r2
    21a0:	4287      	cmp	r7, r0
    21a2:	d907      	bls.n	21b4 <__aeabi_ddiv+0x174>
    21a4:	1900      	adds	r0, r0, r4
    21a6:	3e01      	subs	r6, #1
    21a8:	4284      	cmp	r4, r0
    21aa:	d803      	bhi.n	21b4 <__aeabi_ddiv+0x174>
    21ac:	4287      	cmp	r7, r0
    21ae:	d901      	bls.n	21b4 <__aeabi_ddiv+0x174>
    21b0:	3e01      	subs	r6, #1
    21b2:	1900      	adds	r0, r0, r4
    21b4:	1bc1      	subs	r1, r0, r7
    21b6:	468a      	mov	sl, r1
    21b8:	1c08      	adds	r0, r1, #0
    21ba:	1c29      	adds	r1, r5, #0
    21bc:	f7ff fae2 	bl	1784 <__aeabi_uidiv>
    21c0:	9b00      	ldr	r3, [sp, #0]
    21c2:	1c07      	adds	r7, r0, #0
    21c4:	4343      	muls	r3, r0
    21c6:	1c29      	adds	r1, r5, #0
    21c8:	4650      	mov	r0, sl
    21ca:	4699      	mov	r9, r3
    21cc:	f7ff fb1e 	bl	180c <__aeabi_uidivmod>
    21d0:	4642      	mov	r2, r8
    21d2:	0410      	lsls	r0, r2, #16
    21d4:	040b      	lsls	r3, r1, #16
    21d6:	0c01      	lsrs	r1, r0, #16
    21d8:	430b      	orrs	r3, r1
    21da:	4599      	cmp	r9, r3
    21dc:	d904      	bls.n	21e8 <__aeabi_ddiv+0x1a8>
    21de:	191b      	adds	r3, r3, r4
    21e0:	3f01      	subs	r7, #1
    21e2:	429c      	cmp	r4, r3
    21e4:	d800      	bhi.n	21e8 <__aeabi_ddiv+0x1a8>
    21e6:	e164      	b.n	24b2 <__aeabi_ddiv+0x472>
    21e8:	0436      	lsls	r6, r6, #16
    21ea:	433e      	orrs	r6, r7
    21ec:	465f      	mov	r7, fp
    21ee:	464a      	mov	r2, r9
    21f0:	0c39      	lsrs	r1, r7, #16
    21f2:	4689      	mov	r9, r1
    21f4:	1a9b      	subs	r3, r3, r2
    21f6:	4659      	mov	r1, fp
    21f8:	0432      	lsls	r2, r6, #16
    21fa:	0c17      	lsrs	r7, r2, #16
    21fc:	040a      	lsls	r2, r1, #16
    21fe:	4649      	mov	r1, r9
    2200:	4379      	muls	r1, r7
    2202:	0c12      	lsrs	r2, r2, #16
    2204:	9203      	str	r2, [sp, #12]
    2206:	468c      	mov	ip, r1
    2208:	9903      	ldr	r1, [sp, #12]
    220a:	0c30      	lsrs	r0, r6, #16
    220c:	437a      	muls	r2, r7
    220e:	4341      	muls	r1, r0
    2210:	464f      	mov	r7, r9
    2212:	4378      	muls	r0, r7
    2214:	448c      	add	ip, r1
    2216:	0c17      	lsrs	r7, r2, #16
    2218:	4467      	add	r7, ip
    221a:	42b9      	cmp	r1, r7
    221c:	d902      	bls.n	2224 <__aeabi_ddiv+0x1e4>
    221e:	2180      	movs	r1, #128	; 0x80
    2220:	0249      	lsls	r1, r1, #9
    2222:	1840      	adds	r0, r0, r1
    2224:	0c39      	lsrs	r1, r7, #16
    2226:	0412      	lsls	r2, r2, #16
    2228:	1840      	adds	r0, r0, r1
    222a:	043f      	lsls	r7, r7, #16
    222c:	0c11      	lsrs	r1, r2, #16
    222e:	187f      	adds	r7, r7, r1
    2230:	4283      	cmp	r3, r0
    2232:	d200      	bcs.n	2236 <__aeabi_ddiv+0x1f6>
    2234:	e127      	b.n	2486 <__aeabi_ddiv+0x446>
    2236:	d100      	bne.n	223a <__aeabi_ddiv+0x1fa>
    2238:	e141      	b.n	24be <__aeabi_ddiv+0x47e>
    223a:	9902      	ldr	r1, [sp, #8]
    223c:	1a1b      	subs	r3, r3, r0
    223e:	1bcf      	subs	r7, r1, r7
    2240:	42b9      	cmp	r1, r7
    2242:	4180      	sbcs	r0, r0
    2244:	4241      	negs	r1, r0
    2246:	1a5a      	subs	r2, r3, r1
    2248:	4690      	mov	r8, r2
    224a:	42a2      	cmp	r2, r4
    224c:	d100      	bne.n	2250 <__aeabi_ddiv+0x210>
    224e:	e15f      	b.n	2510 <__aeabi_ddiv+0x4d0>
    2250:	1c10      	adds	r0, r2, #0
    2252:	1c29      	adds	r1, r5, #0
    2254:	f7ff fa96 	bl	1784 <__aeabi_uidiv>
    2258:	9b00      	ldr	r3, [sp, #0]
    225a:	9002      	str	r0, [sp, #8]
    225c:	4343      	muls	r3, r0
    225e:	1c29      	adds	r1, r5, #0
    2260:	4640      	mov	r0, r8
    2262:	469a      	mov	sl, r3
    2264:	f7ff fad2 	bl	180c <__aeabi_uidivmod>
    2268:	0c38      	lsrs	r0, r7, #16
    226a:	0409      	lsls	r1, r1, #16
    226c:	4301      	orrs	r1, r0
    226e:	458a      	cmp	sl, r1
    2270:	d90a      	bls.n	2288 <__aeabi_ddiv+0x248>
    2272:	9a02      	ldr	r2, [sp, #8]
    2274:	1909      	adds	r1, r1, r4
    2276:	3a01      	subs	r2, #1
    2278:	9202      	str	r2, [sp, #8]
    227a:	428c      	cmp	r4, r1
    227c:	d804      	bhi.n	2288 <__aeabi_ddiv+0x248>
    227e:	458a      	cmp	sl, r1
    2280:	d902      	bls.n	2288 <__aeabi_ddiv+0x248>
    2282:	3a01      	subs	r2, #1
    2284:	9202      	str	r2, [sp, #8]
    2286:	1909      	adds	r1, r1, r4
    2288:	4653      	mov	r3, sl
    228a:	1ac8      	subs	r0, r1, r3
    228c:	1c29      	adds	r1, r5, #0
    228e:	9005      	str	r0, [sp, #20]
    2290:	f7ff fa78 	bl	1784 <__aeabi_uidiv>
    2294:	9a00      	ldr	r2, [sp, #0]
    2296:	1c29      	adds	r1, r5, #0
    2298:	4342      	muls	r2, r0
    229a:	4680      	mov	r8, r0
    229c:	9805      	ldr	r0, [sp, #20]
    229e:	4692      	mov	sl, r2
    22a0:	f7ff fab4 	bl	180c <__aeabi_uidivmod>
    22a4:	043f      	lsls	r7, r7, #16
    22a6:	040d      	lsls	r5, r1, #16
    22a8:	0c3a      	lsrs	r2, r7, #16
    22aa:	432a      	orrs	r2, r5
    22ac:	4592      	cmp	sl, r2
    22ae:	d909      	bls.n	22c4 <__aeabi_ddiv+0x284>
    22b0:	2101      	movs	r1, #1
    22b2:	424b      	negs	r3, r1
    22b4:	1912      	adds	r2, r2, r4
    22b6:	4498      	add	r8, r3
    22b8:	4294      	cmp	r4, r2
    22ba:	d803      	bhi.n	22c4 <__aeabi_ddiv+0x284>
    22bc:	4592      	cmp	sl, r2
    22be:	d901      	bls.n	22c4 <__aeabi_ddiv+0x284>
    22c0:	4498      	add	r8, r3
    22c2:	1912      	adds	r2, r2, r4
    22c4:	9d02      	ldr	r5, [sp, #8]
    22c6:	4643      	mov	r3, r8
    22c8:	042f      	lsls	r7, r5, #16
    22ca:	431f      	orrs	r7, r3
    22cc:	4650      	mov	r0, sl
    22ce:	1a11      	subs	r1, r2, r0
    22d0:	0438      	lsls	r0, r7, #16
    22d2:	0c03      	lsrs	r3, r0, #16
    22d4:	464d      	mov	r5, r9
    22d6:	435d      	muls	r5, r3
    22d8:	9803      	ldr	r0, [sp, #12]
    22da:	46ac      	mov	ip, r5
    22dc:	9d03      	ldr	r5, [sp, #12]
    22de:	0c3a      	lsrs	r2, r7, #16
    22e0:	4358      	muls	r0, r3
    22e2:	4355      	muls	r5, r2
    22e4:	464b      	mov	r3, r9
    22e6:	435a      	muls	r2, r3
    22e8:	44ac      	add	ip, r5
    22ea:	0c03      	lsrs	r3, r0, #16
    22ec:	4463      	add	r3, ip
    22ee:	429d      	cmp	r5, r3
    22f0:	d902      	bls.n	22f8 <__aeabi_ddiv+0x2b8>
    22f2:	2580      	movs	r5, #128	; 0x80
    22f4:	026d      	lsls	r5, r5, #9
    22f6:	1952      	adds	r2, r2, r5
    22f8:	0c1d      	lsrs	r5, r3, #16
    22fa:	0400      	lsls	r0, r0, #16
    22fc:	1952      	adds	r2, r2, r5
    22fe:	041b      	lsls	r3, r3, #16
    2300:	0c05      	lsrs	r5, r0, #16
    2302:	195b      	adds	r3, r3, r5
    2304:	4291      	cmp	r1, r2
    2306:	d200      	bcs.n	230a <__aeabi_ddiv+0x2ca>
    2308:	e0e6      	b.n	24d8 <__aeabi_ddiv+0x498>
    230a:	d100      	bne.n	230e <__aeabi_ddiv+0x2ce>
    230c:	e13d      	b.n	258a <__aeabi_ddiv+0x54a>
    230e:	2201      	movs	r2, #1
    2310:	4317      	orrs	r7, r2
    2312:	e05a      	b.n	23ca <__aeabi_ddiv+0x38a>
    2314:	0089      	lsls	r1, r1, #2
    2316:	4823      	ldr	r0, [pc, #140]	; (23a4 <__aeabi_ddiv+0x364>)
    2318:	468c      	mov	ip, r1
    231a:	4460      	add	r0, ip
    231c:	6801      	ldr	r1, [r0, #0]
    231e:	468f      	mov	pc, r1
    2320:	9b01      	ldr	r3, [sp, #4]
    2322:	4a1e      	ldr	r2, [pc, #120]	; (239c <__aeabi_ddiv+0x35c>)
    2324:	2600      	movs	r6, #0
    2326:	2700      	movs	r7, #0
    2328:	2000      	movs	r0, #0
    232a:	2100      	movs	r1, #0
    232c:	1c38      	adds	r0, r7, #0
    232e:	0d0f      	lsrs	r7, r1, #20
    2330:	053c      	lsls	r4, r7, #20
    2332:	4d1d      	ldr	r5, [pc, #116]	; (23a8 <__aeabi_ddiv+0x368>)
    2334:	4334      	orrs	r4, r6
    2336:	0512      	lsls	r2, r2, #20
    2338:	4025      	ands	r5, r4
    233a:	4315      	orrs	r5, r2
    233c:	006e      	lsls	r6, r5, #1
    233e:	07db      	lsls	r3, r3, #31
    2340:	0871      	lsrs	r1, r6, #1
    2342:	4319      	orrs	r1, r3
    2344:	b007      	add	sp, #28
    2346:	bc3c      	pop	{r2, r3, r4, r5}
    2348:	4690      	mov	r8, r2
    234a:	4699      	mov	r9, r3
    234c:	46a2      	mov	sl, r4
    234e:	46ab      	mov	fp, r5
    2350:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2352:	1c21      	adds	r1, r4, #0
    2354:	2003      	movs	r0, #3
    2356:	4329      	orrs	r1, r5
    2358:	9002      	str	r0, [sp, #8]
    235a:	d000      	beq.n	235e <__aeabi_ddiv+0x31e>
    235c:	e6f0      	b.n	2140 <__aeabi_ddiv+0x100>
    235e:	2302      	movs	r3, #2
    2360:	2400      	movs	r4, #0
    2362:	2500      	movs	r5, #0
    2364:	9302      	str	r3, [sp, #8]
    2366:	e6eb      	b.n	2140 <__aeabi_ddiv+0x100>
    2368:	200c      	movs	r0, #12
    236a:	2103      	movs	r1, #3
    236c:	4682      	mov	sl, r0
    236e:	9100      	str	r1, [sp, #0]
    2370:	e6a7      	b.n	20c2 <__aeabi_ddiv+0x82>
    2372:	2704      	movs	r7, #4
    2374:	2301      	movs	r3, #1
    2376:	46ba      	mov	sl, r7
    2378:	2600      	movs	r6, #0
    237a:	2700      	movs	r7, #0
    237c:	9300      	str	r3, [sp, #0]
    237e:	e6a0      	b.n	20c2 <__aeabi_ddiv+0x82>
    2380:	2101      	movs	r1, #1
    2382:	2400      	movs	r4, #0
    2384:	2500      	movs	r5, #0
    2386:	9102      	str	r1, [sp, #8]
    2388:	e6da      	b.n	2140 <__aeabi_ddiv+0x100>
    238a:	2701      	movs	r7, #1
    238c:	2300      	movs	r3, #0
    238e:	4e07      	ldr	r6, [pc, #28]	; (23ac <__aeabi_ddiv+0x36c>)
    2390:	427f      	negs	r7, r7
    2392:	4a02      	ldr	r2, [pc, #8]	; (239c <__aeabi_ddiv+0x35c>)
    2394:	e7c8      	b.n	2328 <__aeabi_ddiv+0x2e8>
    2396:	46c0      	nop			; (mov r8, r8)
    2398:	fffffc0d 	.word	0xfffffc0d
    239c:	000007ff 	.word	0x000007ff
    23a0:	fffffc01 	.word	0xfffffc01
    23a4:	00003710 	.word	0x00003710
    23a8:	800fffff 	.word	0x800fffff
    23ac:	000fffff 	.word	0x000fffff
    23b0:	1c2f      	adds	r7, r5, #0
    23b2:	465a      	mov	r2, fp
    23b4:	9d02      	ldr	r5, [sp, #8]
    23b6:	1c26      	adds	r6, r4, #0
    23b8:	9201      	str	r2, [sp, #4]
    23ba:	2d02      	cmp	r5, #2
    23bc:	d0b0      	beq.n	2320 <__aeabi_ddiv+0x2e0>
    23be:	2d03      	cmp	r5, #3
    23c0:	d100      	bne.n	23c4 <__aeabi_ddiv+0x384>
    23c2:	e101      	b.n	25c8 <__aeabi_ddiv+0x588>
    23c4:	2d01      	cmp	r5, #1
    23c6:	d100      	bne.n	23ca <__aeabi_ddiv+0x38a>
    23c8:	e09c      	b.n	2504 <__aeabi_ddiv+0x4c4>
    23ca:	9b04      	ldr	r3, [sp, #16]
    23cc:	4882      	ldr	r0, [pc, #520]	; (25d8 <__aeabi_ddiv+0x598>)
    23ce:	181a      	adds	r2, r3, r0
    23d0:	2a00      	cmp	r2, #0
    23d2:	dc00      	bgt.n	23d6 <__aeabi_ddiv+0x396>
    23d4:	e08c      	b.n	24f0 <__aeabi_ddiv+0x4b0>
    23d6:	240f      	movs	r4, #15
    23d8:	403c      	ands	r4, r7
    23da:	2c04      	cmp	r4, #4
    23dc:	d005      	beq.n	23ea <__aeabi_ddiv+0x3aa>
    23de:	1d3b      	adds	r3, r7, #4
    23e0:	42bb      	cmp	r3, r7
    23e2:	41bf      	sbcs	r7, r7
    23e4:	427d      	negs	r5, r7
    23e6:	1976      	adds	r6, r6, r5
    23e8:	1c1f      	adds	r7, r3, #0
    23ea:	01f1      	lsls	r1, r6, #7
    23ec:	d505      	bpl.n	23fa <__aeabi_ddiv+0x3ba>
    23ee:	4a7b      	ldr	r2, [pc, #492]	; (25dc <__aeabi_ddiv+0x59c>)
    23f0:	9904      	ldr	r1, [sp, #16]
    23f2:	2080      	movs	r0, #128	; 0x80
    23f4:	00c4      	lsls	r4, r0, #3
    23f6:	4016      	ands	r6, r2
    23f8:	190a      	adds	r2, r1, r4
    23fa:	4b79      	ldr	r3, [pc, #484]	; (25e0 <__aeabi_ddiv+0x5a0>)
    23fc:	429a      	cmp	r2, r3
    23fe:	dd00      	ble.n	2402 <__aeabi_ddiv+0x3c2>
    2400:	e78e      	b.n	2320 <__aeabi_ddiv+0x2e0>
    2402:	0775      	lsls	r5, r6, #29
    2404:	08ff      	lsrs	r7, r7, #3
    2406:	0276      	lsls	r6, r6, #9
    2408:	0551      	lsls	r1, r2, #21
    240a:	432f      	orrs	r7, r5
    240c:	0b36      	lsrs	r6, r6, #12
    240e:	0d4a      	lsrs	r2, r1, #21
    2410:	9b01      	ldr	r3, [sp, #4]
    2412:	e789      	b.n	2328 <__aeabi_ddiv+0x2e8>
    2414:	2200      	movs	r2, #0
    2416:	2600      	movs	r6, #0
    2418:	2700      	movs	r7, #0
    241a:	e785      	b.n	2328 <__aeabi_ddiv+0x2e8>
    241c:	2080      	movs	r0, #128	; 0x80
    241e:	0301      	lsls	r1, r0, #12
    2420:	420e      	tst	r6, r1
    2422:	d016      	beq.n	2452 <__aeabi_ddiv+0x412>
    2424:	420c      	tst	r4, r1
    2426:	d114      	bne.n	2452 <__aeabi_ddiv+0x412>
    2428:	430c      	orrs	r4, r1
    242a:	0326      	lsls	r6, r4, #12
    242c:	0b36      	lsrs	r6, r6, #12
    242e:	465b      	mov	r3, fp
    2430:	1c2f      	adds	r7, r5, #0
    2432:	4a6c      	ldr	r2, [pc, #432]	; (25e4 <__aeabi_ddiv+0x5a4>)
    2434:	e778      	b.n	2328 <__aeabi_ddiv+0x2e8>
    2436:	464c      	mov	r4, r9
    2438:	9401      	str	r4, [sp, #4]
    243a:	9d00      	ldr	r5, [sp, #0]
    243c:	e7bd      	b.n	23ba <__aeabi_ddiv+0x37a>
    243e:	42a6      	cmp	r6, r4
    2440:	d043      	beq.n	24ca <__aeabi_ddiv+0x48a>
    2442:	9804      	ldr	r0, [sp, #16]
    2444:	46b8      	mov	r8, r7
    2446:	3801      	subs	r0, #1
    2448:	2700      	movs	r7, #0
    244a:	9004      	str	r0, [sp, #16]
    244c:	46b1      	mov	r9, r6
    244e:	9702      	str	r7, [sp, #8]
    2450:	e68e      	b.n	2170 <__aeabi_ddiv+0x130>
    2452:	430e      	orrs	r6, r1
    2454:	0333      	lsls	r3, r6, #12
    2456:	0b1e      	lsrs	r6, r3, #12
    2458:	4a62      	ldr	r2, [pc, #392]	; (25e4 <__aeabi_ddiv+0x5a4>)
    245a:	464b      	mov	r3, r9
    245c:	e764      	b.n	2328 <__aeabi_ddiv+0x2e8>
    245e:	1c04      	adds	r4, r0, #0
    2460:	3c28      	subs	r4, #40	; 0x28
    2462:	40a5      	lsls	r5, r4
    2464:	1c2c      	adds	r4, r5, #0
    2466:	2500      	movs	r5, #0
    2468:	e64b      	b.n	2102 <__aeabi_ddiv+0xc2>
    246a:	f001 f877 	bl	355c <__clzsi2>
    246e:	3020      	adds	r0, #32
    2470:	e63b      	b.n	20ea <__aeabi_ddiv+0xaa>
    2472:	1c06      	adds	r6, r0, #0
    2474:	3e28      	subs	r6, #40	; 0x28
    2476:	40b7      	lsls	r7, r6
    2478:	1c3e      	adds	r6, r7, #0
    247a:	2700      	movs	r7, #0
    247c:	e609      	b.n	2092 <__aeabi_ddiv+0x52>
    247e:	f001 f86d 	bl	355c <__clzsi2>
    2482:	3020      	adds	r0, #32
    2484:	e5f9      	b.n	207a <__aeabi_ddiv+0x3a>
    2486:	9a02      	ldr	r2, [sp, #8]
    2488:	3e01      	subs	r6, #1
    248a:	1c11      	adds	r1, r2, #0
    248c:	4459      	add	r1, fp
    248e:	4559      	cmp	r1, fp
    2490:	4192      	sbcs	r2, r2
    2492:	4252      	negs	r2, r2
    2494:	1912      	adds	r2, r2, r4
    2496:	18d3      	adds	r3, r2, r3
    2498:	429c      	cmp	r4, r3
    249a:	d204      	bcs.n	24a6 <__aeabi_ddiv+0x466>
    249c:	4298      	cmp	r0, r3
    249e:	d86b      	bhi.n	2578 <__aeabi_ddiv+0x538>
    24a0:	d016      	beq.n	24d0 <__aeabi_ddiv+0x490>
    24a2:	1a1b      	subs	r3, r3, r0
    24a4:	e6cb      	b.n	223e <__aeabi_ddiv+0x1fe>
    24a6:	42a3      	cmp	r3, r4
    24a8:	d1fb      	bne.n	24a2 <__aeabi_ddiv+0x462>
    24aa:	458b      	cmp	fp, r1
    24ac:	d9f6      	bls.n	249c <__aeabi_ddiv+0x45c>
    24ae:	1a23      	subs	r3, r4, r0
    24b0:	e6c5      	b.n	223e <__aeabi_ddiv+0x1fe>
    24b2:	4599      	cmp	r9, r3
    24b4:	d800      	bhi.n	24b8 <__aeabi_ddiv+0x478>
    24b6:	e697      	b.n	21e8 <__aeabi_ddiv+0x1a8>
    24b8:	3f01      	subs	r7, #1
    24ba:	191b      	adds	r3, r3, r4
    24bc:	e694      	b.n	21e8 <__aeabi_ddiv+0x1a8>
    24be:	9a02      	ldr	r2, [sp, #8]
    24c0:	42ba      	cmp	r2, r7
    24c2:	d3e0      	bcc.n	2486 <__aeabi_ddiv+0x446>
    24c4:	9902      	ldr	r1, [sp, #8]
    24c6:	2300      	movs	r3, #0
    24c8:	e6b9      	b.n	223e <__aeabi_ddiv+0x1fe>
    24ca:	42af      	cmp	r7, r5
    24cc:	d9b9      	bls.n	2442 <__aeabi_ddiv+0x402>
    24ce:	e647      	b.n	2160 <__aeabi_ddiv+0x120>
    24d0:	428f      	cmp	r7, r1
    24d2:	d851      	bhi.n	2578 <__aeabi_ddiv+0x538>
    24d4:	2300      	movs	r3, #0
    24d6:	e6b2      	b.n	223e <__aeabi_ddiv+0x1fe>
    24d8:	1909      	adds	r1, r1, r4
    24da:	3f01      	subs	r7, #1
    24dc:	4658      	mov	r0, fp
    24de:	428c      	cmp	r4, r1
    24e0:	d919      	bls.n	2516 <__aeabi_ddiv+0x4d6>
    24e2:	4291      	cmp	r1, r2
    24e4:	d000      	beq.n	24e8 <__aeabi_ddiv+0x4a8>
    24e6:	e712      	b.n	230e <__aeabi_ddiv+0x2ce>
    24e8:	4298      	cmp	r0, r3
    24ea:	d000      	beq.n	24ee <__aeabi_ddiv+0x4ae>
    24ec:	e70f      	b.n	230e <__aeabi_ddiv+0x2ce>
    24ee:	e76c      	b.n	23ca <__aeabi_ddiv+0x38a>
    24f0:	4c3d      	ldr	r4, [pc, #244]	; (25e8 <__aeabi_ddiv+0x5a8>)
    24f2:	9d04      	ldr	r5, [sp, #16]
    24f4:	1b63      	subs	r3, r4, r5
    24f6:	2b38      	cmp	r3, #56	; 0x38
    24f8:	dd1c      	ble.n	2534 <__aeabi_ddiv+0x4f4>
    24fa:	9b01      	ldr	r3, [sp, #4]
    24fc:	2200      	movs	r2, #0
    24fe:	2600      	movs	r6, #0
    2500:	2700      	movs	r7, #0
    2502:	e711      	b.n	2328 <__aeabi_ddiv+0x2e8>
    2504:	9b01      	ldr	r3, [sp, #4]
    2506:	2200      	movs	r2, #0
    2508:	402b      	ands	r3, r5
    250a:	2600      	movs	r6, #0
    250c:	2700      	movs	r7, #0
    250e:	e70b      	b.n	2328 <__aeabi_ddiv+0x2e8>
    2510:	2701      	movs	r7, #1
    2512:	427f      	negs	r7, r7
    2514:	e759      	b.n	23ca <__aeabi_ddiv+0x38a>
    2516:	428a      	cmp	r2, r1
    2518:	d803      	bhi.n	2522 <__aeabi_ddiv+0x4e2>
    251a:	d000      	beq.n	251e <__aeabi_ddiv+0x4de>
    251c:	e6f7      	b.n	230e <__aeabi_ddiv+0x2ce>
    251e:	4298      	cmp	r0, r3
    2520:	d2e2      	bcs.n	24e8 <__aeabi_ddiv+0x4a8>
    2522:	465d      	mov	r5, fp
    2524:	0068      	lsls	r0, r5, #1
    2526:	4558      	cmp	r0, fp
    2528:	41ad      	sbcs	r5, r5
    252a:	426d      	negs	r5, r5
    252c:	192c      	adds	r4, r5, r4
    252e:	3f01      	subs	r7, #1
    2530:	1909      	adds	r1, r1, r4
    2532:	e7d6      	b.n	24e2 <__aeabi_ddiv+0x4a2>
    2534:	2b1f      	cmp	r3, #31
    2536:	dc34      	bgt.n	25a2 <__aeabi_ddiv+0x562>
    2538:	9c04      	ldr	r4, [sp, #16]
    253a:	4a2c      	ldr	r2, [pc, #176]	; (25ec <__aeabi_ddiv+0x5ac>)
    253c:	1c38      	adds	r0, r7, #0
    253e:	18a5      	adds	r5, r4, r2
    2540:	1c31      	adds	r1, r6, #0
    2542:	40af      	lsls	r7, r5
    2544:	40d8      	lsrs	r0, r3
    2546:	40a9      	lsls	r1, r5
    2548:	1c3c      	adds	r4, r7, #0
    254a:	4301      	orrs	r1, r0
    254c:	1e67      	subs	r7, r4, #1
    254e:	41bc      	sbcs	r4, r7
    2550:	1c0f      	adds	r7, r1, #0
    2552:	4327      	orrs	r7, r4
    2554:	40de      	lsrs	r6, r3
    2556:	230f      	movs	r3, #15
    2558:	403b      	ands	r3, r7
    255a:	2b04      	cmp	r3, #4
    255c:	d005      	beq.n	256a <__aeabi_ddiv+0x52a>
    255e:	1d3a      	adds	r2, r7, #4
    2560:	42ba      	cmp	r2, r7
    2562:	41bf      	sbcs	r7, r7
    2564:	427d      	negs	r5, r7
    2566:	1976      	adds	r6, r6, r5
    2568:	1c17      	adds	r7, r2, #0
    256a:	0232      	lsls	r2, r6, #8
    256c:	d511      	bpl.n	2592 <__aeabi_ddiv+0x552>
    256e:	9b01      	ldr	r3, [sp, #4]
    2570:	2201      	movs	r2, #1
    2572:	2600      	movs	r6, #0
    2574:	2700      	movs	r7, #0
    2576:	e6d7      	b.n	2328 <__aeabi_ddiv+0x2e8>
    2578:	4459      	add	r1, fp
    257a:	4559      	cmp	r1, fp
    257c:	4192      	sbcs	r2, r2
    257e:	4252      	negs	r2, r2
    2580:	1912      	adds	r2, r2, r4
    2582:	18d3      	adds	r3, r2, r3
    2584:	3e01      	subs	r6, #1
    2586:	1a1b      	subs	r3, r3, r0
    2588:	e659      	b.n	223e <__aeabi_ddiv+0x1fe>
    258a:	2b00      	cmp	r3, #0
    258c:	d1a4      	bne.n	24d8 <__aeabi_ddiv+0x498>
    258e:	2000      	movs	r0, #0
    2590:	e7aa      	b.n	24e8 <__aeabi_ddiv+0x4a8>
    2592:	0770      	lsls	r0, r6, #29
    2594:	08ff      	lsrs	r7, r7, #3
    2596:	0271      	lsls	r1, r6, #9
    2598:	4307      	orrs	r7, r0
    259a:	0b0e      	lsrs	r6, r1, #12
    259c:	9b01      	ldr	r3, [sp, #4]
    259e:	2200      	movs	r2, #0
    25a0:	e6c2      	b.n	2328 <__aeabi_ddiv+0x2e8>
    25a2:	4913      	ldr	r1, [pc, #76]	; (25f0 <__aeabi_ddiv+0x5b0>)
    25a4:	9c04      	ldr	r4, [sp, #16]
    25a6:	1c30      	adds	r0, r6, #0
    25a8:	1b0a      	subs	r2, r1, r4
    25aa:	40d0      	lsrs	r0, r2
    25ac:	1c05      	adds	r5, r0, #0
    25ae:	2b20      	cmp	r3, #32
    25b0:	d008      	beq.n	25c4 <__aeabi_ddiv+0x584>
    25b2:	4b10      	ldr	r3, [pc, #64]	; (25f4 <__aeabi_ddiv+0x5b4>)
    25b4:	18e1      	adds	r1, r4, r3
    25b6:	408e      	lsls	r6, r1
    25b8:	4337      	orrs	r7, r6
    25ba:	1e7b      	subs	r3, r7, #1
    25bc:	419f      	sbcs	r7, r3
    25be:	432f      	orrs	r7, r5
    25c0:	2600      	movs	r6, #0
    25c2:	e7c8      	b.n	2556 <__aeabi_ddiv+0x516>
    25c4:	2600      	movs	r6, #0
    25c6:	e7f7      	b.n	25b8 <__aeabi_ddiv+0x578>
    25c8:	2280      	movs	r2, #128	; 0x80
    25ca:	0310      	lsls	r0, r2, #12
    25cc:	4306      	orrs	r6, r0
    25ce:	0331      	lsls	r1, r6, #12
    25d0:	0b0e      	lsrs	r6, r1, #12
    25d2:	9b01      	ldr	r3, [sp, #4]
    25d4:	4a03      	ldr	r2, [pc, #12]	; (25e4 <__aeabi_ddiv+0x5a4>)
    25d6:	e6a7      	b.n	2328 <__aeabi_ddiv+0x2e8>
    25d8:	000003ff 	.word	0x000003ff
    25dc:	feffffff 	.word	0xfeffffff
    25e0:	000007fe 	.word	0x000007fe
    25e4:	000007ff 	.word	0x000007ff
    25e8:	fffffc02 	.word	0xfffffc02
    25ec:	0000041e 	.word	0x0000041e
    25f0:	fffffbe2 	.word	0xfffffbe2
    25f4:	0000043e 	.word	0x0000043e

000025f8 <__eqdf2>:
    25f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    25fa:	4694      	mov	ip, r2
    25fc:	4647      	mov	r7, r8
    25fe:	031a      	lsls	r2, r3, #12
    2600:	1c06      	adds	r6, r0, #0
    2602:	0058      	lsls	r0, r3, #1
    2604:	b480      	push	{r7}
    2606:	0b17      	lsrs	r7, r2, #12
    2608:	0d42      	lsrs	r2, r0, #21
    260a:	4819      	ldr	r0, [pc, #100]	; (2670 <__eqdf2+0x78>)
    260c:	030d      	lsls	r5, r1, #12
    260e:	004c      	lsls	r4, r1, #1
    2610:	0fdb      	lsrs	r3, r3, #31
    2612:	0b2d      	lsrs	r5, r5, #12
    2614:	0d64      	lsrs	r4, r4, #21
    2616:	0fc9      	lsrs	r1, r1, #31
    2618:	4698      	mov	r8, r3
    261a:	4284      	cmp	r4, r0
    261c:	d008      	beq.n	2630 <__eqdf2+0x38>
    261e:	4814      	ldr	r0, [pc, #80]	; (2670 <__eqdf2+0x78>)
    2620:	4282      	cmp	r2, r0
    2622:	d00d      	beq.n	2640 <__eqdf2+0x48>
    2624:	2001      	movs	r0, #1
    2626:	4294      	cmp	r4, r2
    2628:	d012      	beq.n	2650 <__eqdf2+0x58>
    262a:	bc04      	pop	{r2}
    262c:	4690      	mov	r8, r2
    262e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2630:	1c2b      	adds	r3, r5, #0
    2632:	4333      	orrs	r3, r6
    2634:	2001      	movs	r0, #1
    2636:	2b00      	cmp	r3, #0
    2638:	d1f7      	bne.n	262a <__eqdf2+0x32>
    263a:	480d      	ldr	r0, [pc, #52]	; (2670 <__eqdf2+0x78>)
    263c:	4282      	cmp	r2, r0
    263e:	d1f1      	bne.n	2624 <__eqdf2+0x2c>
    2640:	4663      	mov	r3, ip
    2642:	433b      	orrs	r3, r7
    2644:	2001      	movs	r0, #1
    2646:	2b00      	cmp	r3, #0
    2648:	d1ef      	bne.n	262a <__eqdf2+0x32>
    264a:	2001      	movs	r0, #1
    264c:	4294      	cmp	r4, r2
    264e:	d1ec      	bne.n	262a <__eqdf2+0x32>
    2650:	42bd      	cmp	r5, r7
    2652:	d1ea      	bne.n	262a <__eqdf2+0x32>
    2654:	4566      	cmp	r6, ip
    2656:	d1e8      	bne.n	262a <__eqdf2+0x32>
    2658:	4541      	cmp	r1, r8
    265a:	d006      	beq.n	266a <__eqdf2+0x72>
    265c:	2c00      	cmp	r4, #0
    265e:	d1e4      	bne.n	262a <__eqdf2+0x32>
    2660:	1c28      	adds	r0, r5, #0
    2662:	4330      	orrs	r0, r6
    2664:	1e45      	subs	r5, r0, #1
    2666:	41a8      	sbcs	r0, r5
    2668:	e7df      	b.n	262a <__eqdf2+0x32>
    266a:	2000      	movs	r0, #0
    266c:	e7dd      	b.n	262a <__eqdf2+0x32>
    266e:	46c0      	nop			; (mov r8, r8)
    2670:	000007ff 	.word	0x000007ff

00002674 <__gedf2>:
    2674:	b5f0      	push	{r4, r5, r6, r7, lr}
    2676:	4657      	mov	r7, sl
    2678:	464e      	mov	r6, r9
    267a:	4645      	mov	r5, r8
    267c:	b4e0      	push	{r5, r6, r7}
    267e:	1c04      	adds	r4, r0, #0
    2680:	004e      	lsls	r6, r1, #1
    2682:	0308      	lsls	r0, r1, #12
    2684:	0fc9      	lsrs	r1, r1, #31
    2686:	468a      	mov	sl, r1
    2688:	1c17      	adds	r7, r2, #0
    268a:	0059      	lsls	r1, r3, #1
    268c:	031a      	lsls	r2, r3, #12
    268e:	0b05      	lsrs	r5, r0, #12
    2690:	0d70      	lsrs	r0, r6, #21
    2692:	0b16      	lsrs	r6, r2, #12
    2694:	0d4a      	lsrs	r2, r1, #21
    2696:	4930      	ldr	r1, [pc, #192]	; (2758 <__gedf2+0xe4>)
    2698:	0fdb      	lsrs	r3, r3, #31
    269a:	469c      	mov	ip, r3
    269c:	4288      	cmp	r0, r1
    269e:	d032      	beq.n	2706 <__gedf2+0x92>
    26a0:	492d      	ldr	r1, [pc, #180]	; (2758 <__gedf2+0xe4>)
    26a2:	428a      	cmp	r2, r1
    26a4:	d035      	beq.n	2712 <__gedf2+0x9e>
    26a6:	2800      	cmp	r0, #0
    26a8:	d10f      	bne.n	26ca <__gedf2+0x56>
    26aa:	1c29      	adds	r1, r5, #0
    26ac:	4321      	orrs	r1, r4
    26ae:	424b      	negs	r3, r1
    26b0:	414b      	adcs	r3, r1
    26b2:	4698      	mov	r8, r3
    26b4:	2a00      	cmp	r2, #0
    26b6:	d00b      	beq.n	26d0 <__gedf2+0x5c>
    26b8:	2b00      	cmp	r3, #0
    26ba:	d11a      	bne.n	26f2 <__gedf2+0x7e>
    26bc:	45e2      	cmp	sl, ip
    26be:	d02c      	beq.n	271a <__gedf2+0xa6>
    26c0:	4655      	mov	r5, sl
    26c2:	2d00      	cmp	r5, #0
    26c4:	d118      	bne.n	26f8 <__gedf2+0x84>
    26c6:	2001      	movs	r0, #1
    26c8:	e018      	b.n	26fc <__gedf2+0x88>
    26ca:	2a00      	cmp	r2, #0
    26cc:	d1f6      	bne.n	26bc <__gedf2+0x48>
    26ce:	4690      	mov	r8, r2
    26d0:	1c31      	adds	r1, r6, #0
    26d2:	4339      	orrs	r1, r7
    26d4:	424b      	negs	r3, r1
    26d6:	414b      	adcs	r3, r1
    26d8:	4641      	mov	r1, r8
    26da:	2900      	cmp	r1, #0
    26dc:	d106      	bne.n	26ec <__gedf2+0x78>
    26de:	2b00      	cmp	r3, #0
    26e0:	d0ec      	beq.n	26bc <__gedf2+0x48>
    26e2:	4656      	mov	r6, sl
    26e4:	2001      	movs	r0, #1
    26e6:	2e00      	cmp	r6, #0
    26e8:	d008      	beq.n	26fc <__gedf2+0x88>
    26ea:	e005      	b.n	26f8 <__gedf2+0x84>
    26ec:	2000      	movs	r0, #0
    26ee:	2b00      	cmp	r3, #0
    26f0:	d104      	bne.n	26fc <__gedf2+0x88>
    26f2:	4667      	mov	r7, ip
    26f4:	2f00      	cmp	r7, #0
    26f6:	d1e6      	bne.n	26c6 <__gedf2+0x52>
    26f8:	2301      	movs	r3, #1
    26fa:	4258      	negs	r0, r3
    26fc:	bc1c      	pop	{r2, r3, r4}
    26fe:	4690      	mov	r8, r2
    2700:	4699      	mov	r9, r3
    2702:	46a2      	mov	sl, r4
    2704:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2706:	1c2b      	adds	r3, r5, #0
    2708:	4323      	orrs	r3, r4
    270a:	d0c9      	beq.n	26a0 <__gedf2+0x2c>
    270c:	2102      	movs	r1, #2
    270e:	4248      	negs	r0, r1
    2710:	e7f4      	b.n	26fc <__gedf2+0x88>
    2712:	1c33      	adds	r3, r6, #0
    2714:	433b      	orrs	r3, r7
    2716:	d0c6      	beq.n	26a6 <__gedf2+0x32>
    2718:	e7f8      	b.n	270c <__gedf2+0x98>
    271a:	4290      	cmp	r0, r2
    271c:	dc05      	bgt.n	272a <__gedf2+0xb6>
    271e:	da09      	bge.n	2734 <__gedf2+0xc0>
    2720:	4652      	mov	r2, sl
    2722:	2a00      	cmp	r2, #0
    2724:	d0e8      	beq.n	26f8 <__gedf2+0x84>
    2726:	2001      	movs	r0, #1
    2728:	e7e8      	b.n	26fc <__gedf2+0x88>
    272a:	4654      	mov	r4, sl
    272c:	2c00      	cmp	r4, #0
    272e:	d1e3      	bne.n	26f8 <__gedf2+0x84>
    2730:	2001      	movs	r0, #1
    2732:	e7e3      	b.n	26fc <__gedf2+0x88>
    2734:	42b5      	cmp	r5, r6
    2736:	d8c3      	bhi.n	26c0 <__gedf2+0x4c>
    2738:	d007      	beq.n	274a <__gedf2+0xd6>
    273a:	2000      	movs	r0, #0
    273c:	42b5      	cmp	r5, r6
    273e:	d2dd      	bcs.n	26fc <__gedf2+0x88>
    2740:	4650      	mov	r0, sl
    2742:	2800      	cmp	r0, #0
    2744:	d0d8      	beq.n	26f8 <__gedf2+0x84>
    2746:	2001      	movs	r0, #1
    2748:	e7d8      	b.n	26fc <__gedf2+0x88>
    274a:	42bc      	cmp	r4, r7
    274c:	d8b8      	bhi.n	26c0 <__gedf2+0x4c>
    274e:	2000      	movs	r0, #0
    2750:	42bc      	cmp	r4, r7
    2752:	d3f5      	bcc.n	2740 <__gedf2+0xcc>
    2754:	e7d2      	b.n	26fc <__gedf2+0x88>
    2756:	46c0      	nop			; (mov r8, r8)
    2758:	000007ff 	.word	0x000007ff

0000275c <__ledf2>:
    275c:	b5f0      	push	{r4, r5, r6, r7, lr}
    275e:	4644      	mov	r4, r8
    2760:	465f      	mov	r7, fp
    2762:	4656      	mov	r6, sl
    2764:	464d      	mov	r5, r9
    2766:	b4f0      	push	{r4, r5, r6, r7}
    2768:	4694      	mov	ip, r2
    276a:	1c06      	adds	r6, r0, #0
    276c:	031a      	lsls	r2, r3, #12
    276e:	0058      	lsls	r0, r3, #1
    2770:	0b17      	lsrs	r7, r2, #12
    2772:	0d42      	lsrs	r2, r0, #21
    2774:	482e      	ldr	r0, [pc, #184]	; (2830 <__ledf2+0xd4>)
    2776:	030d      	lsls	r5, r1, #12
    2778:	004c      	lsls	r4, r1, #1
    277a:	0fdb      	lsrs	r3, r3, #31
    277c:	0b2d      	lsrs	r5, r5, #12
    277e:	0d64      	lsrs	r4, r4, #21
    2780:	0fc9      	lsrs	r1, r1, #31
    2782:	4698      	mov	r8, r3
    2784:	4284      	cmp	r4, r0
    2786:	d033      	beq.n	27f0 <__ledf2+0x94>
    2788:	4829      	ldr	r0, [pc, #164]	; (2830 <__ledf2+0xd4>)
    278a:	4282      	cmp	r2, r0
    278c:	d036      	beq.n	27fc <__ledf2+0xa0>
    278e:	2c00      	cmp	r4, #0
    2790:	d019      	beq.n	27c6 <__ledf2+0x6a>
    2792:	2a00      	cmp	r2, #0
    2794:	d120      	bne.n	27d8 <__ledf2+0x7c>
    2796:	4693      	mov	fp, r2
    2798:	4663      	mov	r3, ip
    279a:	433b      	orrs	r3, r7
    279c:	4258      	negs	r0, r3
    279e:	4158      	adcs	r0, r3
    27a0:	465b      	mov	r3, fp
    27a2:	4682      	mov	sl, r0
    27a4:	2b00      	cmp	r3, #0
    27a6:	d01d      	beq.n	27e4 <__ledf2+0x88>
    27a8:	4651      	mov	r1, sl
    27aa:	2000      	movs	r0, #0
    27ac:	2900      	cmp	r1, #0
    27ae:	d104      	bne.n	27ba <__ledf2+0x5e>
    27b0:	4642      	mov	r2, r8
    27b2:	2a00      	cmp	r2, #0
    27b4:	d114      	bne.n	27e0 <__ledf2+0x84>
    27b6:	2401      	movs	r4, #1
    27b8:	4260      	negs	r0, r4
    27ba:	bc3c      	pop	{r2, r3, r4, r5}
    27bc:	4690      	mov	r8, r2
    27be:	4699      	mov	r9, r3
    27c0:	46a2      	mov	sl, r4
    27c2:	46ab      	mov	fp, r5
    27c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    27c6:	1c2b      	adds	r3, r5, #0
    27c8:	4333      	orrs	r3, r6
    27ca:	4258      	negs	r0, r3
    27cc:	4143      	adcs	r3, r0
    27ce:	469b      	mov	fp, r3
    27d0:	2a00      	cmp	r2, #0
    27d2:	d0e1      	beq.n	2798 <__ledf2+0x3c>
    27d4:	2b00      	cmp	r3, #0
    27d6:	d1eb      	bne.n	27b0 <__ledf2+0x54>
    27d8:	4541      	cmp	r1, r8
    27da:	d015      	beq.n	2808 <__ledf2+0xac>
    27dc:	2900      	cmp	r1, #0
    27de:	d1ea      	bne.n	27b6 <__ledf2+0x5a>
    27e0:	2001      	movs	r0, #1
    27e2:	e7ea      	b.n	27ba <__ledf2+0x5e>
    27e4:	2800      	cmp	r0, #0
    27e6:	d0f7      	beq.n	27d8 <__ledf2+0x7c>
    27e8:	2001      	movs	r0, #1
    27ea:	2900      	cmp	r1, #0
    27ec:	d0e5      	beq.n	27ba <__ledf2+0x5e>
    27ee:	e7e2      	b.n	27b6 <__ledf2+0x5a>
    27f0:	1c2b      	adds	r3, r5, #0
    27f2:	4333      	orrs	r3, r6
    27f4:	2002      	movs	r0, #2
    27f6:	2b00      	cmp	r3, #0
    27f8:	d1df      	bne.n	27ba <__ledf2+0x5e>
    27fa:	e7c5      	b.n	2788 <__ledf2+0x2c>
    27fc:	4663      	mov	r3, ip
    27fe:	433b      	orrs	r3, r7
    2800:	2002      	movs	r0, #2
    2802:	2b00      	cmp	r3, #0
    2804:	d1d9      	bne.n	27ba <__ledf2+0x5e>
    2806:	e7c2      	b.n	278e <__ledf2+0x32>
    2808:	4294      	cmp	r4, r2
    280a:	dce7      	bgt.n	27dc <__ledf2+0x80>
    280c:	db05      	blt.n	281a <__ledf2+0xbe>
    280e:	42bd      	cmp	r5, r7
    2810:	d8e4      	bhi.n	27dc <__ledf2+0x80>
    2812:	d006      	beq.n	2822 <__ledf2+0xc6>
    2814:	2000      	movs	r0, #0
    2816:	42bd      	cmp	r5, r7
    2818:	d2cf      	bcs.n	27ba <__ledf2+0x5e>
    281a:	2900      	cmp	r1, #0
    281c:	d0cb      	beq.n	27b6 <__ledf2+0x5a>
    281e:	2001      	movs	r0, #1
    2820:	e7cb      	b.n	27ba <__ledf2+0x5e>
    2822:	4566      	cmp	r6, ip
    2824:	d8da      	bhi.n	27dc <__ledf2+0x80>
    2826:	2000      	movs	r0, #0
    2828:	4566      	cmp	r6, ip
    282a:	d3f6      	bcc.n	281a <__ledf2+0xbe>
    282c:	e7c5      	b.n	27ba <__ledf2+0x5e>
    282e:	46c0      	nop			; (mov r8, r8)
    2830:	000007ff 	.word	0x000007ff

00002834 <__aeabi_dmul>:
    2834:	b5f0      	push	{r4, r5, r6, r7, lr}
    2836:	4656      	mov	r6, sl
    2838:	4644      	mov	r4, r8
    283a:	465f      	mov	r7, fp
    283c:	464d      	mov	r5, r9
    283e:	b4f0      	push	{r4, r5, r6, r7}
    2840:	004f      	lsls	r7, r1, #1
    2842:	1c1d      	adds	r5, r3, #0
    2844:	030b      	lsls	r3, r1, #12
    2846:	1c14      	adds	r4, r2, #0
    2848:	0b1a      	lsrs	r2, r3, #12
    284a:	0d7b      	lsrs	r3, r7, #21
    284c:	b087      	sub	sp, #28
    284e:	1c06      	adds	r6, r0, #0
    2850:	4692      	mov	sl, r2
    2852:	4698      	mov	r8, r3
    2854:	0fcf      	lsrs	r7, r1, #31
    2856:	2b00      	cmp	r3, #0
    2858:	d121      	bne.n	289e <__aeabi_dmul+0x6a>
    285a:	4302      	orrs	r2, r0
    285c:	d100      	bne.n	2860 <__aeabi_dmul+0x2c>
    285e:	e149      	b.n	2af4 <__aeabi_dmul+0x2c0>
    2860:	4653      	mov	r3, sl
    2862:	2b00      	cmp	r3, #0
    2864:	d100      	bne.n	2868 <__aeabi_dmul+0x34>
    2866:	e1e4      	b.n	2c32 <__aeabi_dmul+0x3fe>
    2868:	4650      	mov	r0, sl
    286a:	f000 fe77 	bl	355c <__clzsi2>
    286e:	1e03      	subs	r3, r0, #0
    2870:	2b27      	cmp	r3, #39	; 0x27
    2872:	dd00      	ble.n	2876 <__aeabi_dmul+0x42>
    2874:	e1d8      	b.n	2c28 <__aeabi_dmul+0x3f4>
    2876:	3b08      	subs	r3, #8
    2878:	4651      	mov	r1, sl
    287a:	4099      	lsls	r1, r3
    287c:	2228      	movs	r2, #40	; 0x28
    287e:	4688      	mov	r8, r1
    2880:	1a11      	subs	r1, r2, r0
    2882:	1c32      	adds	r2, r6, #0
    2884:	40ca      	lsrs	r2, r1
    2886:	4641      	mov	r1, r8
    2888:	430a      	orrs	r2, r1
    288a:	4692      	mov	sl, r2
    288c:	409e      	lsls	r6, r3
    288e:	4bd8      	ldr	r3, [pc, #864]	; (2bf0 <__aeabi_dmul+0x3bc>)
    2890:	2200      	movs	r2, #0
    2892:	1a18      	subs	r0, r3, r0
    2894:	2100      	movs	r1, #0
    2896:	4680      	mov	r8, r0
    2898:	4691      	mov	r9, r2
    289a:	9103      	str	r1, [sp, #12]
    289c:	e011      	b.n	28c2 <__aeabi_dmul+0x8e>
    289e:	48d5      	ldr	r0, [pc, #852]	; (2bf4 <__aeabi_dmul+0x3c0>)
    28a0:	4283      	cmp	r3, r0
    28a2:	d03e      	beq.n	2922 <__aeabi_dmul+0xee>
    28a4:	2180      	movs	r1, #128	; 0x80
    28a6:	4653      	mov	r3, sl
    28a8:	034a      	lsls	r2, r1, #13
    28aa:	431a      	orrs	r2, r3
    28ac:	00d0      	lsls	r0, r2, #3
    28ae:	0f71      	lsrs	r1, r6, #29
    28b0:	4308      	orrs	r0, r1
    28b2:	4ad1      	ldr	r2, [pc, #836]	; (2bf8 <__aeabi_dmul+0x3c4>)
    28b4:	4682      	mov	sl, r0
    28b6:	2300      	movs	r3, #0
    28b8:	2000      	movs	r0, #0
    28ba:	00f6      	lsls	r6, r6, #3
    28bc:	4490      	add	r8, r2
    28be:	4699      	mov	r9, r3
    28c0:	9003      	str	r0, [sp, #12]
    28c2:	1c29      	adds	r1, r5, #0
    28c4:	1c20      	adds	r0, r4, #0
    28c6:	1c25      	adds	r5, r4, #0
    28c8:	004a      	lsls	r2, r1, #1
    28ca:	030c      	lsls	r4, r1, #12
    28cc:	0fcb      	lsrs	r3, r1, #31
    28ce:	0b24      	lsrs	r4, r4, #12
    28d0:	0d52      	lsrs	r2, r2, #21
    28d2:	469b      	mov	fp, r3
    28d4:	d131      	bne.n	293a <__aeabi_dmul+0x106>
    28d6:	1c21      	adds	r1, r4, #0
    28d8:	4301      	orrs	r1, r0
    28da:	d100      	bne.n	28de <__aeabi_dmul+0xaa>
    28dc:	e112      	b.n	2b04 <__aeabi_dmul+0x2d0>
    28de:	2c00      	cmp	r4, #0
    28e0:	d100      	bne.n	28e4 <__aeabi_dmul+0xb0>
    28e2:	e19d      	b.n	2c20 <__aeabi_dmul+0x3ec>
    28e4:	1c20      	adds	r0, r4, #0
    28e6:	f000 fe39 	bl	355c <__clzsi2>
    28ea:	2827      	cmp	r0, #39	; 0x27
    28ec:	dd00      	ble.n	28f0 <__aeabi_dmul+0xbc>
    28ee:	e191      	b.n	2c14 <__aeabi_dmul+0x3e0>
    28f0:	1c03      	adds	r3, r0, #0
    28f2:	2228      	movs	r2, #40	; 0x28
    28f4:	3b08      	subs	r3, #8
    28f6:	1c29      	adds	r1, r5, #0
    28f8:	1a12      	subs	r2, r2, r0
    28fa:	409c      	lsls	r4, r3
    28fc:	40d1      	lsrs	r1, r2
    28fe:	430c      	orrs	r4, r1
    2900:	409d      	lsls	r5, r3
    2902:	4bbb      	ldr	r3, [pc, #748]	; (2bf0 <__aeabi_dmul+0x3bc>)
    2904:	4659      	mov	r1, fp
    2906:	1a1a      	subs	r2, r3, r0
    2908:	4079      	eors	r1, r7
    290a:	2000      	movs	r0, #0
    290c:	464b      	mov	r3, r9
    290e:	9101      	str	r1, [sp, #4]
    2910:	4303      	orrs	r3, r0
    2912:	2b0f      	cmp	r3, #15
    2914:	d826      	bhi.n	2964 <__aeabi_dmul+0x130>
    2916:	0099      	lsls	r1, r3, #2
    2918:	4bb8      	ldr	r3, [pc, #736]	; (2bfc <__aeabi_dmul+0x3c8>)
    291a:	468c      	mov	ip, r1
    291c:	4463      	add	r3, ip
    291e:	6819      	ldr	r1, [r3, #0]
    2920:	468f      	mov	pc, r1
    2922:	1c11      	adds	r1, r2, #0
    2924:	4331      	orrs	r1, r6
    2926:	d000      	beq.n	292a <__aeabi_dmul+0xf6>
    2928:	e0df      	b.n	2aea <__aeabi_dmul+0x2b6>
    292a:	2608      	movs	r6, #8
    292c:	2000      	movs	r0, #0
    292e:	2102      	movs	r1, #2
    2930:	46b1      	mov	r9, r6
    2932:	4682      	mov	sl, r0
    2934:	2600      	movs	r6, #0
    2936:	9103      	str	r1, [sp, #12]
    2938:	e7c3      	b.n	28c2 <__aeabi_dmul+0x8e>
    293a:	48ae      	ldr	r0, [pc, #696]	; (2bf4 <__aeabi_dmul+0x3c0>)
    293c:	4282      	cmp	r2, r0
    293e:	d100      	bne.n	2942 <__aeabi_dmul+0x10e>
    2940:	e0c9      	b.n	2ad6 <__aeabi_dmul+0x2a2>
    2942:	2180      	movs	r1, #128	; 0x80
    2944:	034b      	lsls	r3, r1, #13
    2946:	431c      	orrs	r4, r3
    2948:	49ab      	ldr	r1, [pc, #684]	; (2bf8 <__aeabi_dmul+0x3c4>)
    294a:	0f68      	lsrs	r0, r5, #29
    294c:	00e4      	lsls	r4, r4, #3
    294e:	4304      	orrs	r4, r0
    2950:	00ed      	lsls	r5, r5, #3
    2952:	1852      	adds	r2, r2, r1
    2954:	2000      	movs	r0, #0
    2956:	4659      	mov	r1, fp
    2958:	4079      	eors	r1, r7
    295a:	464b      	mov	r3, r9
    295c:	9101      	str	r1, [sp, #4]
    295e:	4303      	orrs	r3, r0
    2960:	2b0f      	cmp	r3, #15
    2962:	d9d8      	bls.n	2916 <__aeabi_dmul+0xe2>
    2964:	4442      	add	r2, r8
    2966:	0433      	lsls	r3, r6, #16
    2968:	0429      	lsls	r1, r5, #16
    296a:	9204      	str	r2, [sp, #16]
    296c:	0c1a      	lsrs	r2, r3, #16
    296e:	0c0f      	lsrs	r7, r1, #16
    2970:	1c10      	adds	r0, r2, #0
    2972:	4378      	muls	r0, r7
    2974:	0c36      	lsrs	r6, r6, #16
    2976:	1c33      	adds	r3, r6, #0
    2978:	4680      	mov	r8, r0
    297a:	0c2d      	lsrs	r5, r5, #16
    297c:	437b      	muls	r3, r7
    297e:	1c30      	adds	r0, r6, #0
    2980:	4368      	muls	r0, r5
    2982:	1c11      	adds	r1, r2, #0
    2984:	4369      	muls	r1, r5
    2986:	469c      	mov	ip, r3
    2988:	4643      	mov	r3, r8
    298a:	4683      	mov	fp, r0
    298c:	0c18      	lsrs	r0, r3, #16
    298e:	1808      	adds	r0, r1, r0
    2990:	4460      	add	r0, ip
    2992:	4584      	cmp	ip, r0
    2994:	d900      	bls.n	2998 <__aeabi_dmul+0x164>
    2996:	e11f      	b.n	2bd8 <__aeabi_dmul+0x3a4>
    2998:	0c01      	lsrs	r1, r0, #16
    299a:	4643      	mov	r3, r8
    299c:	9103      	str	r1, [sp, #12]
    299e:	0419      	lsls	r1, r3, #16
    29a0:	0c0b      	lsrs	r3, r1, #16
    29a2:	0400      	lsls	r0, r0, #16
    29a4:	18c0      	adds	r0, r0, r3
    29a6:	0421      	lsls	r1, r4, #16
    29a8:	0c24      	lsrs	r4, r4, #16
    29aa:	9005      	str	r0, [sp, #20]
    29ac:	1c10      	adds	r0, r2, #0
    29ae:	4362      	muls	r2, r4
    29b0:	0c09      	lsrs	r1, r1, #16
    29b2:	9202      	str	r2, [sp, #8]
    29b4:	4348      	muls	r0, r1
    29b6:	1c32      	adds	r2, r6, #0
    29b8:	4366      	muls	r6, r4
    29ba:	434a      	muls	r2, r1
    29bc:	9b02      	ldr	r3, [sp, #8]
    29be:	46b1      	mov	r9, r6
    29c0:	0c06      	lsrs	r6, r0, #16
    29c2:	4690      	mov	r8, r2
    29c4:	46b4      	mov	ip, r6
    29c6:	1c1a      	adds	r2, r3, #0
    29c8:	4462      	add	r2, ip
    29ca:	4442      	add	r2, r8
    29cc:	4590      	cmp	r8, r2
    29ce:	d902      	bls.n	29d6 <__aeabi_dmul+0x1a2>
    29d0:	2680      	movs	r6, #128	; 0x80
    29d2:	0273      	lsls	r3, r6, #9
    29d4:	4499      	add	r9, r3
    29d6:	0c16      	lsrs	r6, r2, #16
    29d8:	46b0      	mov	r8, r6
    29da:	44c1      	add	r9, r8
    29dc:	0400      	lsls	r0, r0, #16
    29de:	464b      	mov	r3, r9
    29e0:	0c06      	lsrs	r6, r0, #16
    29e2:	0412      	lsls	r2, r2, #16
    29e4:	9302      	str	r3, [sp, #8]
    29e6:	1993      	adds	r3, r2, r6
    29e8:	4656      	mov	r6, sl
    29ea:	0432      	lsls	r2, r6, #16
    29ec:	0c10      	lsrs	r0, r2, #16
    29ee:	1c02      	adds	r2, r0, #0
    29f0:	436a      	muls	r2, r5
    29f2:	469c      	mov	ip, r3
    29f4:	1c03      	adds	r3, r0, #0
    29f6:	437b      	muls	r3, r7
    29f8:	4691      	mov	r9, r2
    29fa:	0c32      	lsrs	r2, r6, #16
    29fc:	4357      	muls	r7, r2
    29fe:	4698      	mov	r8, r3
    2a00:	0c1b      	lsrs	r3, r3, #16
    2a02:	469a      	mov	sl, r3
    2a04:	44d1      	add	r9, sl
    2a06:	44b9      	add	r9, r7
    2a08:	4355      	muls	r5, r2
    2a0a:	454f      	cmp	r7, r9
    2a0c:	d902      	bls.n	2a14 <__aeabi_dmul+0x1e0>
    2a0e:	2780      	movs	r7, #128	; 0x80
    2a10:	027e      	lsls	r6, r7, #9
    2a12:	19ad      	adds	r5, r5, r6
    2a14:	464b      	mov	r3, r9
    2a16:	0c1f      	lsrs	r7, r3, #16
    2a18:	4646      	mov	r6, r8
    2a1a:	19ed      	adds	r5, r5, r7
    2a1c:	041f      	lsls	r7, r3, #16
    2a1e:	0433      	lsls	r3, r6, #16
    2a20:	0c1e      	lsrs	r6, r3, #16
    2a22:	1c03      	adds	r3, r0, #0
    2a24:	434b      	muls	r3, r1
    2a26:	4360      	muls	r0, r4
    2a28:	4351      	muls	r1, r2
    2a2a:	4354      	muls	r4, r2
    2a2c:	0c1a      	lsrs	r2, r3, #16
    2a2e:	1880      	adds	r0, r0, r2
    2a30:	46b0      	mov	r8, r6
    2a32:	1840      	adds	r0, r0, r1
    2a34:	4447      	add	r7, r8
    2a36:	469a      	mov	sl, r3
    2a38:	4281      	cmp	r1, r0
    2a3a:	d902      	bls.n	2a42 <__aeabi_dmul+0x20e>
    2a3c:	2180      	movs	r1, #128	; 0x80
    2a3e:	024e      	lsls	r6, r1, #9
    2a40:	19a4      	adds	r4, r4, r6
    2a42:	9b03      	ldr	r3, [sp, #12]
    2a44:	1c1a      	adds	r2, r3, #0
    2a46:	4462      	add	r2, ip
    2a48:	445a      	add	r2, fp
    2a4a:	4562      	cmp	r2, ip
    2a4c:	4189      	sbcs	r1, r1
    2a4e:	424e      	negs	r6, r1
    2a50:	4651      	mov	r1, sl
    2a52:	46b3      	mov	fp, r6
    2a54:	0403      	lsls	r3, r0, #16
    2a56:	040e      	lsls	r6, r1, #16
    2a58:	469c      	mov	ip, r3
    2a5a:	9902      	ldr	r1, [sp, #8]
    2a5c:	0c33      	lsrs	r3, r6, #16
    2a5e:	4463      	add	r3, ip
    2a60:	18ce      	adds	r6, r1, r3
    2a62:	46b0      	mov	r8, r6
    2a64:	46c2      	mov	sl, r8
    2a66:	44da      	add	sl, fp
    2a68:	19d2      	adds	r2, r2, r7
    2a6a:	42ba      	cmp	r2, r7
    2a6c:	41bf      	sbcs	r7, r7
    2a6e:	4651      	mov	r1, sl
    2a70:	427b      	negs	r3, r7
    2a72:	186f      	adds	r7, r5, r1
    2a74:	18f9      	adds	r1, r7, r3
    2a76:	4699      	mov	r9, r3
    2a78:	45da      	cmp	sl, fp
    2a7a:	419b      	sbcs	r3, r3
    2a7c:	425e      	negs	r6, r3
    2a7e:	9b02      	ldr	r3, [sp, #8]
    2a80:	46b3      	mov	fp, r6
    2a82:	4598      	cmp	r8, r3
    2a84:	41b6      	sbcs	r6, r6
    2a86:	4276      	negs	r6, r6
    2a88:	465b      	mov	r3, fp
    2a8a:	431e      	orrs	r6, r3
    2a8c:	0c00      	lsrs	r0, r0, #16
    2a8e:	4549      	cmp	r1, r9
    2a90:	419b      	sbcs	r3, r3
    2a92:	42af      	cmp	r7, r5
    2a94:	41ad      	sbcs	r5, r5
    2a96:	1836      	adds	r6, r6, r0
    2a98:	426f      	negs	r7, r5
    2a9a:	4258      	negs	r0, r3
    2a9c:	4338      	orrs	r0, r7
    2a9e:	1836      	adds	r6, r6, r0
    2aa0:	9805      	ldr	r0, [sp, #20]
    2aa2:	1934      	adds	r4, r6, r4
    2aa4:	0256      	lsls	r6, r2, #9
    2aa6:	4306      	orrs	r6, r0
    2aa8:	0dcb      	lsrs	r3, r1, #23
    2aaa:	0264      	lsls	r4, r4, #9
    2aac:	1e70      	subs	r0, r6, #1
    2aae:	4186      	sbcs	r6, r0
    2ab0:	0dd2      	lsrs	r2, r2, #23
    2ab2:	4316      	orrs	r6, r2
    2ab4:	0249      	lsls	r1, r1, #9
    2ab6:	431c      	orrs	r4, r3
    2ab8:	430e      	orrs	r6, r1
    2aba:	01e0      	lsls	r0, r4, #7
    2abc:	d52f      	bpl.n	2b1e <__aeabi_dmul+0x2ea>
    2abe:	2701      	movs	r7, #1
    2ac0:	9d04      	ldr	r5, [sp, #16]
    2ac2:	4037      	ands	r7, r6
    2ac4:	0873      	lsrs	r3, r6, #1
    2ac6:	1c3e      	adds	r6, r7, #0
    2ac8:	07e0      	lsls	r0, r4, #31
    2aca:	3501      	adds	r5, #1
    2acc:	431e      	orrs	r6, r3
    2ace:	9504      	str	r5, [sp, #16]
    2ad0:	4306      	orrs	r6, r0
    2ad2:	0864      	lsrs	r4, r4, #1
    2ad4:	e023      	b.n	2b1e <__aeabi_dmul+0x2ea>
    2ad6:	1c23      	adds	r3, r4, #0
    2ad8:	432b      	orrs	r3, r5
    2ada:	2003      	movs	r0, #3
    2adc:	2b00      	cmp	r3, #0
    2ade:	d000      	beq.n	2ae2 <__aeabi_dmul+0x2ae>
    2ae0:	e739      	b.n	2956 <__aeabi_dmul+0x122>
    2ae2:	2400      	movs	r4, #0
    2ae4:	2500      	movs	r5, #0
    2ae6:	2002      	movs	r0, #2
    2ae8:	e735      	b.n	2956 <__aeabi_dmul+0x122>
    2aea:	220c      	movs	r2, #12
    2aec:	2303      	movs	r3, #3
    2aee:	4691      	mov	r9, r2
    2af0:	9303      	str	r3, [sp, #12]
    2af2:	e6e6      	b.n	28c2 <__aeabi_dmul+0x8e>
    2af4:	2604      	movs	r6, #4
    2af6:	2300      	movs	r3, #0
    2af8:	2001      	movs	r0, #1
    2afa:	46b1      	mov	r9, r6
    2afc:	469a      	mov	sl, r3
    2afe:	2600      	movs	r6, #0
    2b00:	9003      	str	r0, [sp, #12]
    2b02:	e6de      	b.n	28c2 <__aeabi_dmul+0x8e>
    2b04:	2400      	movs	r4, #0
    2b06:	2500      	movs	r5, #0
    2b08:	2001      	movs	r0, #1
    2b0a:	e724      	b.n	2956 <__aeabi_dmul+0x122>
    2b0c:	9803      	ldr	r0, [sp, #12]
    2b0e:	4654      	mov	r4, sl
    2b10:	2802      	cmp	r0, #2
    2b12:	d044      	beq.n	2b9e <__aeabi_dmul+0x36a>
    2b14:	2803      	cmp	r0, #3
    2b16:	d100      	bne.n	2b1a <__aeabi_dmul+0x2e6>
    2b18:	e0ea      	b.n	2cf0 <__aeabi_dmul+0x4bc>
    2b1a:	2801      	cmp	r0, #1
    2b1c:	d060      	beq.n	2be0 <__aeabi_dmul+0x3ac>
    2b1e:	9a04      	ldr	r2, [sp, #16]
    2b20:	4937      	ldr	r1, [pc, #220]	; (2c00 <__aeabi_dmul+0x3cc>)
    2b22:	1850      	adds	r0, r2, r1
    2b24:	2800      	cmp	r0, #0
    2b26:	dc00      	bgt.n	2b2a <__aeabi_dmul+0x2f6>
    2b28:	e095      	b.n	2c56 <__aeabi_dmul+0x422>
    2b2a:	270f      	movs	r7, #15
    2b2c:	4037      	ands	r7, r6
    2b2e:	2f04      	cmp	r7, #4
    2b30:	d005      	beq.n	2b3e <__aeabi_dmul+0x30a>
    2b32:	1d31      	adds	r1, r6, #4
    2b34:	42b1      	cmp	r1, r6
    2b36:	41b6      	sbcs	r6, r6
    2b38:	4275      	negs	r5, r6
    2b3a:	1964      	adds	r4, r4, r5
    2b3c:	1c0e      	adds	r6, r1, #0
    2b3e:	01e1      	lsls	r1, r4, #7
    2b40:	d505      	bpl.n	2b4e <__aeabi_dmul+0x31a>
    2b42:	4830      	ldr	r0, [pc, #192]	; (2c04 <__aeabi_dmul+0x3d0>)
    2b44:	9a04      	ldr	r2, [sp, #16]
    2b46:	2380      	movs	r3, #128	; 0x80
    2b48:	00df      	lsls	r7, r3, #3
    2b4a:	4004      	ands	r4, r0
    2b4c:	19d0      	adds	r0, r2, r7
    2b4e:	492e      	ldr	r1, [pc, #184]	; (2c08 <__aeabi_dmul+0x3d4>)
    2b50:	4288      	cmp	r0, r1
    2b52:	dc24      	bgt.n	2b9e <__aeabi_dmul+0x36a>
    2b54:	9b01      	ldr	r3, [sp, #4]
    2b56:	0765      	lsls	r5, r4, #29
    2b58:	08f6      	lsrs	r6, r6, #3
    2b5a:	0264      	lsls	r4, r4, #9
    2b5c:	0542      	lsls	r2, r0, #21
    2b5e:	2701      	movs	r7, #1
    2b60:	432e      	orrs	r6, r5
    2b62:	0b24      	lsrs	r4, r4, #12
    2b64:	0d52      	lsrs	r2, r2, #21
    2b66:	401f      	ands	r7, r3
    2b68:	2000      	movs	r0, #0
    2b6a:	2100      	movs	r1, #0
    2b6c:	0d09      	lsrs	r1, r1, #20
    2b6e:	050d      	lsls	r5, r1, #20
    2b70:	4325      	orrs	r5, r4
    2b72:	4c26      	ldr	r4, [pc, #152]	; (2c0c <__aeabi_dmul+0x3d8>)
    2b74:	0512      	lsls	r2, r2, #20
    2b76:	402c      	ands	r4, r5
    2b78:	4314      	orrs	r4, r2
    2b7a:	0063      	lsls	r3, r4, #1
    2b7c:	1c30      	adds	r0, r6, #0
    2b7e:	085e      	lsrs	r6, r3, #1
    2b80:	07ff      	lsls	r7, r7, #31
    2b82:	1c31      	adds	r1, r6, #0
    2b84:	4339      	orrs	r1, r7
    2b86:	b007      	add	sp, #28
    2b88:	bc3c      	pop	{r2, r3, r4, r5}
    2b8a:	4690      	mov	r8, r2
    2b8c:	4699      	mov	r9, r3
    2b8e:	46a2      	mov	sl, r4
    2b90:	46ab      	mov	fp, r5
    2b92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b94:	465a      	mov	r2, fp
    2b96:	1c2e      	adds	r6, r5, #0
    2b98:	9201      	str	r2, [sp, #4]
    2b9a:	2802      	cmp	r0, #2
    2b9c:	d1ba      	bne.n	2b14 <__aeabi_dmul+0x2e0>
    2b9e:	9e01      	ldr	r6, [sp, #4]
    2ba0:	2701      	movs	r7, #1
    2ba2:	4037      	ands	r7, r6
    2ba4:	4a13      	ldr	r2, [pc, #76]	; (2bf4 <__aeabi_dmul+0x3c0>)
    2ba6:	2400      	movs	r4, #0
    2ba8:	2600      	movs	r6, #0
    2baa:	e7dd      	b.n	2b68 <__aeabi_dmul+0x334>
    2bac:	4654      	mov	r4, sl
    2bae:	9701      	str	r7, [sp, #4]
    2bb0:	9803      	ldr	r0, [sp, #12]
    2bb2:	e7ad      	b.n	2b10 <__aeabi_dmul+0x2dc>
    2bb4:	2601      	movs	r6, #1
    2bb6:	2700      	movs	r7, #0
    2bb8:	4c15      	ldr	r4, [pc, #84]	; (2c10 <__aeabi_dmul+0x3dc>)
    2bba:	4276      	negs	r6, r6
    2bbc:	4a0d      	ldr	r2, [pc, #52]	; (2bf4 <__aeabi_dmul+0x3c0>)
    2bbe:	e7d3      	b.n	2b68 <__aeabi_dmul+0x334>
    2bc0:	1c2e      	adds	r6, r5, #0
    2bc2:	e7a5      	b.n	2b10 <__aeabi_dmul+0x2dc>
    2bc4:	2280      	movs	r2, #128	; 0x80
    2bc6:	0313      	lsls	r3, r2, #12
    2bc8:	4651      	mov	r1, sl
    2bca:	4219      	tst	r1, r3
    2bcc:	d135      	bne.n	2c3a <__aeabi_dmul+0x406>
    2bce:	430b      	orrs	r3, r1
    2bd0:	031d      	lsls	r5, r3, #12
    2bd2:	0b2c      	lsrs	r4, r5, #12
    2bd4:	4a07      	ldr	r2, [pc, #28]	; (2bf4 <__aeabi_dmul+0x3c0>)
    2bd6:	e7c7      	b.n	2b68 <__aeabi_dmul+0x334>
    2bd8:	2180      	movs	r1, #128	; 0x80
    2bda:	024b      	lsls	r3, r1, #9
    2bdc:	449b      	add	fp, r3
    2bde:	e6db      	b.n	2998 <__aeabi_dmul+0x164>
    2be0:	9b01      	ldr	r3, [sp, #4]
    2be2:	2200      	movs	r2, #0
    2be4:	4018      	ands	r0, r3
    2be6:	b2c7      	uxtb	r7, r0
    2be8:	2400      	movs	r4, #0
    2bea:	2600      	movs	r6, #0
    2bec:	e7bc      	b.n	2b68 <__aeabi_dmul+0x334>
    2bee:	46c0      	nop			; (mov r8, r8)
    2bf0:	fffffc0d 	.word	0xfffffc0d
    2bf4:	000007ff 	.word	0x000007ff
    2bf8:	fffffc01 	.word	0xfffffc01
    2bfc:	00003750 	.word	0x00003750
    2c00:	000003ff 	.word	0x000003ff
    2c04:	feffffff 	.word	0xfeffffff
    2c08:	000007fe 	.word	0x000007fe
    2c0c:	800fffff 	.word	0x800fffff
    2c10:	000fffff 	.word	0x000fffff
    2c14:	1c04      	adds	r4, r0, #0
    2c16:	3c28      	subs	r4, #40	; 0x28
    2c18:	40a5      	lsls	r5, r4
    2c1a:	1c2c      	adds	r4, r5, #0
    2c1c:	2500      	movs	r5, #0
    2c1e:	e670      	b.n	2902 <__aeabi_dmul+0xce>
    2c20:	f000 fc9c 	bl	355c <__clzsi2>
    2c24:	3020      	adds	r0, #32
    2c26:	e660      	b.n	28ea <__aeabi_dmul+0xb6>
    2c28:	3b28      	subs	r3, #40	; 0x28
    2c2a:	409e      	lsls	r6, r3
    2c2c:	46b2      	mov	sl, r6
    2c2e:	2600      	movs	r6, #0
    2c30:	e62d      	b.n	288e <__aeabi_dmul+0x5a>
    2c32:	f000 fc93 	bl	355c <__clzsi2>
    2c36:	3020      	adds	r0, #32
    2c38:	e619      	b.n	286e <__aeabi_dmul+0x3a>
    2c3a:	421c      	tst	r4, r3
    2c3c:	d106      	bne.n	2c4c <__aeabi_dmul+0x418>
    2c3e:	431c      	orrs	r4, r3
    2c40:	0326      	lsls	r6, r4, #12
    2c42:	0b34      	lsrs	r4, r6, #12
    2c44:	465f      	mov	r7, fp
    2c46:	1c2e      	adds	r6, r5, #0
    2c48:	4a2e      	ldr	r2, [pc, #184]	; (2d04 <__aeabi_dmul+0x4d0>)
    2c4a:	e78d      	b.n	2b68 <__aeabi_dmul+0x334>
    2c4c:	430b      	orrs	r3, r1
    2c4e:	0318      	lsls	r0, r3, #12
    2c50:	0b04      	lsrs	r4, r0, #12
    2c52:	4a2c      	ldr	r2, [pc, #176]	; (2d04 <__aeabi_dmul+0x4d0>)
    2c54:	e788      	b.n	2b68 <__aeabi_dmul+0x334>
    2c56:	4f2c      	ldr	r7, [pc, #176]	; (2d08 <__aeabi_dmul+0x4d4>)
    2c58:	9d04      	ldr	r5, [sp, #16]
    2c5a:	1b7b      	subs	r3, r7, r5
    2c5c:	2b38      	cmp	r3, #56	; 0x38
    2c5e:	dd06      	ble.n	2c6e <__aeabi_dmul+0x43a>
    2c60:	9e01      	ldr	r6, [sp, #4]
    2c62:	2701      	movs	r7, #1
    2c64:	4037      	ands	r7, r6
    2c66:	2200      	movs	r2, #0
    2c68:	2400      	movs	r4, #0
    2c6a:	2600      	movs	r6, #0
    2c6c:	e77c      	b.n	2b68 <__aeabi_dmul+0x334>
    2c6e:	2b1f      	cmp	r3, #31
    2c70:	dc21      	bgt.n	2cb6 <__aeabi_dmul+0x482>
    2c72:	9a04      	ldr	r2, [sp, #16]
    2c74:	4f25      	ldr	r7, [pc, #148]	; (2d0c <__aeabi_dmul+0x4d8>)
    2c76:	1c35      	adds	r5, r6, #0
    2c78:	19d1      	adds	r1, r2, r7
    2c7a:	1c20      	adds	r0, r4, #0
    2c7c:	408e      	lsls	r6, r1
    2c7e:	40dd      	lsrs	r5, r3
    2c80:	4088      	lsls	r0, r1
    2c82:	1c32      	adds	r2, r6, #0
    2c84:	4328      	orrs	r0, r5
    2c86:	1e56      	subs	r6, r2, #1
    2c88:	41b2      	sbcs	r2, r6
    2c8a:	1c06      	adds	r6, r0, #0
    2c8c:	4316      	orrs	r6, r2
    2c8e:	40dc      	lsrs	r4, r3
    2c90:	230f      	movs	r3, #15
    2c92:	4033      	ands	r3, r6
    2c94:	2b04      	cmp	r3, #4
    2c96:	d005      	beq.n	2ca4 <__aeabi_dmul+0x470>
    2c98:	1d37      	adds	r7, r6, #4
    2c9a:	42b7      	cmp	r7, r6
    2c9c:	41b6      	sbcs	r6, r6
    2c9e:	4271      	negs	r1, r6
    2ca0:	1864      	adds	r4, r4, r1
    2ca2:	1c3e      	adds	r6, r7, #0
    2ca4:	0225      	lsls	r5, r4, #8
    2ca6:	d517      	bpl.n	2cd8 <__aeabi_dmul+0x4a4>
    2ca8:	9b01      	ldr	r3, [sp, #4]
    2caa:	2701      	movs	r7, #1
    2cac:	401f      	ands	r7, r3
    2cae:	2201      	movs	r2, #1
    2cb0:	2400      	movs	r4, #0
    2cb2:	2600      	movs	r6, #0
    2cb4:	e758      	b.n	2b68 <__aeabi_dmul+0x334>
    2cb6:	4816      	ldr	r0, [pc, #88]	; (2d10 <__aeabi_dmul+0x4dc>)
    2cb8:	9a04      	ldr	r2, [sp, #16]
    2cba:	1c21      	adds	r1, r4, #0
    2cbc:	1a87      	subs	r7, r0, r2
    2cbe:	40f9      	lsrs	r1, r7
    2cc0:	1c0d      	adds	r5, r1, #0
    2cc2:	2b20      	cmp	r3, #32
    2cc4:	d012      	beq.n	2cec <__aeabi_dmul+0x4b8>
    2cc6:	4b13      	ldr	r3, [pc, #76]	; (2d14 <__aeabi_dmul+0x4e0>)
    2cc8:	18d0      	adds	r0, r2, r3
    2cca:	4084      	lsls	r4, r0
    2ccc:	4326      	orrs	r6, r4
    2cce:	1e72      	subs	r2, r6, #1
    2cd0:	4196      	sbcs	r6, r2
    2cd2:	432e      	orrs	r6, r5
    2cd4:	2400      	movs	r4, #0
    2cd6:	e7db      	b.n	2c90 <__aeabi_dmul+0x45c>
    2cd8:	9a01      	ldr	r2, [sp, #4]
    2cda:	0765      	lsls	r5, r4, #29
    2cdc:	08f6      	lsrs	r6, r6, #3
    2cde:	0260      	lsls	r0, r4, #9
    2ce0:	2701      	movs	r7, #1
    2ce2:	4017      	ands	r7, r2
    2ce4:	432e      	orrs	r6, r5
    2ce6:	0b04      	lsrs	r4, r0, #12
    2ce8:	2200      	movs	r2, #0
    2cea:	e73d      	b.n	2b68 <__aeabi_dmul+0x334>
    2cec:	2400      	movs	r4, #0
    2cee:	e7ed      	b.n	2ccc <__aeabi_dmul+0x498>
    2cf0:	2180      	movs	r1, #128	; 0x80
    2cf2:	030f      	lsls	r7, r1, #12
    2cf4:	433c      	orrs	r4, r7
    2cf6:	9801      	ldr	r0, [sp, #4]
    2cf8:	0324      	lsls	r4, r4, #12
    2cfa:	2701      	movs	r7, #1
    2cfc:	0b24      	lsrs	r4, r4, #12
    2cfe:	4007      	ands	r7, r0
    2d00:	4a00      	ldr	r2, [pc, #0]	; (2d04 <__aeabi_dmul+0x4d0>)
    2d02:	e731      	b.n	2b68 <__aeabi_dmul+0x334>
    2d04:	000007ff 	.word	0x000007ff
    2d08:	fffffc02 	.word	0xfffffc02
    2d0c:	0000041e 	.word	0x0000041e
    2d10:	fffffbe2 	.word	0xfffffbe2
    2d14:	0000043e 	.word	0x0000043e

00002d18 <__aeabi_dsub>:
    2d18:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d1a:	4657      	mov	r7, sl
    2d1c:	464e      	mov	r6, r9
    2d1e:	4645      	mov	r5, r8
    2d20:	b4e0      	push	{r5, r6, r7}
    2d22:	1c07      	adds	r7, r0, #0
    2d24:	030d      	lsls	r5, r1, #12
    2d26:	004e      	lsls	r6, r1, #1
    2d28:	0a68      	lsrs	r0, r5, #9
    2d2a:	0fcc      	lsrs	r4, r1, #31
    2d2c:	0f79      	lsrs	r1, r7, #29
    2d2e:	4308      	orrs	r0, r1
    2d30:	4684      	mov	ip, r0
    2d32:	1c11      	adds	r1, r2, #0
    2d34:	0318      	lsls	r0, r3, #12
    2d36:	005a      	lsls	r2, r3, #1
    2d38:	00fd      	lsls	r5, r7, #3
    2d3a:	0a40      	lsrs	r0, r0, #9
    2d3c:	0fdf      	lsrs	r7, r3, #31
    2d3e:	0f4b      	lsrs	r3, r1, #29
    2d40:	4318      	orrs	r0, r3
    2d42:	4bca      	ldr	r3, [pc, #808]	; (306c <__aeabi_dsub+0x354>)
    2d44:	00c9      	lsls	r1, r1, #3
    2d46:	0d76      	lsrs	r6, r6, #21
    2d48:	0d52      	lsrs	r2, r2, #21
    2d4a:	468a      	mov	sl, r1
    2d4c:	429a      	cmp	r2, r3
    2d4e:	d100      	bne.n	2d52 <__aeabi_dsub+0x3a>
    2d50:	e0e0      	b.n	2f14 <__aeabi_dsub+0x1fc>
    2d52:	2301      	movs	r3, #1
    2d54:	405f      	eors	r7, r3
    2d56:	46b9      	mov	r9, r7
    2d58:	42bc      	cmp	r4, r7
    2d5a:	d100      	bne.n	2d5e <__aeabi_dsub+0x46>
    2d5c:	e0a8      	b.n	2eb0 <__aeabi_dsub+0x198>
    2d5e:	1ab7      	subs	r7, r6, r2
    2d60:	2f00      	cmp	r7, #0
    2d62:	dc00      	bgt.n	2d66 <__aeabi_dsub+0x4e>
    2d64:	e110      	b.n	2f88 <__aeabi_dsub+0x270>
    2d66:	2a00      	cmp	r2, #0
    2d68:	d112      	bne.n	2d90 <__aeabi_dsub+0x78>
    2d6a:	4652      	mov	r2, sl
    2d6c:	4302      	orrs	r2, r0
    2d6e:	d100      	bne.n	2d72 <__aeabi_dsub+0x5a>
    2d70:	e0d4      	b.n	2f1c <__aeabi_dsub+0x204>
    2d72:	3f01      	subs	r7, #1
    2d74:	2f00      	cmp	r7, #0
    2d76:	d000      	beq.n	2d7a <__aeabi_dsub+0x62>
    2d78:	e160      	b.n	303c <__aeabi_dsub+0x324>
    2d7a:	4651      	mov	r1, sl
    2d7c:	1a6f      	subs	r7, r5, r1
    2d7e:	42bd      	cmp	r5, r7
    2d80:	41ad      	sbcs	r5, r5
    2d82:	4662      	mov	r2, ip
    2d84:	426b      	negs	r3, r5
    2d86:	1a10      	subs	r0, r2, r0
    2d88:	1c3d      	adds	r5, r7, #0
    2d8a:	1ac3      	subs	r3, r0, r3
    2d8c:	1c37      	adds	r7, r6, #0
    2d8e:	e024      	b.n	2dda <__aeabi_dsub+0xc2>
    2d90:	4ab6      	ldr	r2, [pc, #728]	; (306c <__aeabi_dsub+0x354>)
    2d92:	4296      	cmp	r6, r2
    2d94:	d100      	bne.n	2d98 <__aeabi_dsub+0x80>
    2d96:	e0e3      	b.n	2f60 <__aeabi_dsub+0x248>
    2d98:	2180      	movs	r1, #128	; 0x80
    2d9a:	040b      	lsls	r3, r1, #16
    2d9c:	4318      	orrs	r0, r3
    2d9e:	2f38      	cmp	r7, #56	; 0x38
    2da0:	dd00      	ble.n	2da4 <__aeabi_dsub+0x8c>
    2da2:	e123      	b.n	2fec <__aeabi_dsub+0x2d4>
    2da4:	2f1f      	cmp	r7, #31
    2da6:	dd00      	ble.n	2daa <__aeabi_dsub+0x92>
    2da8:	e166      	b.n	3078 <__aeabi_dsub+0x360>
    2daa:	2120      	movs	r1, #32
    2dac:	1bc9      	subs	r1, r1, r7
    2dae:	1c02      	adds	r2, r0, #0
    2db0:	4653      	mov	r3, sl
    2db2:	408a      	lsls	r2, r1
    2db4:	40fb      	lsrs	r3, r7
    2db6:	431a      	orrs	r2, r3
    2db8:	4653      	mov	r3, sl
    2dba:	408b      	lsls	r3, r1
    2dbc:	1c19      	adds	r1, r3, #0
    2dbe:	1e4b      	subs	r3, r1, #1
    2dc0:	4199      	sbcs	r1, r3
    2dc2:	1c03      	adds	r3, r0, #0
    2dc4:	430a      	orrs	r2, r1
    2dc6:	40fb      	lsrs	r3, r7
    2dc8:	1aaa      	subs	r2, r5, r2
    2dca:	4667      	mov	r7, ip
    2dcc:	4295      	cmp	r5, r2
    2dce:	41ad      	sbcs	r5, r5
    2dd0:	1af8      	subs	r0, r7, r3
    2dd2:	426b      	negs	r3, r5
    2dd4:	1ac3      	subs	r3, r0, r3
    2dd6:	1c15      	adds	r5, r2, #0
    2dd8:	1c37      	adds	r7, r6, #0
    2dda:	021a      	lsls	r2, r3, #8
    2ddc:	d400      	bmi.n	2de0 <__aeabi_dsub+0xc8>
    2dde:	e0c7      	b.n	2f70 <__aeabi_dsub+0x258>
    2de0:	025e      	lsls	r6, r3, #9
    2de2:	0a71      	lsrs	r1, r6, #9
    2de4:	4688      	mov	r8, r1
    2de6:	4642      	mov	r2, r8
    2de8:	2a00      	cmp	r2, #0
    2dea:	d100      	bne.n	2dee <__aeabi_dsub+0xd6>
    2dec:	e0f0      	b.n	2fd0 <__aeabi_dsub+0x2b8>
    2dee:	4640      	mov	r0, r8
    2df0:	f000 fbb4 	bl	355c <__clzsi2>
    2df4:	1c02      	adds	r2, r0, #0
    2df6:	3a08      	subs	r2, #8
    2df8:	2a1f      	cmp	r2, #31
    2dfa:	dd00      	ble.n	2dfe <__aeabi_dsub+0xe6>
    2dfc:	e0f1      	b.n	2fe2 <__aeabi_dsub+0x2ca>
    2dfe:	2328      	movs	r3, #40	; 0x28
    2e00:	1a18      	subs	r0, r3, r0
    2e02:	1c2e      	adds	r6, r5, #0
    2e04:	4641      	mov	r1, r8
    2e06:	40c6      	lsrs	r6, r0
    2e08:	4091      	lsls	r1, r2
    2e0a:	1c33      	adds	r3, r6, #0
    2e0c:	430b      	orrs	r3, r1
    2e0e:	4095      	lsls	r5, r2
    2e10:	4297      	cmp	r7, r2
    2e12:	dd00      	ble.n	2e16 <__aeabi_dsub+0xfe>
    2e14:	e0a9      	b.n	2f6a <__aeabi_dsub+0x252>
    2e16:	1bd0      	subs	r0, r2, r7
    2e18:	1c41      	adds	r1, r0, #1
    2e1a:	291f      	cmp	r1, #31
    2e1c:	dd00      	ble.n	2e20 <__aeabi_dsub+0x108>
    2e1e:	e112      	b.n	3046 <__aeabi_dsub+0x32e>
    2e20:	271f      	movs	r7, #31
    2e22:	1a3a      	subs	r2, r7, r0
    2e24:	1c2e      	adds	r6, r5, #0
    2e26:	1c18      	adds	r0, r3, #0
    2e28:	40ce      	lsrs	r6, r1
    2e2a:	4090      	lsls	r0, r2
    2e2c:	4095      	lsls	r5, r2
    2e2e:	4330      	orrs	r0, r6
    2e30:	1e6a      	subs	r2, r5, #1
    2e32:	4195      	sbcs	r5, r2
    2e34:	40cb      	lsrs	r3, r1
    2e36:	4305      	orrs	r5, r0
    2e38:	2101      	movs	r1, #1
    2e3a:	2700      	movs	r7, #0
    2e3c:	260f      	movs	r6, #15
    2e3e:	402e      	ands	r6, r5
    2e40:	2e04      	cmp	r6, #4
    2e42:	d100      	bne.n	2e46 <__aeabi_dsub+0x12e>
    2e44:	e072      	b.n	2f2c <__aeabi_dsub+0x214>
    2e46:	1d2e      	adds	r6, r5, #4
    2e48:	42ae      	cmp	r6, r5
    2e4a:	41ad      	sbcs	r5, r5
    2e4c:	4268      	negs	r0, r5
    2e4e:	2280      	movs	r2, #128	; 0x80
    2e50:	181b      	adds	r3, r3, r0
    2e52:	2501      	movs	r5, #1
    2e54:	0410      	lsls	r0, r2, #16
    2e56:	4018      	ands	r0, r3
    2e58:	402c      	ands	r4, r5
    2e5a:	2800      	cmp	r0, #0
    2e5c:	d007      	beq.n	2e6e <__aeabi_dsub+0x156>
    2e5e:	4f83      	ldr	r7, [pc, #524]	; (306c <__aeabi_dsub+0x354>)
    2e60:	42b9      	cmp	r1, r7
    2e62:	d100      	bne.n	2e66 <__aeabi_dsub+0x14e>
    2e64:	e0b0      	b.n	2fc8 <__aeabi_dsub+0x2b0>
    2e66:	4a82      	ldr	r2, [pc, #520]	; (3070 <__aeabi_dsub+0x358>)
    2e68:	1c0f      	adds	r7, r1, #0
    2e6a:	4013      	ands	r3, r2
    2e6c:	3101      	adds	r1, #1
    2e6e:	08f2      	lsrs	r2, r6, #3
    2e70:	0549      	lsls	r1, r1, #21
    2e72:	075e      	lsls	r6, r3, #29
    2e74:	4332      	orrs	r2, r6
    2e76:	08db      	lsrs	r3, r3, #3
    2e78:	0d48      	lsrs	r0, r1, #21
    2e7a:	2801      	cmp	r0, #1
    2e7c:	dc00      	bgt.n	2e80 <__aeabi_dsub+0x168>
    2e7e:	e079      	b.n	2f74 <__aeabi_dsub+0x25c>
    2e80:	031b      	lsls	r3, r3, #12
    2e82:	0578      	lsls	r0, r7, #21
    2e84:	0b1e      	lsrs	r6, r3, #12
    2e86:	0d47      	lsrs	r7, r0, #21
    2e88:	2000      	movs	r0, #0
    2e8a:	2100      	movs	r1, #0
    2e8c:	0d09      	lsrs	r1, r1, #20
    2e8e:	057d      	lsls	r5, r7, #21
    2e90:	050b      	lsls	r3, r1, #20
    2e92:	4f78      	ldr	r7, [pc, #480]	; (3074 <__aeabi_dsub+0x35c>)
    2e94:	431e      	orrs	r6, r3
    2e96:	1c10      	adds	r0, r2, #0
    2e98:	4037      	ands	r7, r6
    2e9a:	086a      	lsrs	r2, r5, #1
    2e9c:	4317      	orrs	r7, r2
    2e9e:	007e      	lsls	r6, r7, #1
    2ea0:	0871      	lsrs	r1, r6, #1
    2ea2:	07e4      	lsls	r4, r4, #31
    2ea4:	4321      	orrs	r1, r4
    2ea6:	bc1c      	pop	{r2, r3, r4}
    2ea8:	4690      	mov	r8, r2
    2eaa:	4699      	mov	r9, r3
    2eac:	46a2      	mov	sl, r4
    2eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2eb0:	1ab3      	subs	r3, r6, r2
    2eb2:	2b00      	cmp	r3, #0
    2eb4:	dc00      	bgt.n	2eb8 <__aeabi_dsub+0x1a0>
    2eb6:	e0a6      	b.n	3006 <__aeabi_dsub+0x2ee>
    2eb8:	2a00      	cmp	r2, #0
    2eba:	d03e      	beq.n	2f3a <__aeabi_dsub+0x222>
    2ebc:	4a6b      	ldr	r2, [pc, #428]	; (306c <__aeabi_dsub+0x354>)
    2ebe:	4296      	cmp	r6, r2
    2ec0:	d04e      	beq.n	2f60 <__aeabi_dsub+0x248>
    2ec2:	2180      	movs	r1, #128	; 0x80
    2ec4:	040f      	lsls	r7, r1, #16
    2ec6:	4338      	orrs	r0, r7
    2ec8:	2b38      	cmp	r3, #56	; 0x38
    2eca:	dc00      	bgt.n	2ece <__aeabi_dsub+0x1b6>
    2ecc:	e118      	b.n	3100 <__aeabi_dsub+0x3e8>
    2ece:	4653      	mov	r3, sl
    2ed0:	4318      	orrs	r0, r3
    2ed2:	2700      	movs	r7, #0
    2ed4:	2200      	movs	r2, #0
    2ed6:	2800      	cmp	r0, #0
    2ed8:	d000      	beq.n	2edc <__aeabi_dsub+0x1c4>
    2eda:	2201      	movs	r2, #1
    2edc:	1952      	adds	r2, r2, r5
    2ede:	42aa      	cmp	r2, r5
    2ee0:	41ad      	sbcs	r5, r5
    2ee2:	4467      	add	r7, ip
    2ee4:	426b      	negs	r3, r5
    2ee6:	18fb      	adds	r3, r7, r3
    2ee8:	1c15      	adds	r5, r2, #0
    2eea:	1c37      	adds	r7, r6, #0
    2eec:	021e      	lsls	r6, r3, #8
    2eee:	d53f      	bpl.n	2f70 <__aeabi_dsub+0x258>
    2ef0:	485e      	ldr	r0, [pc, #376]	; (306c <__aeabi_dsub+0x354>)
    2ef2:	1c7e      	adds	r6, r7, #1
    2ef4:	4286      	cmp	r6, r0
    2ef6:	d100      	bne.n	2efa <__aeabi_dsub+0x1e2>
    2ef8:	e17b      	b.n	31f2 <__aeabi_dsub+0x4da>
    2efa:	495d      	ldr	r1, [pc, #372]	; (3070 <__aeabi_dsub+0x358>)
    2efc:	2201      	movs	r2, #1
    2efe:	402a      	ands	r2, r5
    2f00:	400b      	ands	r3, r1
    2f02:	0868      	lsrs	r0, r5, #1
    2f04:	1c15      	adds	r5, r2, #0
    2f06:	07d9      	lsls	r1, r3, #31
    2f08:	4305      	orrs	r5, r0
    2f0a:	430d      	orrs	r5, r1
    2f0c:	085b      	lsrs	r3, r3, #1
    2f0e:	1cb9      	adds	r1, r7, #2
    2f10:	1c37      	adds	r7, r6, #0
    2f12:	e793      	b.n	2e3c <__aeabi_dsub+0x124>
    2f14:	4301      	orrs	r1, r0
    2f16:	d100      	bne.n	2f1a <__aeabi_dsub+0x202>
    2f18:	e71b      	b.n	2d52 <__aeabi_dsub+0x3a>
    2f1a:	e71c      	b.n	2d56 <__aeabi_dsub+0x3e>
    2f1c:	1c71      	adds	r1, r6, #1
    2f1e:	1c37      	adds	r7, r6, #0
    2f20:	260f      	movs	r6, #15
    2f22:	4663      	mov	r3, ip
    2f24:	402e      	ands	r6, r5
    2f26:	2e04      	cmp	r6, #4
    2f28:	d000      	beq.n	2f2c <__aeabi_dsub+0x214>
    2f2a:	e78c      	b.n	2e46 <__aeabi_dsub+0x12e>
    2f2c:	2280      	movs	r2, #128	; 0x80
    2f2e:	2601      	movs	r6, #1
    2f30:	0410      	lsls	r0, r2, #16
    2f32:	4034      	ands	r4, r6
    2f34:	4018      	ands	r0, r3
    2f36:	1c2e      	adds	r6, r5, #0
    2f38:	e78f      	b.n	2e5a <__aeabi_dsub+0x142>
    2f3a:	4652      	mov	r2, sl
    2f3c:	4302      	orrs	r2, r0
    2f3e:	d0ed      	beq.n	2f1c <__aeabi_dsub+0x204>
    2f40:	3b01      	subs	r3, #1
    2f42:	2b00      	cmp	r3, #0
    2f44:	d109      	bne.n	2f5a <__aeabi_dsub+0x242>
    2f46:	4657      	mov	r7, sl
    2f48:	1979      	adds	r1, r7, r5
    2f4a:	42a9      	cmp	r1, r5
    2f4c:	4192      	sbcs	r2, r2
    2f4e:	4255      	negs	r5, r2
    2f50:	4460      	add	r0, ip
    2f52:	1943      	adds	r3, r0, r5
    2f54:	1c37      	adds	r7, r6, #0
    2f56:	1c0d      	adds	r5, r1, #0
    2f58:	e7c8      	b.n	2eec <__aeabi_dsub+0x1d4>
    2f5a:	4944      	ldr	r1, [pc, #272]	; (306c <__aeabi_dsub+0x354>)
    2f5c:	428e      	cmp	r6, r1
    2f5e:	d1b3      	bne.n	2ec8 <__aeabi_dsub+0x1b0>
    2f60:	2080      	movs	r0, #128	; 0x80
    2f62:	4663      	mov	r3, ip
    2f64:	0101      	lsls	r1, r0, #4
    2f66:	1c37      	adds	r7, r6, #0
    2f68:	e768      	b.n	2e3c <__aeabi_dsub+0x124>
    2f6a:	1abf      	subs	r7, r7, r2
    2f6c:	4a40      	ldr	r2, [pc, #256]	; (3070 <__aeabi_dsub+0x358>)
    2f6e:	4013      	ands	r3, r2
    2f70:	1c79      	adds	r1, r7, #1
    2f72:	e763      	b.n	2e3c <__aeabi_dsub+0x124>
    2f74:	1c15      	adds	r5, r2, #0
    2f76:	431d      	orrs	r5, r3
    2f78:	d100      	bne.n	2f7c <__aeabi_dsub+0x264>
    2f7a:	e221      	b.n	33c0 <__aeabi_dsub+0x6a8>
    2f7c:	2f00      	cmp	r7, #0
    2f7e:	d03e      	beq.n	2ffe <__aeabi_dsub+0x2e6>
    2f80:	2680      	movs	r6, #128	; 0x80
    2f82:	0331      	lsls	r1, r6, #12
    2f84:	430b      	orrs	r3, r1
    2f86:	e77b      	b.n	2e80 <__aeabi_dsub+0x168>
    2f88:	2f00      	cmp	r7, #0
    2f8a:	d000      	beq.n	2f8e <__aeabi_dsub+0x276>
    2f8c:	e086      	b.n	309c <__aeabi_dsub+0x384>
    2f8e:	1c72      	adds	r2, r6, #1
    2f90:	0551      	lsls	r1, r2, #21
    2f92:	0d4b      	lsrs	r3, r1, #21
    2f94:	2b01      	cmp	r3, #1
    2f96:	dc00      	bgt.n	2f9a <__aeabi_dsub+0x282>
    2f98:	e0f0      	b.n	317c <__aeabi_dsub+0x464>
    2f9a:	4657      	mov	r7, sl
    2f9c:	1bea      	subs	r2, r5, r7
    2f9e:	4295      	cmp	r5, r2
    2fa0:	419b      	sbcs	r3, r3
    2fa2:	4667      	mov	r7, ip
    2fa4:	1a39      	subs	r1, r7, r0
    2fa6:	425b      	negs	r3, r3
    2fa8:	1ac9      	subs	r1, r1, r3
    2faa:	4688      	mov	r8, r1
    2fac:	020b      	lsls	r3, r1, #8
    2fae:	d400      	bmi.n	2fb2 <__aeabi_dsub+0x29a>
    2fb0:	e09d      	b.n	30ee <__aeabi_dsub+0x3d6>
    2fb2:	4654      	mov	r4, sl
    2fb4:	1b65      	subs	r5, r4, r5
    2fb6:	45aa      	cmp	sl, r5
    2fb8:	4192      	sbcs	r2, r2
    2fba:	1bc0      	subs	r0, r0, r7
    2fbc:	4257      	negs	r7, r2
    2fbe:	1bc3      	subs	r3, r0, r7
    2fc0:	4698      	mov	r8, r3
    2fc2:	1c37      	adds	r7, r6, #0
    2fc4:	464c      	mov	r4, r9
    2fc6:	e70e      	b.n	2de6 <__aeabi_dsub+0xce>
    2fc8:	1c0f      	adds	r7, r1, #0
    2fca:	2600      	movs	r6, #0
    2fcc:	2200      	movs	r2, #0
    2fce:	e75b      	b.n	2e88 <__aeabi_dsub+0x170>
    2fd0:	1c28      	adds	r0, r5, #0
    2fd2:	f000 fac3 	bl	355c <__clzsi2>
    2fd6:	3020      	adds	r0, #32
    2fd8:	1c02      	adds	r2, r0, #0
    2fda:	3a08      	subs	r2, #8
    2fdc:	2a1f      	cmp	r2, #31
    2fde:	dc00      	bgt.n	2fe2 <__aeabi_dsub+0x2ca>
    2fe0:	e70d      	b.n	2dfe <__aeabi_dsub+0xe6>
    2fe2:	3828      	subs	r0, #40	; 0x28
    2fe4:	4085      	lsls	r5, r0
    2fe6:	1c2b      	adds	r3, r5, #0
    2fe8:	2500      	movs	r5, #0
    2fea:	e711      	b.n	2e10 <__aeabi_dsub+0xf8>
    2fec:	4657      	mov	r7, sl
    2fee:	4338      	orrs	r0, r7
    2ff0:	2300      	movs	r3, #0
    2ff2:	2200      	movs	r2, #0
    2ff4:	2800      	cmp	r0, #0
    2ff6:	d100      	bne.n	2ffa <__aeabi_dsub+0x2e2>
    2ff8:	e6e6      	b.n	2dc8 <__aeabi_dsub+0xb0>
    2ffa:	2201      	movs	r2, #1
    2ffc:	e6e4      	b.n	2dc8 <__aeabi_dsub+0xb0>
    2ffe:	031d      	lsls	r5, r3, #12
    3000:	0b2e      	lsrs	r6, r5, #12
    3002:	2700      	movs	r7, #0
    3004:	e740      	b.n	2e88 <__aeabi_dsub+0x170>
    3006:	2b00      	cmp	r3, #0
    3008:	d000      	beq.n	300c <__aeabi_dsub+0x2f4>
    300a:	e0d9      	b.n	31c0 <__aeabi_dsub+0x4a8>
    300c:	1c77      	adds	r7, r6, #1
    300e:	0579      	lsls	r1, r7, #21
    3010:	0d4a      	lsrs	r2, r1, #21
    3012:	2a01      	cmp	r2, #1
    3014:	dc00      	bgt.n	3018 <__aeabi_dsub+0x300>
    3016:	e095      	b.n	3144 <__aeabi_dsub+0x42c>
    3018:	4b14      	ldr	r3, [pc, #80]	; (306c <__aeabi_dsub+0x354>)
    301a:	429f      	cmp	r7, r3
    301c:	d100      	bne.n	3020 <__aeabi_dsub+0x308>
    301e:	e0fe      	b.n	321e <__aeabi_dsub+0x506>
    3020:	4651      	mov	r1, sl
    3022:	1949      	adds	r1, r1, r5
    3024:	42a9      	cmp	r1, r5
    3026:	41ad      	sbcs	r5, r5
    3028:	4662      	mov	r2, ip
    302a:	426b      	negs	r3, r5
    302c:	1880      	adds	r0, r0, r2
    302e:	18c2      	adds	r2, r0, r3
    3030:	0849      	lsrs	r1, r1, #1
    3032:	07d5      	lsls	r5, r2, #31
    3034:	430d      	orrs	r5, r1
    3036:	0853      	lsrs	r3, r2, #1
    3038:	1cb1      	adds	r1, r6, #2
    303a:	e6ff      	b.n	2e3c <__aeabi_dsub+0x124>
    303c:	490b      	ldr	r1, [pc, #44]	; (306c <__aeabi_dsub+0x354>)
    303e:	428e      	cmp	r6, r1
    3040:	d000      	beq.n	3044 <__aeabi_dsub+0x32c>
    3042:	e6ac      	b.n	2d9e <__aeabi_dsub+0x86>
    3044:	e78c      	b.n	2f60 <__aeabi_dsub+0x248>
    3046:	1c06      	adds	r6, r0, #0
    3048:	3e1f      	subs	r6, #31
    304a:	1c1f      	adds	r7, r3, #0
    304c:	40f7      	lsrs	r7, r6
    304e:	1c3e      	adds	r6, r7, #0
    3050:	2920      	cmp	r1, #32
    3052:	d073      	beq.n	313c <__aeabi_dsub+0x424>
    3054:	223f      	movs	r2, #63	; 0x3f
    3056:	1a10      	subs	r0, r2, r0
    3058:	4083      	lsls	r3, r0
    305a:	431d      	orrs	r5, r3
    305c:	1e6b      	subs	r3, r5, #1
    305e:	419d      	sbcs	r5, r3
    3060:	4335      	orrs	r5, r6
    3062:	2101      	movs	r1, #1
    3064:	2300      	movs	r3, #0
    3066:	2700      	movs	r7, #0
    3068:	e6e8      	b.n	2e3c <__aeabi_dsub+0x124>
    306a:	46c0      	nop			; (mov r8, r8)
    306c:	000007ff 	.word	0x000007ff
    3070:	ff7fffff 	.word	0xff7fffff
    3074:	800fffff 	.word	0x800fffff
    3078:	1c3b      	adds	r3, r7, #0
    307a:	3b20      	subs	r3, #32
    307c:	1c01      	adds	r1, r0, #0
    307e:	40d9      	lsrs	r1, r3
    3080:	1c0b      	adds	r3, r1, #0
    3082:	2f20      	cmp	r7, #32
    3084:	d05c      	beq.n	3140 <__aeabi_dsub+0x428>
    3086:	2240      	movs	r2, #64	; 0x40
    3088:	1bd7      	subs	r7, r2, r7
    308a:	40b8      	lsls	r0, r7
    308c:	1c02      	adds	r2, r0, #0
    308e:	4650      	mov	r0, sl
    3090:	4302      	orrs	r2, r0
    3092:	1e51      	subs	r1, r2, #1
    3094:	418a      	sbcs	r2, r1
    3096:	431a      	orrs	r2, r3
    3098:	2300      	movs	r3, #0
    309a:	e695      	b.n	2dc8 <__aeabi_dsub+0xb0>
    309c:	427f      	negs	r7, r7
    309e:	2e00      	cmp	r6, #0
    30a0:	d040      	beq.n	3124 <__aeabi_dsub+0x40c>
    30a2:	4cca      	ldr	r4, [pc, #808]	; (33cc <__aeabi_dsub+0x6b4>)
    30a4:	42a2      	cmp	r2, r4
    30a6:	d100      	bne.n	30aa <__aeabi_dsub+0x392>
    30a8:	e11f      	b.n	32ea <__aeabi_dsub+0x5d2>
    30aa:	2180      	movs	r1, #128	; 0x80
    30ac:	4666      	mov	r6, ip
    30ae:	040b      	lsls	r3, r1, #16
    30b0:	431e      	orrs	r6, r3
    30b2:	46b4      	mov	ip, r6
    30b4:	2f38      	cmp	r7, #56	; 0x38
    30b6:	dd00      	ble.n	30ba <__aeabi_dsub+0x3a2>
    30b8:	e0a9      	b.n	320e <__aeabi_dsub+0x4f6>
    30ba:	2f1f      	cmp	r7, #31
    30bc:	dd00      	ble.n	30c0 <__aeabi_dsub+0x3a8>
    30be:	e13d      	b.n	333c <__aeabi_dsub+0x624>
    30c0:	2320      	movs	r3, #32
    30c2:	1bde      	subs	r6, r3, r7
    30c4:	1c29      	adds	r1, r5, #0
    30c6:	4664      	mov	r4, ip
    30c8:	40b4      	lsls	r4, r6
    30ca:	40f9      	lsrs	r1, r7
    30cc:	40b5      	lsls	r5, r6
    30ce:	1e6b      	subs	r3, r5, #1
    30d0:	419d      	sbcs	r5, r3
    30d2:	4321      	orrs	r1, r4
    30d4:	4663      	mov	r3, ip
    30d6:	430d      	orrs	r5, r1
    30d8:	40fb      	lsrs	r3, r7
    30da:	4657      	mov	r7, sl
    30dc:	1b7d      	subs	r5, r7, r5
    30de:	1ac0      	subs	r0, r0, r3
    30e0:	45aa      	cmp	sl, r5
    30e2:	419b      	sbcs	r3, r3
    30e4:	425f      	negs	r7, r3
    30e6:	1bc3      	subs	r3, r0, r7
    30e8:	464c      	mov	r4, r9
    30ea:	1c17      	adds	r7, r2, #0
    30ec:	e675      	b.n	2dda <__aeabi_dsub+0xc2>
    30ee:	1c0d      	adds	r5, r1, #0
    30f0:	4315      	orrs	r5, r2
    30f2:	d120      	bne.n	3136 <__aeabi_dsub+0x41e>
    30f4:	2400      	movs	r4, #0
    30f6:	2101      	movs	r1, #1
    30f8:	2300      	movs	r3, #0
    30fa:	2604      	movs	r6, #4
    30fc:	2700      	movs	r7, #0
    30fe:	e6b6      	b.n	2e6e <__aeabi_dsub+0x156>
    3100:	2b1f      	cmp	r3, #31
    3102:	dc4a      	bgt.n	319a <__aeabi_dsub+0x482>
    3104:	2120      	movs	r1, #32
    3106:	1ac9      	subs	r1, r1, r3
    3108:	1c07      	adds	r7, r0, #0
    310a:	4652      	mov	r2, sl
    310c:	408f      	lsls	r7, r1
    310e:	40da      	lsrs	r2, r3
    3110:	433a      	orrs	r2, r7
    3112:	4657      	mov	r7, sl
    3114:	408f      	lsls	r7, r1
    3116:	1c39      	adds	r1, r7, #0
    3118:	1e4f      	subs	r7, r1, #1
    311a:	41b9      	sbcs	r1, r7
    311c:	40d8      	lsrs	r0, r3
    311e:	430a      	orrs	r2, r1
    3120:	1c07      	adds	r7, r0, #0
    3122:	e6db      	b.n	2edc <__aeabi_dsub+0x1c4>
    3124:	4664      	mov	r4, ip
    3126:	432c      	orrs	r4, r5
    3128:	d169      	bne.n	31fe <__aeabi_dsub+0x4e6>
    312a:	1c51      	adds	r1, r2, #1
    312c:	1c03      	adds	r3, r0, #0
    312e:	4655      	mov	r5, sl
    3130:	1c17      	adds	r7, r2, #0
    3132:	464c      	mov	r4, r9
    3134:	e682      	b.n	2e3c <__aeabi_dsub+0x124>
    3136:	1c15      	adds	r5, r2, #0
    3138:	1c37      	adds	r7, r6, #0
    313a:	e654      	b.n	2de6 <__aeabi_dsub+0xce>
    313c:	2300      	movs	r3, #0
    313e:	e78c      	b.n	305a <__aeabi_dsub+0x342>
    3140:	2200      	movs	r2, #0
    3142:	e7a4      	b.n	308e <__aeabi_dsub+0x376>
    3144:	4667      	mov	r7, ip
    3146:	432f      	orrs	r7, r5
    3148:	2e00      	cmp	r6, #0
    314a:	d000      	beq.n	314e <__aeabi_dsub+0x436>
    314c:	e0d4      	b.n	32f8 <__aeabi_dsub+0x5e0>
    314e:	2f00      	cmp	r7, #0
    3150:	d100      	bne.n	3154 <__aeabi_dsub+0x43c>
    3152:	e126      	b.n	33a2 <__aeabi_dsub+0x68a>
    3154:	4653      	mov	r3, sl
    3156:	4303      	orrs	r3, r0
    3158:	d100      	bne.n	315c <__aeabi_dsub+0x444>
    315a:	e0e4      	b.n	3326 <__aeabi_dsub+0x60e>
    315c:	4651      	mov	r1, sl
    315e:	194f      	adds	r7, r1, r5
    3160:	42af      	cmp	r7, r5
    3162:	41ad      	sbcs	r5, r5
    3164:	4460      	add	r0, ip
    3166:	426e      	negs	r6, r5
    3168:	1983      	adds	r3, r0, r6
    316a:	021e      	lsls	r6, r3, #8
    316c:	d400      	bmi.n	3170 <__aeabi_dsub+0x458>
    316e:	e14e      	b.n	340e <__aeabi_dsub+0x6f6>
    3170:	4897      	ldr	r0, [pc, #604]	; (33d0 <__aeabi_dsub+0x6b8>)
    3172:	1c3d      	adds	r5, r7, #0
    3174:	4003      	ands	r3, r0
    3176:	2102      	movs	r1, #2
    3178:	2701      	movs	r7, #1
    317a:	e65f      	b.n	2e3c <__aeabi_dsub+0x124>
    317c:	4661      	mov	r1, ip
    317e:	4329      	orrs	r1, r5
    3180:	2e00      	cmp	r6, #0
    3182:	d129      	bne.n	31d8 <__aeabi_dsub+0x4c0>
    3184:	2900      	cmp	r1, #0
    3186:	d176      	bne.n	3276 <__aeabi_dsub+0x55e>
    3188:	4651      	mov	r1, sl
    318a:	4301      	orrs	r1, r0
    318c:	d0b2      	beq.n	30f4 <__aeabi_dsub+0x3dc>
    318e:	1c03      	adds	r3, r0, #0
    3190:	4655      	mov	r5, sl
    3192:	464c      	mov	r4, r9
    3194:	2101      	movs	r1, #1
    3196:	2700      	movs	r7, #0
    3198:	e650      	b.n	2e3c <__aeabi_dsub+0x124>
    319a:	1c1f      	adds	r7, r3, #0
    319c:	3f20      	subs	r7, #32
    319e:	1c01      	adds	r1, r0, #0
    31a0:	40f9      	lsrs	r1, r7
    31a2:	1c0f      	adds	r7, r1, #0
    31a4:	2b20      	cmp	r3, #32
    31a6:	d100      	bne.n	31aa <__aeabi_dsub+0x492>
    31a8:	e0c6      	b.n	3338 <__aeabi_dsub+0x620>
    31aa:	2240      	movs	r2, #64	; 0x40
    31ac:	1ad3      	subs	r3, r2, r3
    31ae:	4098      	lsls	r0, r3
    31b0:	1c02      	adds	r2, r0, #0
    31b2:	4650      	mov	r0, sl
    31b4:	4302      	orrs	r2, r0
    31b6:	1e53      	subs	r3, r2, #1
    31b8:	419a      	sbcs	r2, r3
    31ba:	433a      	orrs	r2, r7
    31bc:	2700      	movs	r7, #0
    31be:	e68d      	b.n	2edc <__aeabi_dsub+0x1c4>
    31c0:	425b      	negs	r3, r3
    31c2:	2e00      	cmp	r6, #0
    31c4:	d130      	bne.n	3228 <__aeabi_dsub+0x510>
    31c6:	4667      	mov	r7, ip
    31c8:	432f      	orrs	r7, r5
    31ca:	d000      	beq.n	31ce <__aeabi_dsub+0x4b6>
    31cc:	e0c8      	b.n	3360 <__aeabi_dsub+0x648>
    31ce:	1c51      	adds	r1, r2, #1
    31d0:	1c03      	adds	r3, r0, #0
    31d2:	4655      	mov	r5, sl
    31d4:	1c17      	adds	r7, r2, #0
    31d6:	e631      	b.n	2e3c <__aeabi_dsub+0x124>
    31d8:	2900      	cmp	r1, #0
    31da:	d165      	bne.n	32a8 <__aeabi_dsub+0x590>
    31dc:	4657      	mov	r7, sl
    31de:	4307      	orrs	r7, r0
    31e0:	d100      	bne.n	31e4 <__aeabi_dsub+0x4cc>
    31e2:	e0c8      	b.n	3376 <__aeabi_dsub+0x65e>
    31e4:	1c03      	adds	r3, r0, #0
    31e6:	2080      	movs	r0, #128	; 0x80
    31e8:	4655      	mov	r5, sl
    31ea:	464c      	mov	r4, r9
    31ec:	0101      	lsls	r1, r0, #4
    31ee:	4f77      	ldr	r7, [pc, #476]	; (33cc <__aeabi_dsub+0x6b4>)
    31f0:	e624      	b.n	2e3c <__aeabi_dsub+0x124>
    31f2:	2380      	movs	r3, #128	; 0x80
    31f4:	1c37      	adds	r7, r6, #0
    31f6:	0119      	lsls	r1, r3, #4
    31f8:	2604      	movs	r6, #4
    31fa:	2300      	movs	r3, #0
    31fc:	e637      	b.n	2e6e <__aeabi_dsub+0x156>
    31fe:	3f01      	subs	r7, #1
    3200:	2f00      	cmp	r7, #0
    3202:	d16e      	bne.n	32e2 <__aeabi_dsub+0x5ca>
    3204:	4654      	mov	r4, sl
    3206:	4661      	mov	r1, ip
    3208:	1b65      	subs	r5, r4, r5
    320a:	1a40      	subs	r0, r0, r1
    320c:	e768      	b.n	30e0 <__aeabi_dsub+0x3c8>
    320e:	4667      	mov	r7, ip
    3210:	433d      	orrs	r5, r7
    3212:	2300      	movs	r3, #0
    3214:	2d00      	cmp	r5, #0
    3216:	d100      	bne.n	321a <__aeabi_dsub+0x502>
    3218:	e75f      	b.n	30da <__aeabi_dsub+0x3c2>
    321a:	2501      	movs	r5, #1
    321c:	e75d      	b.n	30da <__aeabi_dsub+0x3c2>
    321e:	2680      	movs	r6, #128	; 0x80
    3220:	0131      	lsls	r1, r6, #4
    3222:	2300      	movs	r3, #0
    3224:	2604      	movs	r6, #4
    3226:	e622      	b.n	2e6e <__aeabi_dsub+0x156>
    3228:	4968      	ldr	r1, [pc, #416]	; (33cc <__aeabi_dsub+0x6b4>)
    322a:	428a      	cmp	r2, r1
    322c:	d100      	bne.n	3230 <__aeabi_dsub+0x518>
    322e:	e0c1      	b.n	33b4 <__aeabi_dsub+0x69c>
    3230:	2780      	movs	r7, #128	; 0x80
    3232:	4666      	mov	r6, ip
    3234:	0439      	lsls	r1, r7, #16
    3236:	430e      	orrs	r6, r1
    3238:	46b4      	mov	ip, r6
    323a:	2b38      	cmp	r3, #56	; 0x38
    323c:	dd00      	ble.n	3240 <__aeabi_dsub+0x528>
    323e:	e0a2      	b.n	3386 <__aeabi_dsub+0x66e>
    3240:	2b1f      	cmp	r3, #31
    3242:	dd00      	ble.n	3246 <__aeabi_dsub+0x52e>
    3244:	e0d0      	b.n	33e8 <__aeabi_dsub+0x6d0>
    3246:	2120      	movs	r1, #32
    3248:	1ac9      	subs	r1, r1, r3
    324a:	1c2e      	adds	r6, r5, #0
    324c:	4667      	mov	r7, ip
    324e:	408f      	lsls	r7, r1
    3250:	408d      	lsls	r5, r1
    3252:	40de      	lsrs	r6, r3
    3254:	433e      	orrs	r6, r7
    3256:	1c29      	adds	r1, r5, #0
    3258:	4667      	mov	r7, ip
    325a:	1e4d      	subs	r5, r1, #1
    325c:	41a9      	sbcs	r1, r5
    325e:	40df      	lsrs	r7, r3
    3260:	1c35      	adds	r5, r6, #0
    3262:	430d      	orrs	r5, r1
    3264:	1c3e      	adds	r6, r7, #0
    3266:	4455      	add	r5, sl
    3268:	4555      	cmp	r5, sl
    326a:	419b      	sbcs	r3, r3
    326c:	1830      	adds	r0, r6, r0
    326e:	425e      	negs	r6, r3
    3270:	1983      	adds	r3, r0, r6
    3272:	1c17      	adds	r7, r2, #0
    3274:	e63a      	b.n	2eec <__aeabi_dsub+0x1d4>
    3276:	4656      	mov	r6, sl
    3278:	4306      	orrs	r6, r0
    327a:	d054      	beq.n	3326 <__aeabi_dsub+0x60e>
    327c:	4657      	mov	r7, sl
    327e:	1bea      	subs	r2, r5, r7
    3280:	4663      	mov	r3, ip
    3282:	4295      	cmp	r5, r2
    3284:	41b6      	sbcs	r6, r6
    3286:	1a19      	subs	r1, r3, r0
    3288:	4273      	negs	r3, r6
    328a:	1acb      	subs	r3, r1, r3
    328c:	021e      	lsls	r6, r3, #8
    328e:	d400      	bmi.n	3292 <__aeabi_dsub+0x57a>
    3290:	e0a2      	b.n	33d8 <__aeabi_dsub+0x6c0>
    3292:	1b7d      	subs	r5, r7, r5
    3294:	4664      	mov	r4, ip
    3296:	45aa      	cmp	sl, r5
    3298:	41bf      	sbcs	r7, r7
    329a:	1b00      	subs	r0, r0, r4
    329c:	427a      	negs	r2, r7
    329e:	1a83      	subs	r3, r0, r2
    32a0:	464c      	mov	r4, r9
    32a2:	2101      	movs	r1, #1
    32a4:	2700      	movs	r7, #0
    32a6:	e5c9      	b.n	2e3c <__aeabi_dsub+0x124>
    32a8:	4656      	mov	r6, sl
    32aa:	4306      	orrs	r6, r0
    32ac:	d03f      	beq.n	332e <__aeabi_dsub+0x616>
    32ae:	4662      	mov	r2, ip
    32b0:	2180      	movs	r1, #128	; 0x80
    32b2:	0757      	lsls	r7, r2, #29
    32b4:	08ed      	lsrs	r5, r5, #3
    32b6:	08d3      	lsrs	r3, r2, #3
    32b8:	030a      	lsls	r2, r1, #12
    32ba:	433d      	orrs	r5, r7
    32bc:	4213      	tst	r3, r2
    32be:	d008      	beq.n	32d2 <__aeabi_dsub+0x5ba>
    32c0:	08c6      	lsrs	r6, r0, #3
    32c2:	4216      	tst	r6, r2
    32c4:	d105      	bne.n	32d2 <__aeabi_dsub+0x5ba>
    32c6:	4655      	mov	r5, sl
    32c8:	08ec      	lsrs	r4, r5, #3
    32ca:	0745      	lsls	r5, r0, #29
    32cc:	4325      	orrs	r5, r4
    32ce:	1c33      	adds	r3, r6, #0
    32d0:	464c      	mov	r4, r9
    32d2:	0f68      	lsrs	r0, r5, #29
    32d4:	00db      	lsls	r3, r3, #3
    32d6:	2680      	movs	r6, #128	; 0x80
    32d8:	4303      	orrs	r3, r0
    32da:	00ed      	lsls	r5, r5, #3
    32dc:	0131      	lsls	r1, r6, #4
    32de:	4f3b      	ldr	r7, [pc, #236]	; (33cc <__aeabi_dsub+0x6b4>)
    32e0:	e5ac      	b.n	2e3c <__aeabi_dsub+0x124>
    32e2:	493a      	ldr	r1, [pc, #232]	; (33cc <__aeabi_dsub+0x6b4>)
    32e4:	428a      	cmp	r2, r1
    32e6:	d000      	beq.n	32ea <__aeabi_dsub+0x5d2>
    32e8:	e6e4      	b.n	30b4 <__aeabi_dsub+0x39c>
    32ea:	2680      	movs	r6, #128	; 0x80
    32ec:	1c03      	adds	r3, r0, #0
    32ee:	4655      	mov	r5, sl
    32f0:	464c      	mov	r4, r9
    32f2:	0131      	lsls	r1, r6, #4
    32f4:	1c17      	adds	r7, r2, #0
    32f6:	e5a1      	b.n	2e3c <__aeabi_dsub+0x124>
    32f8:	2f00      	cmp	r7, #0
    32fa:	d04c      	beq.n	3396 <__aeabi_dsub+0x67e>
    32fc:	4653      	mov	r3, sl
    32fe:	4303      	orrs	r3, r0
    3300:	d015      	beq.n	332e <__aeabi_dsub+0x616>
    3302:	4662      	mov	r2, ip
    3304:	2680      	movs	r6, #128	; 0x80
    3306:	08ed      	lsrs	r5, r5, #3
    3308:	0751      	lsls	r1, r2, #29
    330a:	08d3      	lsrs	r3, r2, #3
    330c:	0337      	lsls	r7, r6, #12
    330e:	430d      	orrs	r5, r1
    3310:	423b      	tst	r3, r7
    3312:	d0de      	beq.n	32d2 <__aeabi_dsub+0x5ba>
    3314:	08c2      	lsrs	r2, r0, #3
    3316:	423a      	tst	r2, r7
    3318:	d1db      	bne.n	32d2 <__aeabi_dsub+0x5ba>
    331a:	4655      	mov	r5, sl
    331c:	08e9      	lsrs	r1, r5, #3
    331e:	0745      	lsls	r5, r0, #29
    3320:	1c13      	adds	r3, r2, #0
    3322:	430d      	orrs	r5, r1
    3324:	e7d5      	b.n	32d2 <__aeabi_dsub+0x5ba>
    3326:	4663      	mov	r3, ip
    3328:	2101      	movs	r1, #1
    332a:	2700      	movs	r7, #0
    332c:	e586      	b.n	2e3c <__aeabi_dsub+0x124>
    332e:	2780      	movs	r7, #128	; 0x80
    3330:	0139      	lsls	r1, r7, #4
    3332:	4663      	mov	r3, ip
    3334:	4f25      	ldr	r7, [pc, #148]	; (33cc <__aeabi_dsub+0x6b4>)
    3336:	e581      	b.n	2e3c <__aeabi_dsub+0x124>
    3338:	2200      	movs	r2, #0
    333a:	e73a      	b.n	31b2 <__aeabi_dsub+0x49a>
    333c:	1c3c      	adds	r4, r7, #0
    333e:	3c20      	subs	r4, #32
    3340:	4666      	mov	r6, ip
    3342:	40e6      	lsrs	r6, r4
    3344:	1c33      	adds	r3, r6, #0
    3346:	2f20      	cmp	r7, #32
    3348:	d05f      	beq.n	340a <__aeabi_dsub+0x6f2>
    334a:	2440      	movs	r4, #64	; 0x40
    334c:	1be7      	subs	r7, r4, r7
    334e:	4666      	mov	r6, ip
    3350:	40be      	lsls	r6, r7
    3352:	1c31      	adds	r1, r6, #0
    3354:	430d      	orrs	r5, r1
    3356:	1e69      	subs	r1, r5, #1
    3358:	418d      	sbcs	r5, r1
    335a:	431d      	orrs	r5, r3
    335c:	2300      	movs	r3, #0
    335e:	e6bc      	b.n	30da <__aeabi_dsub+0x3c2>
    3360:	3b01      	subs	r3, #1
    3362:	2b00      	cmp	r3, #0
    3364:	d122      	bne.n	33ac <__aeabi_dsub+0x694>
    3366:	4455      	add	r5, sl
    3368:	4555      	cmp	r5, sl
    336a:	41bf      	sbcs	r7, r7
    336c:	427b      	negs	r3, r7
    336e:	4460      	add	r0, ip
    3370:	18c3      	adds	r3, r0, r3
    3372:	1c17      	adds	r7, r2, #0
    3374:	e5ba      	b.n	2eec <__aeabi_dsub+0x1d4>
    3376:	2180      	movs	r1, #128	; 0x80
    3378:	2204      	movs	r2, #4
    337a:	2400      	movs	r4, #0
    337c:	0109      	lsls	r1, r1, #4
    337e:	4b15      	ldr	r3, [pc, #84]	; (33d4 <__aeabi_dsub+0x6bc>)
    3380:	4256      	negs	r6, r2
    3382:	4f12      	ldr	r7, [pc, #72]	; (33cc <__aeabi_dsub+0x6b4>)
    3384:	e573      	b.n	2e6e <__aeabi_dsub+0x156>
    3386:	4663      	mov	r3, ip
    3388:	431d      	orrs	r5, r3
    338a:	2600      	movs	r6, #0
    338c:	2d00      	cmp	r5, #0
    338e:	d100      	bne.n	3392 <__aeabi_dsub+0x67a>
    3390:	e769      	b.n	3266 <__aeabi_dsub+0x54e>
    3392:	2501      	movs	r5, #1
    3394:	e767      	b.n	3266 <__aeabi_dsub+0x54e>
    3396:	2280      	movs	r2, #128	; 0x80
    3398:	1c03      	adds	r3, r0, #0
    339a:	4655      	mov	r5, sl
    339c:	0111      	lsls	r1, r2, #4
    339e:	4f0b      	ldr	r7, [pc, #44]	; (33cc <__aeabi_dsub+0x6b4>)
    33a0:	e54c      	b.n	2e3c <__aeabi_dsub+0x124>
    33a2:	1c03      	adds	r3, r0, #0
    33a4:	4655      	mov	r5, sl
    33a6:	2101      	movs	r1, #1
    33a8:	2700      	movs	r7, #0
    33aa:	e547      	b.n	2e3c <__aeabi_dsub+0x124>
    33ac:	4907      	ldr	r1, [pc, #28]	; (33cc <__aeabi_dsub+0x6b4>)
    33ae:	428a      	cmp	r2, r1
    33b0:	d000      	beq.n	33b4 <__aeabi_dsub+0x69c>
    33b2:	e742      	b.n	323a <__aeabi_dsub+0x522>
    33b4:	2180      	movs	r1, #128	; 0x80
    33b6:	1c03      	adds	r3, r0, #0
    33b8:	4655      	mov	r5, sl
    33ba:	0109      	lsls	r1, r1, #4
    33bc:	1c17      	adds	r7, r2, #0
    33be:	e53d      	b.n	2e3c <__aeabi_dsub+0x124>
    33c0:	057f      	lsls	r7, r7, #21
    33c2:	0d7f      	lsrs	r7, r7, #21
    33c4:	2600      	movs	r6, #0
    33c6:	2200      	movs	r2, #0
    33c8:	e55e      	b.n	2e88 <__aeabi_dsub+0x170>
    33ca:	46c0      	nop			; (mov r8, r8)
    33cc:	000007ff 	.word	0x000007ff
    33d0:	ff7fffff 	.word	0xff7fffff
    33d4:	007fffff 	.word	0x007fffff
    33d8:	1c1d      	adds	r5, r3, #0
    33da:	4315      	orrs	r5, r2
    33dc:	d100      	bne.n	33e0 <__aeabi_dsub+0x6c8>
    33de:	e689      	b.n	30f4 <__aeabi_dsub+0x3dc>
    33e0:	1c15      	adds	r5, r2, #0
    33e2:	2101      	movs	r1, #1
    33e4:	2700      	movs	r7, #0
    33e6:	e529      	b.n	2e3c <__aeabi_dsub+0x124>
    33e8:	1c1f      	adds	r7, r3, #0
    33ea:	3f20      	subs	r7, #32
    33ec:	4661      	mov	r1, ip
    33ee:	40f9      	lsrs	r1, r7
    33f0:	2b20      	cmp	r3, #32
    33f2:	d010      	beq.n	3416 <__aeabi_dsub+0x6fe>
    33f4:	2640      	movs	r6, #64	; 0x40
    33f6:	1af3      	subs	r3, r6, r3
    33f8:	4667      	mov	r7, ip
    33fa:	409f      	lsls	r7, r3
    33fc:	1c3b      	adds	r3, r7, #0
    33fe:	431d      	orrs	r5, r3
    3400:	1e6b      	subs	r3, r5, #1
    3402:	419d      	sbcs	r5, r3
    3404:	430d      	orrs	r5, r1
    3406:	2600      	movs	r6, #0
    3408:	e72d      	b.n	3266 <__aeabi_dsub+0x54e>
    340a:	2100      	movs	r1, #0
    340c:	e7a2      	b.n	3354 <__aeabi_dsub+0x63c>
    340e:	1c3d      	adds	r5, r7, #0
    3410:	2101      	movs	r1, #1
    3412:	2700      	movs	r7, #0
    3414:	e512      	b.n	2e3c <__aeabi_dsub+0x124>
    3416:	2300      	movs	r3, #0
    3418:	e7f1      	b.n	33fe <__aeabi_dsub+0x6e6>
    341a:	46c0      	nop			; (mov r8, r8)

0000341c <__aeabi_d2iz>:
    341c:	4a13      	ldr	r2, [pc, #76]	; (346c <__aeabi_d2iz+0x50>)
    341e:	030b      	lsls	r3, r1, #12
    3420:	b530      	push	{r4, r5, lr}
    3422:	1c05      	adds	r5, r0, #0
    3424:	0048      	lsls	r0, r1, #1
    3426:	0b1c      	lsrs	r4, r3, #12
    3428:	0fc9      	lsrs	r1, r1, #31
    342a:	0d43      	lsrs	r3, r0, #21
    342c:	2000      	movs	r0, #0
    342e:	4293      	cmp	r3, r2
    3430:	dd11      	ble.n	3456 <__aeabi_d2iz+0x3a>
    3432:	480f      	ldr	r0, [pc, #60]	; (3470 <__aeabi_d2iz+0x54>)
    3434:	4283      	cmp	r3, r0
    3436:	dc0f      	bgt.n	3458 <__aeabi_d2iz+0x3c>
    3438:	2280      	movs	r2, #128	; 0x80
    343a:	0350      	lsls	r0, r2, #13
    343c:	4a0d      	ldr	r2, [pc, #52]	; (3474 <__aeabi_d2iz+0x58>)
    343e:	4304      	orrs	r4, r0
    3440:	1ad0      	subs	r0, r2, r3
    3442:	281f      	cmp	r0, #31
    3444:	dd0b      	ble.n	345e <__aeabi_d2iz+0x42>
    3446:	4d0c      	ldr	r5, [pc, #48]	; (3478 <__aeabi_d2iz+0x5c>)
    3448:	1aeb      	subs	r3, r5, r3
    344a:	40dc      	lsrs	r4, r3
    344c:	1c22      	adds	r2, r4, #0
    344e:	4250      	negs	r0, r2
    3450:	2900      	cmp	r1, #0
    3452:	d100      	bne.n	3456 <__aeabi_d2iz+0x3a>
    3454:	1c10      	adds	r0, r2, #0
    3456:	bd30      	pop	{r4, r5, pc}
    3458:	4c08      	ldr	r4, [pc, #32]	; (347c <__aeabi_d2iz+0x60>)
    345a:	1908      	adds	r0, r1, r4
    345c:	e7fb      	b.n	3456 <__aeabi_d2iz+0x3a>
    345e:	40c5      	lsrs	r5, r0
    3460:	4807      	ldr	r0, [pc, #28]	; (3480 <__aeabi_d2iz+0x64>)
    3462:	1c2a      	adds	r2, r5, #0
    3464:	181d      	adds	r5, r3, r0
    3466:	40ac      	lsls	r4, r5
    3468:	4322      	orrs	r2, r4
    346a:	e7f0      	b.n	344e <__aeabi_d2iz+0x32>
    346c:	000003fe 	.word	0x000003fe
    3470:	0000041d 	.word	0x0000041d
    3474:	00000433 	.word	0x00000433
    3478:	00000413 	.word	0x00000413
    347c:	7fffffff 	.word	0x7fffffff
    3480:	fffffbed 	.word	0xfffffbed

00003484 <__aeabi_i2d>:
    3484:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3486:	1e04      	subs	r4, r0, #0
    3488:	d02d      	beq.n	34e6 <__aeabi_i2d+0x62>
    348a:	0fc5      	lsrs	r5, r0, #31
    348c:	d000      	beq.n	3490 <__aeabi_i2d+0xc>
    348e:	4244      	negs	r4, r0
    3490:	1c20      	adds	r0, r4, #0
    3492:	f000 f863 	bl	355c <__clzsi2>
    3496:	4916      	ldr	r1, [pc, #88]	; (34f0 <__aeabi_i2d+0x6c>)
    3498:	1a0a      	subs	r2, r1, r0
    349a:	280a      	cmp	r0, #10
    349c:	dd16      	ble.n	34cc <__aeabi_i2d+0x48>
    349e:	380b      	subs	r0, #11
    34a0:	4084      	lsls	r4, r0
    34a2:	0557      	lsls	r7, r2, #21
    34a4:	0326      	lsls	r6, r4, #12
    34a6:	0d7a      	lsrs	r2, r7, #21
    34a8:	0b36      	lsrs	r6, r6, #12
    34aa:	2700      	movs	r7, #0
    34ac:	2000      	movs	r0, #0
    34ae:	2100      	movs	r1, #0
    34b0:	1c38      	adds	r0, r7, #0
    34b2:	0d0f      	lsrs	r7, r1, #20
    34b4:	053b      	lsls	r3, r7, #20
    34b6:	4c0f      	ldr	r4, [pc, #60]	; (34f4 <__aeabi_i2d+0x70>)
    34b8:	4333      	orrs	r3, r6
    34ba:	401c      	ands	r4, r3
    34bc:	0516      	lsls	r6, r2, #20
    34be:	4334      	orrs	r4, r6
    34c0:	0061      	lsls	r1, r4, #1
    34c2:	084a      	lsrs	r2, r1, #1
    34c4:	07ed      	lsls	r5, r5, #31
    34c6:	1c11      	adds	r1, r2, #0
    34c8:	4329      	orrs	r1, r5
    34ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    34cc:	260b      	movs	r6, #11
    34ce:	1c01      	adds	r1, r0, #0
    34d0:	1a30      	subs	r0, r6, r0
    34d2:	3115      	adds	r1, #21
    34d4:	1c23      	adds	r3, r4, #0
    34d6:	40c4      	lsrs	r4, r0
    34d8:	408b      	lsls	r3, r1
    34da:	0552      	lsls	r2, r2, #21
    34dc:	0321      	lsls	r1, r4, #12
    34de:	1c1f      	adds	r7, r3, #0
    34e0:	0b0e      	lsrs	r6, r1, #12
    34e2:	0d52      	lsrs	r2, r2, #21
    34e4:	e7e2      	b.n	34ac <__aeabi_i2d+0x28>
    34e6:	2500      	movs	r5, #0
    34e8:	2200      	movs	r2, #0
    34ea:	2600      	movs	r6, #0
    34ec:	2700      	movs	r7, #0
    34ee:	e7dd      	b.n	34ac <__aeabi_i2d+0x28>
    34f0:	0000041e 	.word	0x0000041e
    34f4:	800fffff 	.word	0x800fffff

000034f8 <__aeabi_ui2d>:
    34f8:	b570      	push	{r4, r5, r6, lr}
    34fa:	1e04      	subs	r4, r0, #0
    34fc:	d026      	beq.n	354c <__aeabi_ui2d+0x54>
    34fe:	f000 f82d 	bl	355c <__clzsi2>
    3502:	4914      	ldr	r1, [pc, #80]	; (3554 <__aeabi_ui2d+0x5c>)
    3504:	1a0a      	subs	r2, r1, r0
    3506:	280a      	cmp	r0, #10
    3508:	dd13      	ble.n	3532 <__aeabi_ui2d+0x3a>
    350a:	380b      	subs	r0, #11
    350c:	4084      	lsls	r4, r0
    350e:	0556      	lsls	r6, r2, #21
    3510:	0324      	lsls	r4, r4, #12
    3512:	0d72      	lsrs	r2, r6, #21
    3514:	0b25      	lsrs	r5, r4, #12
    3516:	2600      	movs	r6, #0
    3518:	2000      	movs	r0, #0
    351a:	2100      	movs	r1, #0
    351c:	1c30      	adds	r0, r6, #0
    351e:	0d0e      	lsrs	r6, r1, #20
    3520:	0533      	lsls	r3, r6, #20
    3522:	4c0d      	ldr	r4, [pc, #52]	; (3558 <__aeabi_ui2d+0x60>)
    3524:	432b      	orrs	r3, r5
    3526:	0511      	lsls	r1, r2, #20
    3528:	401c      	ands	r4, r3
    352a:	430c      	orrs	r4, r1
    352c:	0065      	lsls	r5, r4, #1
    352e:	0869      	lsrs	r1, r5, #1
    3530:	bd70      	pop	{r4, r5, r6, pc}
    3532:	230b      	movs	r3, #11
    3534:	1c05      	adds	r5, r0, #0
    3536:	1a18      	subs	r0, r3, r0
    3538:	3515      	adds	r5, #21
    353a:	1c21      	adds	r1, r4, #0
    353c:	40c4      	lsrs	r4, r0
    353e:	40a9      	lsls	r1, r5
    3540:	0552      	lsls	r2, r2, #21
    3542:	0325      	lsls	r5, r4, #12
    3544:	1c0e      	adds	r6, r1, #0
    3546:	0b2d      	lsrs	r5, r5, #12
    3548:	0d52      	lsrs	r2, r2, #21
    354a:	e7e5      	b.n	3518 <__aeabi_ui2d+0x20>
    354c:	2200      	movs	r2, #0
    354e:	2500      	movs	r5, #0
    3550:	2600      	movs	r6, #0
    3552:	e7e1      	b.n	3518 <__aeabi_ui2d+0x20>
    3554:	0000041e 	.word	0x0000041e
    3558:	800fffff 	.word	0x800fffff

0000355c <__clzsi2>:
    355c:	211c      	movs	r1, #28
    355e:	2301      	movs	r3, #1
    3560:	041b      	lsls	r3, r3, #16
    3562:	4298      	cmp	r0, r3
    3564:	d301      	bcc.n	356a <__clzsi2+0xe>
    3566:	0c00      	lsrs	r0, r0, #16
    3568:	3910      	subs	r1, #16
    356a:	0a1b      	lsrs	r3, r3, #8
    356c:	4298      	cmp	r0, r3
    356e:	d301      	bcc.n	3574 <__clzsi2+0x18>
    3570:	0a00      	lsrs	r0, r0, #8
    3572:	3908      	subs	r1, #8
    3574:	091b      	lsrs	r3, r3, #4
    3576:	4298      	cmp	r0, r3
    3578:	d301      	bcc.n	357e <__clzsi2+0x22>
    357a:	0900      	lsrs	r0, r0, #4
    357c:	3904      	subs	r1, #4
    357e:	a202      	add	r2, pc, #8	; (adr r2, 3588 <__clzsi2+0x2c>)
    3580:	5c10      	ldrb	r0, [r2, r0]
    3582:	1840      	adds	r0, r0, r1
    3584:	4770      	bx	lr
    3586:	46c0      	nop			; (mov r8, r8)
    3588:	02020304 	.word	0x02020304
    358c:	01010101 	.word	0x01010101
	...

00003598 <_ZL18port_to_output_PGM>:
    3598:	00000000 50003ffc 50013ffc 00000000     .....?.P.?.P....
    35a8:	00000000                                ....

000035ac <_ZL27digital_pin_to_bit_mask_PGM>:
    35ac:	00800040 02000100 00040002 00100008     @...............
    35bc:	01000080 04000200 00400020 00010020     ........ .@. ...
    35cc:	00040002 00100008                       ........

000035d4 <_ZL23digital_pin_to_port_PGM>:
    35d4:	02020202 01010101 01010101 02020101     ................
    35e4:	02020202                                ....

000035e8 <_ZL16port_to_mode_PGM>:
    35e8:	00000000 50008000 50018000 00000000     .......P...P....
    35f8:	00000000 6e69614d 6e654d20 202d2075     ....Main Menu - 
    3608:	74736552 74636972 5020726f 6574616c     Restrictor Plate
    3618:	2e307620 2e310031 454c2020 4e4f2044      v0.1.1.  LED ON
    3628:	202e3200 44454c20 46464f20 202e3300     .2.  LED OFF.3. 
    3638:	55504d20 30353036 4f485720 5f4d415f      MPU6050 WHO_AM_
    3648:	2e340049 6c432020 20726165 65656c73     I.4.  Clear slee
    3658:	2e350070 65522020 58206461 72796720     p.5.  Read X gyr
    3668:	2e36006f 65522020 74206461 00706d65     o.6.  Read temp.
    3678:	203e3d3d 55504d00 30353036 4f485720     ==> .MPU6050 WHO
    3688:	5f4d415f 30203a49 504d0078 35303655     _AM_I: 0x.MPU605
    3698:	2d582030 73697861 55504d00 30353036     0 X-axis.MPU6050
    36a8:	61205820 3a736978 00783020 3655504d      X axis: 0x.MPU6
    36b8:	20303530 706d6554 55504d00 30353036     050 Temp.MPU6050
    36c8:	6d657420 46282070 00203a29 00000000      temp (F): .....

000036d8 <_ZTV14HardwareSerial>:
	...
    36e0:	0000060d 00000b0d 000005a1 000005dd     ................
    36f0:	000005b9 00000609 006e616e 00666e69     ........nan.inf.
    3700:	0066766f 0000002e 00000043              ovf.....C...

0000370c <_global_impure_ptr>:
    370c:	10000008 00002154 00002320 00002414     ....T!.. #...$..
    371c:	000023b0 00002414 0000238a 00002414     .#...$...#...$..
    372c:	000023b0 00002320 00002320 0000238a     .#.. #.. #...#..
    373c:	000023b0 00002436 00002436 00002436     .#..6$..6$..6$..
    374c:	0000241c 00002964 00002bc0 00002bc0     .$..d)...+...+..
    375c:	00002b94 00002b0c 00002b0c 00002bb4     .+...+...+...+..
    376c:	00002b94 00002b0c 00002bb4 00002b0c     .+...+...+...+..
    377c:	00002b94 00002bac 00002bac 00002bac     .+...+...+...+..
    378c:	00002bc4                                .+..

00003790 <_init>:
    3790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3792:	46c0      	nop			; (mov r8, r8)
    3794:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3796:	bc08      	pop	{r3}
    3798:	469e      	mov	lr, r3
    379a:	4770      	bx	lr

0000379c <__init_array_start>:
    379c:	000014e5 	.word	0x000014e5

000037a0 <__frame_dummy_init_array_entry>:
    37a0:	000000c9 00000805                       ........

000037a8 <_fini>:
    37a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    37aa:	46c0      	nop			; (mov r8, r8)
    37ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
    37ae:	bc08      	pop	{r3}
    37b0:	469e      	mov	lr, r3
    37b2:	4770      	bx	lr

000037b4 <__fini_array_start>:
    37b4:	000000a1 	.word	0x000000a1
